{"version":3,"file":"396.1c8fdd9f51156ae1ae49.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEe,MAAMK,eAAN,SAA8BJ,gDAA9B,CAAkD;EACzC,WAATM,SAAS,GAAG;IACnB,OAAO;MACHC,IAAI,EAAER,0DADH;MAEHU,QAAQ,EAAEV,0DAAgBW;IAFvB,CAAP;EAIH;;EAEDC,MAAM,GAAG;IACL,MAAM;MAACJ;IAAD,IAAS,KAAKK,KAApB;IACA,MAAMC,UAAU,GAAG,CAAAN,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEO,SAAN,MAAoB,CAAvC;IAEA,oBACI;MAAK,SAAS,EAAC;IAAf,gBACI,iDAAC,kDAAD;MACI,SAAS,EAAC,wBADd;MAEI,EAAE,aAAMD,UAAU,GAAG,KAAKD,KAAL,CAAWL,IAAX,CAAgBQ,IAAnB,GAA0B,EAA1C;IAFN,gBAII,iDAAC,sFAAD,OAJJ,eAKI,+DACKF,UAAU,gBACP,iDAAC,2DAAD;MACI,EAAE,EAAC,mCADP;MAEI,cAAc,EAAC,oBAFnB;MAGI,MAAM,EAAE;QACJJ,QAAQ,EAAE,KAAKG,KAAL,CAAWH,QAAX,GAAsB,KAAKG,KAAL,CAAWH,QAAjC,GAA4C,KAAKG,KAAL,CAAWL,IAAX,CAAgBQ;MADlE;IAHZ,EADO,gBASP,iDAAC,2DAAD;MACI,EAAE,EAAC,uBADP;MAEI,cAAc,EAAC;IAFnB,EAVR,CALJ,CADJ,CADJ;EA0BH;;AAtC4D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVjE;AACA;AAEA;AAEA;AAMA;AAEO,SAASI,gBAAT,CAA0BC,KAA1B,EAA8C;EACjD,OAAOA,KAAK,CAACC,QAAN,CAAeC,YAAf,CAA4BC,aAAnC;AACH;AAEM,SAASC,gBAAT,CAA0BJ,KAA1B,EAA8C;EACjD,OAAOA,KAAK,CAACC,QAAN,CAAeC,YAAf,CAA4BG,aAAnC;AACH;AAEM,SAASC,WAAT,CAAqBN,KAArB,EAAyC;EAC5C,OAAOA,KAAK,CAACC,QAAN,CAAeC,YAAf,CAA4BK,QAAnC;AACH;AAEM,SAASC,YAAT,CAAsBR,KAAtB,EAA0C;EAC7C,OAAOA,KAAK,CAACC,QAAN,CAAeC,YAAf,CAA4BO,SAAnC;AACH;AAEM,MAAMC,kBAAoD,GAAGd,8BAAc,CAC9E,oBAD8E,EAE9EE,wBAF8E,EAG7EE,KAAD,IAAwBA,KAAK,CAACC,QAAN,CAAeC,YAAf,CAA4BS,eAH0B,EAI9E,CAACC,IAAD,EAAOC,GAAP,KAAe;EACX,OAAOD,IAAI,GAAGC,GAAH,GAAS,EAApB;AACH,CAN6E,CAA3E;AASA,MAAMC,aAA+C,GAAGlB,8BAAc,CACzE,eADyE,EAEzEE,wBAFyE,EAGxEE,KAAD,IAAwBA,KAAK,CAACC,QAAN,CAAeC,YAAf,CAA4Ba,UAHqB,EAIzE,CAACH,IAAD,EAAOC,GAAP,KAAe;EACX,OAAOD,IAAI,GAAGC,GAAH,GAAS,EAApB;AACH,CANwE,CAAtE;AASA,SAASG,iBAAT,CAA2BhB,KAA3B,EAA+C;EAClD,OAAOA,KAAK,CAACC,QAAN,CAAeC,YAAf,CAA4Be,cAAnC;AACH;AAED;AACA;AACA;;AACO,MAAMC,6BAAwE,GAAGtB,8BAAc,CAClG,+BADkG,EAElGC,8BAFkG,EAGlGO,gBAHkG,EAIlG,CAACe,MAAD,EAASC,KAAT,KAAmB;EACf,OAAOC,MAAM,CAACC,MAAP,CAAcF,KAAd,EAAqBG,MAArB,CAA6BC,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcN,MAAjD,CAAP;AACH,CANiG,CAA/F;AASA,MAAMO,cAAgE,GAAG9B,8BAAc,CAC1F,gBAD0F,EAE1FU,WAF0F,EAG1FU,iBAH0F,EAI1F,CAACT,QAAD,EAAWU,cAAX,KAA8B;EAC1B,uCACOV,QADP,GAEOU,cAFP;AAIH,CATyF,CAAvF;AAYA,MAAMU,2BAA8D,GAAG/B,8BAAc,CACxF,6BADwF,EAExF8B,cAFwF,EAGxF7B,8BAHwF,EAIxF,CAACU,QAAD,EAAWqB,aAAX,KAA6B;EACzB,OAAOP,MAAM,CAACC,MAAP,CAAcf,QAAd,EAAwBgB,MAAxB,CAAgCM,OAAD,IAAa;IAC/C,OAAOA,OAAO,KAAK,CAACA,OAAO,CAACJ,OAAT,IAAoBI,OAAO,CAACJ,OAAR,KAAoBG,aAA7C,CAAP,IAAsEC,OAAO,CAACC,aAArF;EACH,CAFM,EAEJC,IAFI,CAEC,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,YAAF,CAAeC,aAAf,CAA6BF,CAAC,CAACC,YAA/B,CAFX,CAAP;AAGH,CARuF,CAArF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3EP;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEe,MAAMK,aAAN,SAA4B3D,mBAA5B,CAAgD;EAkB3D4D,WAAW,CAAChD,KAAD,EAAQ;IACf,MAAMA,KAAN;;IADe,oDAQHiD,CAAD,IAAO;MAClB,KAAKC,QAAL,CAAc;QACVnB,MAAM,EAAEkB,CAAC,CAACE,MAAF,CAASC;MADP,CAAd;IAGH,CAZkB;;IAGf,KAAK5C,KAAL,GAAa;MACTuB,MAAM,EAAE;IADC,CAAb;EAGH;;EAQDhC,MAAM,GAAG;IACL,MAAMgC,MAAM,GAAG,KAAKvB,KAAL,CAAWuB,MAAX,CAAkBsB,WAAlB,EAAf;IAEA,IAAIC,QAAJ;;IACA,IAAI,KAAKtD,KAAL,CAAWuD,OAAf,EAAwB;MACpBD,QAAQ,gBAAG,oBAAC,6BAAD,OAAX;IACH,CAFD,MAEO;MACHA,QAAQ,GAAG,KAAKtD,KAAL,CAAWsD,QAAtB;MACA,IAAIE,WAAW,GAAG,IAAlB;;MACA,IAAI,OAAOF,QAAP,KAAoB,UAAxB,EAAoC;QAChC,CAACA,QAAD,EAAWE,WAAX,IAA0BF,QAAQ,CAACvB,MAAD,CAAlC;MACH;;MACDuB,QAAQ,GAAGlE,kBAAA,CAAmBkE,QAAnB,EAA8BK,KAAD,IAAW;QAC/C,oBAAOvE,kBAAA,CAAmBuE,KAAnB,EAA0B;UAAC5B;QAAD,CAA1B,CAAP;MACH,CAFU,CAAX;;MAGA,IAAIuB,QAAQ,CAACO,MAAT,KAAoB,CAApB,IAAyB,CAACL,WAA9B,EAA2C;QACvC,IAAI,CAACzB,MAAL,EAAa;UACT,IAAI,KAAK/B,KAAL,CAAW8D,SAAf,EAA0B;YACtBR,QAAQ,gBACJ;cAAK,SAAS,EAAC;YAAf,GACK,KAAKtD,KAAL,CAAW8D,SADhB,CADJ;UAKH;QACJ,CARD,MAQO,IAAI,KAAK9D,KAAL,CAAW+D,eAAf,EAAgC;UACnCT,QAAQ,gBACJ;YACI,SAAS,EAAC,4CADd;YAEI,EAAE,EAAC;UAFP,gBAIKlE,kBAAA,CAAmB,KAAKY,KAAL,CAAW+D,eAA9B,EAA+C;YAACjC,MAAM,EAAE;cAACkC,UAAU,EAAEjC;YAAb;UAAT,CAA/C,CAJL,CADJ;QAQH;MACJ;IACJ;;IAED,IAAIkC,OAAO,GAAG,IAAd;;IAEA,IAAI,KAAKjE,KAAL,CAAWiE,OAAX,IAAsB,KAAKjE,KAAL,CAAWkE,OAArC,EAA8C;MAC1CD,OAAO,gBACH,oBAAC,qBAAD;QACI,SAAS,EAAC,UADd;QAEI,EAAE,EAAE,KAAKjE,KAAL,CAAWiE;MAFnB,gBAII;QACI,IAAI,EAAC,QADT;QAEI,SAAS,EAAC,iBAFd;QAGI,EAAE,EAAE,KAAKjE,KAAL,CAAWmE;MAHnB,gBAKI,kCACK,KAAKnE,KAAL,CAAWkE,OADhB,CALJ,CAJJ,CADJ;IAgBH;;IAED,oBACI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAK,SAAS,EAAC;IAAf,gBACI,gCACK,KAAKlE,KAAL,CAAWoE,MADhB,CADJ,EAIKH,OAJL,CADJ,eAOI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,6BAAD,OADJ,eAEI;MACI,IAAI,EAAC,QADT;MAEI,SAAS,EAAC,cAFd;MAGI,WAAW,EAAE,KAAKjE,KAAL,CAAWqE,iBAH5B;MAII,KAAK,EAAE,KAAK7D,KAAL,CAAWuB,MAJtB;MAKI,QAAQ,EAAE,KAAKuC,YALnB;MAMI,KAAK,EAAEC,KAAK,CAACC,MANjB;MAOI,EAAE,EAAC;IAPP,EAFJ,CADJ,CAPJ,eAqBI;MAAM,SAAS,EAAC;IAAhB,GACK,KAAKxE,KAAL,CAAWyE,QADhB,CArBJ,eAwBI;MAAK,SAAS,EAAC;IAAf,GACKnB,QADL,CAxBJ,CADJ;EA8BH;;AAxH0D;;8BAA1CP,4BACE;EACfO,QAAQ,EAAEnE,8BAAA,CAAoB,CAACA,2BAAD,EAAiBA,2BAAjB,CAApB,CADK;EAEfiF,MAAM,EAAEjF,sCAFO;EAGf8E,OAAO,EAAE9E,6BAHM;EAIf+E,OAAO,EAAE/E,2BAJM;EAKfgF,WAAW,EAAEhF,6BALE;EAMf2E,SAAS,EAAE3E,2BANI;EAOf4E,eAAe,EAAE5E,2BAPF;EAQfsF,QAAQ,EAAEtF,2BARK;EASfoE,OAAO,EAAEpE,sCATM;EAUfkF,iBAAiB,EAAElF,6BAAgBW;AAVpB;;8BADFiD,+BAcK;EAClBsB,iBAAiB,EAAEzB,6BAAA,CAAsB,uBAAtB,EAA+C,QAA/C;AADD;;AA6G1B,MAAM2B,KAAK,GAAG;EACVC,MAAM,EAAE;IAACQ,QAAQ,EAAE,CAAX;IAAcC,UAAU,EAAE;EAA1B;AADE,CAAd;;;;;;;;;;;;;;;;;;;;;;;ACtIA;AACA;AAEA;AACA;AAEA;AAOA;AACA;AACA;AACA;AACA;AAEO,SAASK,aAAT,CAAuBC,GAAvB,EAAqCxD,MAArC,EAAsDyD,KAAtD,EAAoF;EACvF,IAAI,CAACzD,MAAL,EAAa;IACT,OAAO,IAAP;EACH;;EACD,MAAM0D,QAAQ,GAAGF,GAAG,CAACE,QAAJ,IAAgB,EAAjC;EACA,MAAMC,WAAW,GAAGH,GAAG,CAACG,WAAJ,IAAmB,EAAvC;EACA,MAAMC,WAAW,GAAGJ,GAAG,CAAC7C,YAAJ,IAAoB,EAAxC;EAEA,IAAIkD,aAAa,GAAG,QAApB;;EACA,IAAIJ,KAAK,IAAIA,KAAK,CAACC,QAAnB,EAA6B;IACzBG,aAAa,GAAGJ,KAAK,CAACC,QAAtB;EACH;;EACD,OAAO,EAAEA,QAAQ,CAACpC,WAAT,GAAuBwC,OAAvB,CAA+B9D,MAA/B,MAA2C,CAAC,CAA5C,IACL4D,WAAW,CAACtC,WAAZ,GAA0BwC,OAA1B,CAAkC9D,MAAlC,MAA8C,CAAC,CAD1C,IAEL2D,WAAW,CAACrC,WAAZ,GAA0BwC,OAA1B,CAAkC9D,MAAlC,MAA8C,CAAC,CAF1C,IAGL6D,aAAa,CAACvC,WAAd,GAA4BwC,OAA5B,CAAoC9D,MAApC,MAAgD,CAAC,CAH9C,CAAP;AAIH;AAwEc,MAAM+D,GAAN,SAAkB1G,mBAAlB,CAAoD;EACxD4D,WAAW,CAAChD,KAAD,EAAe;IAC7B,MAAMA,KAAN;;IAD6B,sCAWrB,MAAY;MACpB,KAAKA,KAAL,CAAW+F,OAAX,CAAmBC,SAAnB,CAA6B,KAAKhG,KAAL,CAAWuF,GAAX,CAAeU,OAA5C;IACH,CAbgC;;IAAA,uCAepB,MAAY;MACrB,KAAKjG,KAAL,CAAW+F,OAAX,CAAmBG,UAAnB,CAA8B,KAAKlG,KAAL,CAAWuF,GAAX,CAAeU,OAA7C;IACH,CAjBgC;;IAAA,kDAmBRE,EAAD,IAAsB;MAC1C,KAAKnG,KAAL,CAAW+F,OAAX,CAAmBK,qBAAnB,CAAyCD,EAAzC;IACH,CArBgC;;IAAA,mDAuBPA,EAAD,IAAsB;MAC3C,KAAKnG,KAAL,CAAW+F,OAAX,CAAmBM,sBAAnB,CAA0CF,EAA1C;IACH,CAzBgC;;IAAA,+CA2BXA,EAAD,IAAsB;MACvC,KAAKjD,QAAL,CAAc;QAACoD,YAAY,EAAEH;MAAf,CAAd;IACH,CA7BgC;;IAAA,iDA+BV,MAAY;MAC/B,KAAKnG,KAAL,CAAW+F,OAAX,CAAmBQ,qBAAnB,CAAyC,KAAK/F,KAAL,CAAW8F,YAApD;MACA,KAAKE,YAAL;IACH,CAlCgC;;IAAA,yCAoClB,MAAY;MACvB,KAAKtD,QAAL,CAAc;QAACoD,YAAY,EAAE;MAAf,CAAd;IACH,CAtCgC;;IAAA,4CAwCf,MAAY;MAC1B,KAAKpD,QAAL,CAAc;QACVuD,kBAAkB,EAAE,MADV;QAEVC,KAAK,EAAE;UACHhB,WAAW,EAAE;QADV;MAFG,CAAd;IAMH,CA/CgC;;IAAA,6CAiDd,MAAY;MAC3B,KAAKxC,QAAL,CAAc;QACVuD,kBAAkB,EAAE,QADV;QAEVC,KAAK,EAAE;UACHhB,WAAW,EAAE;QADV;MAFG,CAAd;IAMH,CAxDgC;;IAAA,oDA0DNzC,CAAD,IAA4C;MAClE,MAAME,MAAM,GAAGF,CAAC,CAACE,MAAjB;MACA,KAAKD,QAAL,CAAc;QACVwD,KAAK,EAAE7E,MAAM,CAAC8E,MAAP,CAAc,EAAd,EAAkB,KAAKnG,KAAL,CAAWkG,KAA7B,EAAoC;UAAChB,WAAW,EAAEvC,MAAM,CAACC;QAArB,CAApC;MADG,CAAd;IAGH,CA/DgC;;IAAA,8CAiEb,MAAOH,CAAP,IAA4C;MAC5DA,CAAC,CAAC2D,cAAF;;MAEA,IAAI,KAAKpG,KAAL,CAAWkG,KAAX,CAAiBhB,WAAjB,KAAiC,EAArC,EAAyC;QACrC,KAAKxC,QAAL,CAAc;UAAC2D,KAAK,eAChB,oBAAC,sBAAD;YACI,EAAE,EAAC,6BADP;YAEI,cAAc,EAAC;UAFnB;QADU,CAAd;QAMA;MACH;;MAED,MAAM;QAACC,IAAD;QAAOD;MAAP,IAAgB,MAAM,KAAK7G,KAAL,CAAW+F,OAAX,CAAmBgB,qBAAnB,CAAyC,KAAK/G,KAAL,CAAWuF,GAAX,CAAeU,OAAxD,EAAiE,KAAKzF,KAAL,CAAWkG,KAAX,CAAiBhB,WAAlF,CAA5B;;MACA,IAAIoB,IAAJ,EAAU;QACN,KAAK5D,QAAL,CAAc;UAACuD,kBAAkB,EAAE,SAArB;UAAgCC,KAAK,EAAEI;QAAvC,CAAd;MACH,CAFD,MAEO,IAAID,KAAJ,EAAW;QACd,KAAK3D,QAAL,CAAc;UAAC2D,KAAK,EAAEA,KAAK,CAACG;QAAd,CAAd;MACH;IACJ,CApFgC;;IAG7B,KAAKxG,KAAL,GAAa;MACT8F,YAAY,EAAE,EADL;MAETG,kBAAkB,EAAE,QAFX;MAGTC,KAAK,EAAE,EAHE;MAITG,KAAK,EAAE;IAJE,CAAb;EAMH;;EA6EM9G,MAAM,GAAuB;IAChC,MAAM0F,QAAQ,GAAG,KAAKzF,KAAL,CAAWuF,GAAX,CAAeE,QAAf,IAA2B,EAA5C;IACA,MAAMC,WAAW,GAAG,KAAK1F,KAAL,CAAWuF,GAAX,CAAeG,WAAf,IAA8B,EAAlD;IACA,MAAMC,WAAW,GAAG,KAAK3F,KAAL,CAAWuF,GAAX,CAAe7C,YAAf,IAA+B,EAAnD;IAEA,IAAIkD,aAAa,GAAG,QAApB;;IACA,IAAI,KAAK5F,KAAL,CAAWiH,OAAf,EAAwB;MACpBrB,aAAa,GAAG,gBAAhB;IACH,CAFD,MAEO,IAAI,KAAK5F,KAAL,CAAWwF,KAAX,IAAoB,KAAKxF,KAAL,CAAWwF,KAAX,CAAiBC,QAAzC,EAAmD;MACtDG,aAAa,GAAG,KAAK5F,KAAL,CAAWwF,KAAX,CAAiBC,QAAjC;IACH;;IACD,MAAM1D,MAAM,GAAG,KAAK/B,KAAL,CAAW+B,MAAX,GAAoB,KAAK/B,KAAL,CAAW+B,MAAX,CAAkBsB,WAAlB,EAApB,GAAsD,EAArE;;IACA,IAAI,CAACiC,aAAa,CAAC,KAAKtF,KAAL,CAAWuF,GAAZ,EAAiBxD,MAAjB,EAAyB,KAAK/B,KAAL,CAAWwF,KAApC,CAAlB,EAA8D;MAC1D,OAAO,IAAP;IACH;;IAED,MAAM0B,SAAS,GAAG,EAAlB;IACArF,MAAM,CAACC,MAAP,CAAc,KAAK9B,KAAL,CAAWmH,YAAzB,EAAuCC,OAAvC,CAAgDV,KAAD,IAAW;MACtD,IAAIW,UAAJ;MACA,IAAIC,YAAY,GAAG,EAAnB;MACA,IAAIC,YAAJ;;MAEA,IAAIb,KAAK,CAACc,SAAV,EAAqB;QACjBH,UAAU,gBACN;UACI,EAAE,EAAEX,KAAK,CAACP,EAAN,GAAW,aADnB;UAEI,IAAI,EAAC,GAFT;UAGI,OAAO,EAAGlD,CAAD,IAAO;YACZA,CAAC,CAAC2D,cAAF;YACA,KAAKP,sBAAL,CAA4BK,KAAK,CAACP,EAAlC;UACH;QANL,gBAQI,oBAAC,sBAAD;UACI,EAAE,EAAC,iCADP;UAEI,cAAc,EAAC;QAFnB,EARJ,CADJ;MAcH,CAfD,MAeO;QACHmB,YAAY,GAAG,OAAf;QACAC,YAAY,gBACR;UAAM,SAAS,EAAC;QAAhB,gBACI,oBAAC,sBAAD;UACI,EAAE,EAAC,yCADP;UAEI,cAAc,EAAC;QAFnB,EADJ,CADJ;QAQAF,UAAU,gBACN;UACI,EAAE,EAAEX,KAAK,CAACP,EAAN,GAAW,WADnB;UAEI,IAAI,EAAC,GAFT;UAGI,OAAO,EAAGlD,CAAD,IAAO;YACZA,CAAC,CAAC2D,cAAF;YACA,KAAKR,qBAAL,CAA2BM,KAAK,CAACP,EAAjC;UACH;QANL,gBAQI,oBAAC,sBAAD;UACI,EAAE,EAAC,+BADP;UAEI,cAAc,EAAC;QAFnB,EARJ,CADJ;MAeH;;MAEDe,SAAS,CAACO,IAAV,eACI;QACI,GAAG,EAAEf,KAAK,CAACP,EADf;QAEI,SAAS,EAAC;MAFd,gBAII;QAAK,SAAS,EAAC;MAAf,gBACI;QAAK,SAAS,EAAEmB;MAAhB,gBACI;QAAK,SAAS,EAAC;MAAf,gBACI,4CACI,oBAAC,sBAAD;QACI,EAAE,EAAC,gCADP;QAEI,cAAc,EAAC;MAFnB,EADJ,CADJ,EAOKZ,KAAK,CAAChB,WAPX,CADJ,eAUI;QAAK,SAAS,EAAC;MAAf,gBACI,4CACI,oBAAC,sBAAD;QACI,EAAE,EAAC,8BADP;QAEI,cAAc,EAAC;MAFnB,EADJ,CADJ,EAOKgB,KAAK,CAACP,EAPX,CAVJ,CADJ,eAqBI,iCACKoB,YADL,EAEKF,UAFL,EAGK,KAHL,eAII;QACI,EAAE,EAAEX,KAAK,CAACP,EAAN,GAAW,SADnB;QAEI,IAAI,EAAC,GAFT;QAGI,OAAO,EAAGlD,CAAD,IAAO;UACZA,CAAC,CAAC2D,cAAF;UACA,KAAKc,kBAAL,CAAwBhB,KAAK,CAACP,EAA9B;QACH;MANL,gBAQI,oBAAC,sBAAD;QACI,EAAE,EAAC,6BADP;QAEI,cAAc,EAAC;MAFnB,EARJ,CAJJ,CArBJ,CAJJ,CADJ;IA+CH,CA9FD;IAgGA,IAAIwB,OAAJ;;IACA,IAAI/B,aAAa,KAAK,QAAtB,EAAgC;MAC5B+B,OAAO,gBACH;QAAK,SAAS,EAAC;MAAf,gBACI;QACI,EAAE,EAAC,aADP;QAEI,SAAS,EAAC,yBAFd;QAGI,OAAO,EAAE,KAAKC;MAHlB,gBAKI,oBAAC,sBAAD;QACI,EAAE,EAAC,yBADP;QAEI,cAAc,EAAC;MAFnB,EALJ,CADJ,EAWK,KAXL,eAYI,oBAAC,qBAAD;QAAM,EAAE,aAAM,KAAK5H,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB,wCAAwD,KAAKH,KAAL,CAAWuF,GAAX,CAAeU,OAAvE;MAAR,gBACI,oBAAC,sBAAD;QACI,EAAE,EAAC,kBADP;QAEI,cAAc,EAAC;MAFnB,EADJ,CAZJ,EAkBK,KAlBL,eAmBI;QACI,SAAS,EAAC,yBADd;QAEI,OAAO,EAAE,KAAKC;MAFlB,gBAII,oBAAC,sBAAD;QACI,EAAE,EAAC,oBADP;QAEI,cAAc,EAAC;MAFnB,EAJJ,CAnBJ,CADJ;IA+BH;;IACD,IAAI,KAAKlG,KAAL,CAAWuF,GAAX,CAAerF,SAAf,KAA6B,CAAjC,EAAoC;MAChCyH,OAAO,gBACH;QAAK,SAAS,EAAC;MAAf,gBACI;QACI,SAAS,EAAC,yBADd;QAEI,OAAO,EAAE,KAAK3B;MAFlB,gBAII,oBAAC,sBAAD;QACI,EAAE,EAAC,mBADP;QAEI,cAAc,EAAC;MAFnB,EAJJ,CADJ,CADJ;IAaH;;IAED,IAAI,KAAKxF,KAAL,CAAWiG,kBAAX,KAAkC,MAAtC,EAA8C;MAC1CS,SAAS,CAACO,IAAV,eACI;QACI,GAAG,EAAE,QADT;QAEI,SAAS,EAAC;MAFd,gBAII;QAAK,GAAG,EAAE;MAAV,gBACI;QACI,SAAS,EAAC,iBADd;QAEI,QAAQ,EAAE,KAAKI;MAFnB,gBAII;QAAK,SAAS,EAAC;MAAf,gBACI;QAAO,SAAS,EAAC;MAAjB,gBACI,oBAAC,sBAAD;QACI,EAAE,EAAC,2BADP;QAEI,cAAc,EAAC;MAFnB,EADJ,CADJ,eAOI;QAAK,SAAS,EAAC;MAAf,gBACI;QACI,SAAS,EAAE,IADf;QAEI,SAAS,EAAC,sBAFd;QAGI,IAAI,EAAC,MAHT;QAII,SAAS,EAAE,EAJf;QAKI,KAAK,EAAE,KAAKrH,KAAL,CAAWkG,KAAX,CAAiBhB,WAL5B;QAMI,QAAQ,EAAE,KAAKoC;MANnB,EADJ,CAPJ,CAJJ,eAsBI,8CACI;QAAK,SAAS,EAAC;MAAf,gBACI,oBAAC,sBAAD;QACI,EAAE,EAAC,+BADP;QAEI,cAAc,EAAC;MAFnB,EADJ,CADJ,eAOI;QACI,EAAE,EAAC,aADP;QAEI,SAAS,EAAC;MAFd,GAIK,KAAKtH,KAAL,CAAWqG,KAJhB,CAPJ,eAaI;QAAK,SAAS,EAAC;MAAf,gBACI,oBAAC,0BAAD;QACI,QAAQ,EAAC,oBADb;QAEI,aAAa,eACT,oBAAC,sBAAD;UACI,EAAE,EAAC,2BADP;UAEI,cAAc,EAAC;QAFnB,EAHR;QAQI,MAAM,EAAE;MARZ,EADJ,eAWI;QACI,SAAS,EAAC,qBADd;QAEI,OAAO,EAAE,KAAKkB;MAFlB,gBAII,oBAAC,sBAAD;QACI,EAAE,EAAC,6BADP;QAEI,cAAc,EAAC;MAFnB,EAJJ,CAXJ,CAbJ,CAtBJ,CADJ,CAJJ,CADJ;IAmEH,CApED,MAoEO,IAAI,KAAKvH,KAAL,CAAWiG,kBAAX,KAAkC,SAAtC,EAAiD;MACpDS,SAAS,CAACO,IAAV,eACI;QACI,GAAG,EAAE,SADT;QAEI,SAAS,EAAC;MAFd,gBAII;QAAK,SAAS,EAAC;MAAf,gBACI,oBAAC,8BAAD;QAAa,mBAAmB,EAAC;MAAjC,EADJ,eAEI,oBAAC,sBAAD;QACI,EAAE,EAAC,2BADP;QAEI,cAAc,EAAC;MAFnB,EAFJ,CAJJ,eAWI;QAAK,SAAS,EAAC;MAAf,gBACI,oBAAC,sBAAD;QACI,EAAE,EAAC,2BADP;QAEI,cAAc,EAAC;MAFnB,EADJ,EAKK,KAAKjH,KAAL,CAAWkG,KAAX,CAAiBhB,WALtB,CAXJ,eAkBI;QAAK,SAAS,EAAC;MAAf,gBACI,oBAAC,sBAAD;QACI,EAAE,EAAC,yBADP;QAEI,cAAc,EAAC;MAFnB,EADJ,EAKK,KAAKlF,KAAL,CAAWkG,KAAX,CAAiBP,EALtB,CAlBJ,eAyBI;QAAQ,SAAS,EAAC;MAAlB,gBACI,oBAAC,sBAAD;QACI,EAAE,EAAC,4BADP;QAEI,cAAc,EAAC;MAFnB,EADJ,EAKK,KAAK3F,KAAL,CAAWkG,KAAX,CAAiBA,KALtB,CAzBJ,eAgCI;QAAK,SAAS,EAAC;MAAf,gBACI;QACI,SAAS,EAAC,wBADd;QAEI,OAAO,EAAE,KAAKqB;MAFlB,gBAII,oBAAC,sBAAD;QACI,EAAE,EAAC,wBADP;QAEI,cAAc,EAAC;MAFnB,EAJJ,CADJ,CAhCJ,CADJ;IA8CH;;IAED,MAAMC,QAAQ,GAAGpF,6BAAA,CAAsB,KAAK5C,KAAL,CAAWkI,IAAX,CAAgB/B,EAAtC,EAA0C,KAAKnG,KAAL,CAAWkI,IAAX,CAAgBC,mBAA1D,CAAjB;IAEA,oBACI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAK,SAAS,EAAE;IAAhB,gBACI;MACI,SAAS,EAAE,cADf;MAEI,GAAG,EAAE,WAFT;MAGI,GAAG,EAAEH;IAHT,EADJ,CADJ,eAQI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAQ,SAAS,EAAC;IAAlB,GACKrC,WAAW,GAAG,KAAd,GAAsBF,QAAtB,GAAiC,GADtC,CADJ,EAIKkC,OAJL,CADJ,eAOI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,uBAAD;MAAU,OAAO,EAAEjC;IAAnB,EADJ,CAPJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,iBADP;MAEI,cAAc,EAAC;IAFnB,EADJ,EAKKE,aALL,CAVJ,eAiBI;MAAK,SAAS,EAAC;IAAf,GACKsB,SADL,CAjBJ,CARJ,eA6BI,oBAAC,4BAAD;MACI,KAAK,eACD,oBAAC,sBAAD;QACI,EAAE,EAAC,mBADP;QAEI,cAAc,EAAC;MAFnB,EAFR;MAOI,OAAO,eACH,oBAAC,sBAAD;QACI,EAAE,EAAC,yBADP;QAEI,cAAc,EAAC;MAFnB,EARR;MAaI,iBAAiB,eACb,oBAAC,sBAAD;QACI,EAAE,EAAC,oBADP;QAEI,cAAc,EAAC;MAFnB,EAdR;MAmBI,IAAI,EAAE,KAAK1G,KAAL,CAAW8F,YAAX,KAA4B,EAnBtC;MAoBI,SAAS,EAAE,KAAK8B,oBApBpB;MAqBI,QAAQ,EAAE,KAAK5B;IArBnB,EA7BJ,CADJ;EAuDH;;AAxa8D;;mBAA9CV;EA7CjB/D;EAKAkF;EAEAlB;IAKIG;IAKAF;IAKAe;IAKAR;IACAH;IACAC;;;;;;;;;;;;;AC3FR;AACA;AAEA;AACA;AAQA;AACA;AACA;AACA;AACA;AAEA;AA0Fe,MAAMmC,IAAN,SAAmBpJ,mBAAnB,CAAqD;EACzD4D,WAAW,CAAChD,KAAD,EAAe;IAC7B,MAAMA,KAAN;;IAD6B,sCAsErBuF,GAAD,IAA+B;MACtC,oBACI,oBAAC,GAAD;QACI,GAAG,EAAEA,GAAG,CAACU,OADb;QAEI,GAAG,EAAEV,GAFT;QAGI,KAAK,EAAE,KAAKvF,KAAL,CAAWyI,MAAX,CAAkBlD,GAAG,CAACU,OAAtB,CAHX;QAII,IAAI,EAAE,KAAKjG,KAAL,CAAW0I,KAAX,CAAiBnD,GAAG,CAACU,OAArB,CAJV;QAKI,YAAY,EAAG,KAAKjG,KAAL,CAAWmH,YAAX,IAA2B,KAAKnH,KAAL,CAAWmH,YAAX,CAAwB5B,GAAG,CAACU,OAA5B,CAA5B,IAAqE,EALvF;QAMI,OAAO,EAAE,KAAKjG,KAAL,CAAW+F,OANxB;QAOI,IAAI,EAAE,KAAK/F,KAAL,CAAWL,IAPrB;QAQI,OAAO,EAAE,KAAKK,KAAL,CAAWuB,UAAX,CAAsBoH,QAAtB,CAA+BpD,GAAG,CAACU,OAAnC;MARb,EADJ;IAYH,CAnFgC;;IAAA,kCAqFzBlE,MAAD,IAAmD;MACtD,MAAM6G,IAAI,GAAG/G,MAAM,CAACC,MAAP,CAAc,KAAK9B,KAAL,CAAW4I,IAAzB,EAA+BrG,IAA/B,CAAoC,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACiD,QAAF,CAAW9C,aAAX,CAAyBF,CAAC,CAACgD,QAA3B,CAA9C,CAAb;;MACA,MAAMoD,KAAK,GAAItD,GAAD,IAAkBD,aAAa,CAACC,GAAD,EAAMxD,MAAN,EAAc,KAAK/B,KAAL,CAAWyI,MAAX,CAAkBlD,GAAG,CAACU,OAAtB,CAAd,CAA7C;;MACA,MAAM6C,WAAW,GAAGF,IAAI,CAAC7G,MAAL,CAAawD,GAAD,IAASA,GAAG,CAACrF,SAAJ,KAAkB,CAAvC,EAA0C6B,MAA1C,CAAiD8G,KAAjD,EAAwDnF,GAAxD,CAA4D,KAAKqF,QAAjE,CAApB;MACA,MAAMC,YAAY,GAAGJ,IAAI,CAAC7G,MAAL,CAAawD,GAAD,IAASA,GAAG,CAACrF,SAAJ,GAAgB,CAArC,EAAwC6B,MAAxC,CAA+C8G,KAA/C,EAAsDnF,GAAtD,CAA0D,KAAKqF,QAA/D,CAArB;MACA,MAAME,QAAQ,gBACV;QAAK,GAAG,EAAC;MAAT,gBACI,yBAAM,cAAN;QACI,WAAW,EAAEH;MADjB,EADJ,eAII,yBAAM,eAAN;QACI,WAAW,EAAEE,YAAY,CAACnF,MAAb,GAAsB,CADvC;QAEI,YAAY,EAAEmF;MAFlB,EAJJ,CADJ;MAYA,OAAO,CAACC,QAAD,EAAWH,WAAW,CAACjF,MAAZ,GAAqB,CAArB,IAA0BmF,YAAY,CAACnF,MAAb,GAAsB,CAA3D,CAAP;IACH,CAvGgC;;IAG7B,KAAKrD,KAAL,GAAa;MACT+C,OAAO,EAAE;IADA,CAAb;EAGH;;EAEM2F,iBAAiB,GAAS;IAC7B,KAAKlJ,KAAL,CAAW+F,OAAX,CAAmBoD,QAAnB,CACIb,uFADJ,EAEIgB,QAAQ,CAAChB,6EAAD,EAAmC,EAAnC,CAFZ,EAGEkB,IAHF,CAIKC,MAAD,IAAY;MACR,IAAIA,MAAM,CAAC3C,IAAX,EAAiB;QACb,MAAM4C,QAAQ,GAAG,EAAjB;;QAEA,KAAK,MAAMnE,GAAX,IAAkBkE,MAAM,CAAC3C,IAAzB,EAA+B;UAC3B;UACA,KAAK9G,KAAL,CAAW+F,OAAX,CAAmB4D,OAAnB,CAA2BpE,GAAG,CAACqE,QAA/B,EAF2B,CAI3B;;UACAF,QAAQ,CAACjC,IAAT,CAAc,KAAKzH,KAAL,CAAW+F,OAAX,CAAmB4D,OAAnB,CAA2BpE,GAAG,CAACU,OAA/B,CAAd;UACAyD,QAAQ,CAACjC,IAAT,CAAc,KAAKzH,KAAL,CAAW+F,OAAX,CAAmB8D,0BAAnB,CAA8CtE,GAAG,CAACU,OAAlD,CAAd;QACH;;QAED6D,OAAO,CAACC,GAAR,CAAYL,QAAZ,EAAsBF,IAAtB,CAA2B,MAAM;UAC7B,KAAKtG,QAAL,CAAc;YAACK,OAAO,EAAE;UAAV,CAAd;QACH,CAFD;MAGH;IACJ,CArBL;;IAuBA,IAAI,KAAKvD,KAAL,CAAWM,WAAf,EAA4B;MACxB,KAAKN,KAAL,CAAW+F,OAAX,CAAmBiE,eAAnB;IACH;EACJ;;EAEDC,eAAe,CAACjK,KAAD,EAAkG;IAC7G,IAAI,CAACA,KAAK,CAACkK,WAAX,EAAwB;MACpB,OAAO,IAAP;IACH;;IACD,MAAMC,aAAa,GAAG/K,kBAAA,CAAmBY,KAAK,CAACgJ,YAAzB,EAAwCrF,KAAD,IAAW;MACpE,oBAAOvE,kBAAA,CAAmBuE,KAAnB,EAA0B;QAAC5B,MAAM,EAAE/B,KAAK,CAAC+B;MAAf,CAA1B,CAAP;IACH,CAFqB,CAAtB;IAGA,oBACI,oBAAC,cAAD,qBACI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,eADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CADJ,eAOI;MAAK,SAAS,EAAC;IAAf,GACKoI,aADL,CAPJ,CADJ;EAaH;;EAEDC,cAAc,CAACpK,KAAD,EAAoE;IAC9E,MAAMmK,aAAa,GAAG/K,kBAAA,CAAmBY,KAAK,CAAC8I,WAAzB,EAAuCnF,KAAD,IAAW;MACnE,oBAAOvE,kBAAA,CAAmBuE,KAAnB,EAA0B;QAAC5B,MAAM,EAAE/B,KAAK,CAAC+B;MAAf,CAA1B,CAAP;IACH,CAFqB,CAAtB;IAGA,oBACI,iCACKoI,aADL,CADJ;EAKH;;EAqCMpK,MAAM,GAAgB;IACzB,oBACI,oBAAC,aAAD;MACI,MAAM,eACF,oBAAC,sBAAD;QACI,EAAE,EAAC,oBADP;QAEI,cAAc,EAAC;MAFnB,EAFR;MAOI,OAAO,EAAE,KAAKC,KAAL,CAAWqK,UAAX,iBACL,oBAAC,sBAAD;QACI,EAAE,EAAC,iBADP;QAEI,cAAc,EAAC;MAFnB,EARR;MAaI,OAAO,EAAE,MAAM,KAAKrK,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB,GAA6B,wBAb1C;MAcI,WAAW,EAAC,eAdhB;MAeI,SAAS,eACL,oBAAC,sBAAD;QACI,EAAE,EAAC,mBADP;QAEI,cAAc,EAAC;MAFnB,EAhBR;MAqBI,eAAe,eACX,oBAAC,yCAAD;QACI,EAAE,EAAC,yBADP;QAEI,cAAc,EAAC;MAFnB,EAtBR;MA2BI,QAAQ,eACJ,oBAAC,cAAD,qBACI,oBAAC,sBAAD;QACI,EAAE,EAAC,mBADP;QAEI,cAAc,EAAC,oIAFnB;QAGI,MAAM,EAAE;UACJmK,WAAW,eACP;YACI,MAAM,EAAC,QADX;YAEI,GAAG,EAAC,qBAFR;YAGI,IAAI,EAAC;UAHT,gBAKI,oBAAC,sBAAD;YACI,EAAE,EAAC,0BADP;YAEI,cAAc,EAAC;UAFnB,EALJ;QAFA;MAHZ,EADJ,eAmBI,oBAAC,yCAAD;QACI,EAAE,EAAC,mBADP;QAEI,cAAc,EAAE,yGAFpB;QAGI,MAAM,EAAE;UACJC,OAAO,EAAElC,0BAAU;QADf;MAHZ,EAnBJ,CA5BR;MAwDI,iBAAiB,EAAEzF,6BAAA,CAAsB,oBAAtB,EAA4C,qBAA5C,CAxDvB;MAyDI,OAAO,EAAE,KAAKpC,KAAL,CAAW+C;IAzDxB,GA2DK,KAAKqF,IA3DV,CADJ;EA+DH;;AA1K+D;;oBAA/CJ;EA9EjBjH;EAKAjB;EAgBA+J;EAEAtE;IAKIoD;IAKAU;IAKA9C;IAKAR;IACAH;IACAC;IAKAsD;IAKAzD;IAKAF;IAKAgE;;;;;AC/FR;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAEA;;AAEA,SAASa,eAAT,CAAyBrK,KAAzB,EAA6C;EACzC,MAAMsK,MAAM,GAAGH,6BAAS,CAACnK,KAAD,CAAxB;EACA,MAAM6J,UAAU,GAAGS,MAAM,CAACC,wBAAP,KAAoC,MAAvD;EACA,MAAMnC,IAAI,GAAG8B,gDAAsB,CAAClK,KAAD,CAAnC;EACA,MAAMwK,SAAS,GAAGnJ,MAAM,CAACC,MAAP,CAAc8G,IAAd,CAAlB;EACA,MAAMH,MAAM,GAAGuC,SAAS,CACpBC,MADW,CACJ,CAACxB,MAAD,EAAsClE,GAAtC,KAAuD;IAC1DkE,MAAM,CAAClE,GAAG,CAACU,OAAL,CAAN,GAAsB2E,8BAAA,CAAsBpK,KAAtB,EAA6B+E,GAAG,CAACqE,QAAjC,CAAtB;IACA,OAAOH,MAAP;EACH,CAJU,EAIR,EAJQ,CAAf;EAKA,MAAMf,KAAK,GAAGsC,SAAS,CACnBC,MADU,CACH,CAACxB,MAAD,EAAsClE,GAAtC,KAAuD;IAC1DkE,MAAM,CAAClE,GAAG,CAACU,OAAL,CAAN,GAAsB2E,8BAAA,CAAsBpK,KAAtB,EAA6B+E,GAAG,CAACU,OAAjC,CAAtB;IACA,OAAOwD,MAAP;EACH,CAJS,EAIP,EAJO,CAAd;EAMA,OAAO;IACHY,UADG;IAEHzB,IAFG;IAGHzB,YAAY,EAAE3G,KAAK,CAACC,QAAN,CAAeyK,KAAf,CAAqBC,sBAHhC;IAIH1C,MAJG;IAKHC,KALG;IAMHnH,UAAU,EAAED,aAAa,CAACd,KAAD,CANtB;IAOHF,WAAW,EAAEA,4BAAW,CAACE,KAAD;EAPrB,CAAP;AASH;;AAkBD,SAAS4K,kBAAT,CAA4BC,QAA5B,EAA+D;EAC3D,OAAO;IACHtF,OAAO,EAAE0E,4BAAkB,CAA+C;MACtET,eADsE;MAEtEb,QAFsE;MAGtEU,0BAHsE;MAItE9C,qBAJsE;MAKtER,qBALsE;MAMtEH,qBANsE;MAOtEC,sBAPsE;MAQtEsD,OARsE;MAStEzD,UATsE;MAUtEF,SAASA,EAAAA,sBAAAA;IAV6D,CAA/C,EAWxBqF,QAXwB;EADxB,CAAP;AAcH;;AAED,wDAAeb,cAAO,CAACK,eAAD,EAAkBO,kBAAlB,CAAP,CAA6C5C,IAA7C,CAAf;;;;;;;;;;;;AClFA,uDAAe,qBAAuB,+CAA+C;;;;;;;;;;ACArF;AACA;AAEA;AACA;AAEA;AAEA;AAEe,MAAMgD,eAAN,SAA8BpM,mBAA9B,CAAkD;EAK7DW,MAAM,GAAG;IACL,MAAMuD,QAAQ,GAAG,EAAjB;IAEAlE,sBAAA,CAAuB,KAAKY,KAAL,CAAWsD,QAAlC,EAA4C,CAACK,KAAD,EAAQ8H,KAAR,KAAkB;MAC1D,IAAIA,KAAK,KAAK,CAAd,EAAiB;QACbnI,QAAQ,CAACmE,IAAT,eACI;UACI,GAAG,EAAE,YAAYgE,KADrB;UAEI,SAAS,EAAC;QAFd,gBAII,oBAAC,6BAAD;UACI,SAAS,EAAC,mBADd;UAEI,KAAK,EAAE;YAACtF,EAAE,EAAEoF,UAAC,CAAC,0BAAD,CAAN;YAAoCG,cAAc,EAAE;UAApD;QAFX,EAJJ,CADJ;MAWH;;MAEDpI,QAAQ,CAACmE,IAAT,CAAc9D,KAAd;IACH,CAhBD;IAkBA,oBACI;MAAK,SAAS,EAAC;IAAf,gBACI,gCACKL,QADL,CADJ,CADJ;EAOH;;AAjC4D;;gCAA5CkI,8BACE;EACflI,QAAQ,EAAEnE,2BAAcwF;AADT;;;;;;;;;;;;;;;;;;;;ACXvB;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAM2H,qBAAqB,GAAG,cAA9B;AACA,MAAMC,gBAAgB,GAAG,QAAzB;AAEe,MAAMC,MAAN,SAAqBpN,mBAArB,CAAyC;EAsEpD4D,WAAW,CAAChD,KAAD,EAAQ;IACf,MAAMA,KAAN;;IADe,+CAyBDiD,CAAD,IAAO;MACpB,KAAKC,QAAL,CAAc;QACVuC,QAAQ,EAAExC,CAAC,CAACE,MAAF,CAASC;MADT,CAAd;IAGH,CA7BkB;;IAAA,kDA+BEH,CAAD,IAAO;MACvB,KAAKC,QAAL,CAAc;QACVyC,WAAW,EAAE1C,CAAC,CAACE,MAAF,CAASC;MADZ,CAAd;IAGH,CAnCkB;;IAAA,kDAqCEH,CAAD,IAAO;MACvB,KAAKC,QAAL,CAAc;QACVwC,WAAW,EAAEzC,CAAC,CAACE,MAAF,CAASC;MADZ,CAAd;IAGH,CAzCkB;;IAAA,2CA2CLH,CAAD,IAAO;MAChB,KAAKC,QAAL,CAAc;QACVuJ,IAAI,EAAExJ,CAAC,CAACE,MAAF,CAASC;MADL,CAAd;IAGH,CA/CkB;;IAAA,8CAiDFH,CAAD,IAAO;MACnB,KAAKC,QAAL,CAAc;QACVwJ,OAAO,EAAEzJ,CAAC,CAACE,MAAF,CAASwJ;MADR,CAAd;IAGH,CArDkB;;IAAA,mDAuDG1J,CAAD,IAAO;MACxB,KAAKC,QAAL,CAAc;QACV0J,YAAY,EAAE3J,CAAC,CAACE,MAAF,CAASwJ;MADb,CAAd;IAGH,CA3DkB;;IAAA,8CA6DF1J,CAAD,IAAO;MACnB,IAAIA,CAAC,CAACE,MAAF,CAAS0J,KAAT,IAAkB5J,CAAC,CAACE,MAAF,CAAS0J,KAAT,CAAe,CAAf,CAAtB,EAAyC;QACrC,MAAMC,WAAW,GAAG7J,CAAC,CAACE,MAAF,CAAS0J,KAAT,CAAe,CAAf,CAApB;QACA,KAAKE,WAAL,GAAmBC,GAAG,CAACC,eAAJ,CAAoBH,WAApB,CAAnB;QAEA,IAAII,MAAM,GAAG,IAAIC,UAAJ,EAAb;;QACAD,MAAM,CAACE,MAAP,GAAiBC,EAAD,IAAQ;UACpB,MAAMC,WAAW,GAAG3B,qCAAA,CAA6B0B,EAAE,CAAClK,MAAH,CAAUsG,MAAvC,CAApB;UACA,MAAM+D,iBAAiB,GAAG7B,uCAAA,CAA+B2B,WAA/B,CAA1B;UAEA,KAAKpK,QAAL,CAAc;YACVwK,KAAK,EAAE,KAAKX,WADF;YAEVS;UAFU,CAAd;QAIH,CARD;;QASAN,MAAM,CAACS,iBAAP,CAAyBb,WAAzB;QACA7J,CAAC,CAACE,MAAF,CAASC,KAAT,GAAiB,IAAjB;QACA,KAAKF,QAAL,CAAc;UAAC4J;QAAD,CAAd;MACH,CAjBD,MAiBO;QACH,KAAK5J,QAAL,CAAc;UAAC4J,WAAW,EAAE,IAAd;UAAoBY,KAAK,EAAE;QAA3B,CAAd;MACH;IACJ,CAlFkB;;IAAA,2CAoFN,MAAM;MACf,KAAKxK,QAAL,CAAc;QAAC4J,WAAW,EAAE,SAAd;QAAyBY,KAAK,EAAE5B,gBAAcA;MAA9C,CAAd;IACH,CAtFkB;;IAAA,4CAwFL,MAAOhF,IAAP,IAAgB;MAC1B,IAAI8G,KAAK,GAAG/B,2DAAZ;;MAEA,IAAI,KAAKrL,KAAL,CAAWiM,IAAX,KAAoBH,qBAAxB,EAA+C;QAC3CsB,KAAK,IAAI,MAAM/B,6DAAf;MACH,CAFD,MAEO,IAAI,KAAKrL,KAAL,CAAWkM,OAAf,EAAwB;QAC3BkB,KAAK,IAAI,MAAM/B,mEAAf;MACH,CAFM,MAEA,IAAI,KAAKrL,KAAL,CAAWoM,YAAf,EAA6B;QAChCgB,KAAK,IAAI,MAAM/B,iFAAf;MACH;;MAED,MAAMoC,WAAW,GAAG,MAAM,KAAKjO,KAAL,CAAW+F,OAAX,CAAmBmI,eAAnB,CAAmCpH,IAAI,CAACb,OAAxC,EAAiD2H,KAAjD,CAA1B;;MACA,IAAIK,WAAJ,EAAiB;QACb,OAAOA,WAAW,CAACpH,KAAnB;MACH;;MAED,OAAO,IAAP;IACH,CAzGkB;;IAAA,6CA2GJ,MAAO5D,CAAP,IAAa;MACxBA,CAAC,CAAC2D,cAAF;;MAEA,IAAI,KAAKpG,KAAL,CAAW2N,MAAf,EAAuB;QACnB;MACH;;MAED,IAAI,CAAC,KAAK3N,KAAL,CAAWiF,QAAZ,IAAwB,KAAKjF,KAAL,CAAWiF,QAAX,CAAoB5B,MAApB,GAA6B,CAAzD,EAA4D;QACxD,KAAKX,QAAL,CAAc;UACV2D,KAAK,eACD,oBAAC,sBAAD;YACI,EAAE,EAAC,kCADP;YAEI,cAAc,EAAC;UAFnB;QAFM,CAAd;QAQA;MACH;;MAED,IAAI,KAAKrG,KAAL,CAAWsM,WAAf,EAA4B;QACxB,IAAI,CAACV,mEAAA,CAAmC,KAAK5L,KAAL,CAAWsM,WAAX,CAAuBsB,IAA1D,CAAL,EAAsE;UAClE,KAAKlL,QAAL,CAAc;YACV2D,KAAK,eACD,oBAAC,sBAAD;cACI,EAAE,EAAC,kCADP;cAEI,cAAc,EAAC;YAFnB;UAFM,CAAd;QAQH,CATD,MASO,IAAI,KAAKrG,KAAL,CAAWsM,WAAX,CAAuBuB,IAAvB,GAA8B,KAAKrO,KAAL,CAAWsO,WAA7C,EAA0D;UAC7D,KAAKpL,QAAL,CAAc;YACV2D,KAAK,eACD,oBAAC,sBAAD;cACI,EAAE,EAAC,qCADP;cAEI,cAAc,EAAC;YAFnB;UAFM,CAAd;QAQH;MACJ;;MAED,KAAK3D,QAAL,CAAc;QACViL,MAAM,EAAE,IADE;QAEVtH,KAAK,EAAE;MAFG,CAAd;MAKA,MAAMtB,GAAG,GAAG;QACRE,QAAQ,EAAE,KAAKjF,KAAL,CAAWiF,QAAX,CAAoBpC,WAApB,GAAkCkL,IAAlC,EADF;QAER7L,YAAY,EAAE,KAAKlC,KAAL,CAAWmF,WAFjB;QAGRD,WAAW,EAAE,KAAKlF,KAAL,CAAWkF;MAHhB,CAAZ;MAMA,IAAIoB,IAAJ;MACA,IAAID,KAAJ;;MACA,IAAI,KAAK7G,KAAL,CAAWuF,GAAf,EAAoB;QAChB,MAAMkE,MAAM,GAAG,MAAM,KAAKzJ,KAAL,CAAW+F,OAAX,CAAmByI,QAAnB,CAA4B,KAAKxO,KAAL,CAAWuF,GAAX,CAAeU,OAA3C,EAAoDV,GAApD,CAArB;;QACA,IAAIkE,MAAJ,EAAY;UACR3C,IAAI,GAAG2C,MAAM,CAAC3C,IAAd;UACAD,KAAK,GAAG4C,MAAM,CAAC5C,KAAf;QACH,CAHD,MAGO;UACHA,KAAK,GAAGjE,6BAAA,CAAsB,iBAAtB,EAAyC,oBAAzC,CAAR;QACH;;QAED,IAAI,CAACiE,KAAL,EAAY;UACR,IAAI,KAAKrG,KAAL,CAAWsM,WAAX,IAA0B,KAAKtM,KAAL,CAAWsM,WAAX,KAA2B,SAAzD,EAAoE;YAChE,MAAM2B,WAAW,GAAG,MAAM,KAAKzO,KAAL,CAAW+F,OAAX,CAAmB2I,kBAAnB,CAAsC5H,IAAI,CAACb,OAA3C,EAAoD,KAAKzF,KAAL,CAAWsM,WAA/D,CAA1B;YACAjG,KAAK,GAAG4H,WAAW,CAAC5H,KAApB;UACH,CAHD,MAGO,IAAI,KAAKrG,KAAL,CAAWsM,WAAX,IAA0B,KAAKtM,KAAL,CAAWsM,WAAX,KAA2B,SAAzD,EAAoE;YACvE,MAAM,KAAK9M,KAAL,CAAW+F,OAAX,CAAmB4I,sBAAnB,CAA0C7H,IAAI,CAACb,OAA/C,CAAN;UACH;QACJ;;QAED,IAAI,CAACY,KAAD,IAAUC,IAAd,EAAoB;UAChBD,KAAK,GAAG,KAAK+H,WAAL,CAAiB9H,IAAjB,CAAR;QACH;;QAED,IAAIA,IAAJ,EAAU;UACNiF,+CAAA,YAAwB,KAAK/L,KAAL,CAAWL,IAAX,CAAgBQ,IAAxC;UACA;QACH;MACJ,CA1BD,MA0BO;QACH,MAAM0O,aAAa,GAAGjM,gCAAA,CAAyB2C,GAAG,CAACE,QAA7B,CAAtB;;QACA,IAAIoJ,aAAJ,EAAmB;UACf,IAAIE,MAAJ;;UACA,IAAIF,aAAa,CAAC1I,EAAd,KAAqBkG,sFAAzB,EAAkE;YAC9D0C,MAAM,GAAG;cACLZ,MAAM,EAAE,KADH;cAELtH,KAAK,eACD,oBAAC,sBAAD;gBACI,EAAE,EAAC,mCADP;gBAEI,cAAc,EAAC;cAFnB;YAHC,CAAT;UASH,CAVD,MAUO;YACHkI,MAAM,GAAG;cACLZ,MAAM,EAAE,KADH;cAELtH,KAAK,eACD,oBAAC,sBAAD;gBACI,EAAE,EAAC,kCADP;gBAEI,cAAc,EAAC;cAFnB;YAHC,CAAT;UASH;;UACD,KAAK3D,QAAL,CAAc6L,MAAd;UACA;QACH;;QAED,MAAMtF,MAAM,GAAG,MAAM,KAAKzJ,KAAL,CAAW+F,OAAX,CAAmBkJ,SAAnB,CAA6B1J,GAA7B,CAArB;;QACA,IAAIkE,MAAJ,EAAY;UACR3C,IAAI,GAAG2C,MAAM,CAAC3C,IAAd;UACAD,KAAK,GAAG4C,MAAM,CAAC5C,KAAf;QACH,CAHD,MAGO;UACHA,KAAK,GAAGjE,6BAAA,CAAsB,mBAAtB,EAA2C,sBAA3C,CAAR;QACH;;QAED,IAAI8D,KAAK,GAAG,EAAZ;;QACA,IAAI,CAACG,KAAL,EAAY;UACR,IAAI,KAAKrG,KAAL,CAAWsM,WAAX,IAA0B,KAAKtM,KAAL,CAAWsM,WAAX,KAA2B,SAAzD,EAAoE;YAChE,MAAM,KAAK9M,KAAL,CAAW+F,OAAX,CAAmB2I,kBAAnB,CAAsC5H,IAAI,CAACb,OAA3C,EAAoD,KAAKzF,KAAL,CAAWsM,WAA/D,CAAN;UACH,CAFD,MAEO;YACH,MAAM,KAAK9M,KAAL,CAAW+F,OAAX,CAAmB4I,sBAAnB,CAA0C7H,IAAI,CAACb,OAA/C,CAAN;UACH;;UACD,MAAMiJ,WAAW,GAAG,MAAM,KAAKlP,KAAL,CAAW+F,OAAX,CAAmBgB,qBAAnB,CAAyCD,IAAI,CAACb,OAA9C,EACtBrD,6BAAA,CAAsB,+BAAtB,EAAuD,eAAvD,CADsB,CAA1B,CANQ,CAUR;;UACA,IAAI,CAACsM,WAAD,IAAgBA,WAAW,CAACrI,KAAhC,EAAuC;YACnCkF,+CAAA,YAAwB,KAAK/L,KAAL,CAAWL,IAAX,CAAgBQ,IAAxC;YACA;UACH;;UAEDuG,KAAK,GAAGwI,WAAW,CAACpI,IAAZ,CAAiBJ,KAAzB;QACH;;QAED,IAAI,CAACG,KAAD,IAAUC,IAAd,EAAoB;UAChBD,KAAK,GAAG,KAAK+H,WAAL,CAAiB9H,IAAjB,CAAR;QACH;;QAED,IAAIA,IAAJ,EAAU;UACNiF,+CAAA,YAAwB,KAAK/L,KAAL,CAAWL,IAAX,CAAgBQ,IAAxC,gDAAkF2G,IAAI,CAACb,OAAvF,oBAAwGS,KAAxG;UACA;QACH;MACJ;;MAED,KAAKxD,QAAL,CAAc;QACViL,MAAM,EAAE;MADE,CAAd;;MAIA,IAAItH,KAAJ,EAAW;QACP,KAAK3D,QAAL,CAAc;UACV2D,KAAK,EAAEA,KAAK,CAACG;QADH,CAAd;MAGH;IACJ,CAvQkB;;IAGf,KAAKxG,KAAL,GAAa;MACTqG,KAAK,EAAE,EADE;MAETpB,QAAQ,EAAE,EAFD;MAGTE,WAAW,EAAE,EAHJ;MAITD,WAAW,EAAE,EAJJ;MAKTyI,MAAM,EAAE,KALC;MAMTT,KAAK,EAAE5B,gBANE;MAOTW,IAAI,EAAEF,gBAPG;MAQTG,OAAO,EAAE,KARA;MASTE,YAAY,EAAE;IATL,CAAb;;IAYA,IAAI,KAAK5M,KAAL,CAAWuF,GAAf,EAAoB;MAChB,KAAK/E,KAAL,CAAWiF,QAAX,GAAsB,KAAKzF,KAAL,CAAWuF,GAAX,CAAeE,QAArC;MACA,KAAKjF,KAAL,CAAWmF,WAAX,GAAyB,KAAK3F,KAAL,CAAWuF,GAAX,CAAe7C,YAAxC;MACA,KAAKlC,KAAL,CAAWkF,WAAX,GAAyB,KAAK1F,KAAL,CAAWuF,GAAX,CAAeG,WAAxC;MACA,KAAKlF,KAAL,CAAWiM,IAAX,GAAkBb,gCAAA,CAAwB,KAAK5L,KAAL,CAAW4N,KAAX,IAAoB,EAA5C,IAAkDtB,qBAAlD,GAA0EC,gBAA5F;MACA,KAAK/L,KAAL,CAAWkM,OAAX,GAAqBd,iCAAA,CAAyB,KAAK5L,KAAL,CAAW4N,KAAX,IAAoB,EAA7C,CAArB;MACA,KAAKpN,KAAL,CAAWoM,YAAX,GAA0BhB,uCAAA,CAA+B,KAAK5L,KAAL,CAAW4N,KAAX,IAAoB,EAAnD,CAA1B;IACH;EACJ;;EAkPD7N,MAAM,GAAG;IACL,IAAIuP,QAAQ,gBACR,oBAAC,sBAAD;MACI,EAAE,EAAC,iBADP;MAEI,cAAc,EAAC;IAFnB,EADJ;IAMA,IAAIC,UAAU,gBACV,oBAAC,sBAAD;MACI,EAAE,EAAC,wBADP;MAEI,cAAc,EAAC;IAFnB,EADJ;IAMA,IAAIC,gBAAgB,gBAChB,oBAAC,sBAAD;MACI,EAAE,EAAC,0BADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CAbK,CAoBL;;IACA,IAAI,KAAKxP,KAAL,CAAWuF,GAAf,EAAoB;MAChB+J,QAAQ,gBACJ,oBAAC,sBAAD;QACI,EAAE,EAAC,kBADP;QAEI,cAAc,EAAC;MAFnB,EADJ;MAMAC,UAAU,gBACN,oBAAC,sBAAD;QACI,EAAE,EAAC,wBADP;QAEI,cAAc,EAAC;MAFnB,EADJ;MAMAC,gBAAgB,gBACZ,oBAAC,sBAAD;QACI,EAAE,EAAC,0BADP;QAEI,cAAc,EAAC;MAFnB,EADJ;IAMH;;IAED,IAAIxH,QAAQ,GAAG,EAAf;IACA,IAAIyH,eAAe,gBACf,oBAAC,8BAAD;MACI,SAAS,EAAEnH,uEADf;MAEI,SAAS,EAAC,OAFd;MAGI,OAAO,eACH,oBAAC,iCAAD;QAAS,EAAE,EAAC;MAAZ,gBACI,oBAAC,sBAAD;QACI,EAAE,EAAC,4BADP;QAEI,cAAc,EAAC;MAFnB,EADJ;IAJR,gBAYI;MACI,SAAS,EAAE,qBADf;MAEI,OAAO,EAAE,KAAKqH;IAFlB,gBAII,kCAAO,GAAP,CAJJ,CAZJ,CADJ;IAqBA,IAAIC,WAAW,GAAG,IAAlB;;IACA,IAAI,KAAK5P,KAAL,CAAWuF,GAAX,IAAkB,CAAC,KAAK/E,KAAL,CAAWsM,WAAlC,EAA+C;MAC3C,IAAI,KAAK9M,KAAL,CAAWkI,IAAf,EAAqB;QACjBF,QAAQ,GAAGpF,6BAAA,CAAsB,KAAK5C,KAAL,CAAWkI,IAAX,CAAgB/B,EAAtC,EAA0C,KAAKnG,KAAL,CAAWkI,IAAX,CAAgBC,mBAA1D,CAAX;MACH,CAFD,MAEO;QACHH,QAAQ,GAAGpF,6BAAA,CAAsB,KAAK5C,KAAL,CAAWuF,GAAX,CAAeU,OAArC,CAAX;MACH;IACJ,CAND,MAMO;MACH+B,QAAQ,GAAG,KAAKxH,KAAL,CAAWkN,KAAtB;MACAkC,WAAW,GAAG,KAAKpP,KAAL,CAAWgN,iBAAzB;;MACA,IAAI,KAAKhN,KAAL,CAAWkN,KAAX,KAAqB5B,gBAAzB,EAAyC;QACrC2D,eAAe,GAAG,IAAlB;MACH;IACJ;;IAED,oBACI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,eAAD,qBACI,oBAAC,qBAAD;MAAM,EAAE,aAAM,KAAKzP,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB;IAAR,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,oBADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CADJ,EAOKmP,QAPL,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,iBADd;MAEI,QAAQ,EAAE,KAAKO;IAFnB,gBAII;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,mBADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,EAAE,EAAC,UADP;MAEI,IAAI,EAAC,MAFT;MAGI,SAAS,EAAC,IAHd;MAII,SAAS,EAAC,cAJd;MAKI,KAAK,EAAE,KAAKrP,KAAL,CAAWiF,QALtB;MAMI,QAAQ,EAAE,KAAKqK;IANnB,EADJ,eASI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,uBADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CATJ,CAVJ,CAJJ,eA+BI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,eADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAK,SAAS,EAAE;IAAhB,gBACI;MACI,SAAS,EAAE,SADf;MAEI,GAAG,EAAE,WAFT;MAGI,GAAG,EAAE9H,QAHT;MAII,KAAK,EAAE4H;IAJX,EADJ,EAOKH,eAPL,CADJ,eAUI;MACI,SAAS,EAAC;IADd,gBAGI,oBAAC,sBAAD;MACI,EAAE,EAAC,mBADP;MAEI,cAAc,EAAC;IAFnB,EAHJ,eAOI;MACI,MAAM,EAAEnH,yEADZ;MAEI,IAAI,EAAC,MAFT;MAGI,QAAQ,EAAE,KAAK0H;IAHnB,EAPJ,CAVJ,CAVJ,CA/BJ,eAkEI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,sBADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,EAAE,EAAC,aADP;MAEI,IAAI,EAAC,MAFT;MAGI,SAAS,EAAC,IAHd;MAII,SAAS,EAAC,cAJd;MAKI,KAAK,EAAE,KAAKxP,KAAL,CAAWmF,WALtB;MAMI,QAAQ,EAAE,KAAKsK;IANnB,EADJ,eASI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,2BADP;MAEI,cAAc,EAAE;IAFpB,EADJ,CATJ,CAVJ,CAlEJ,eA6FI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,qBADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,EAAE,EAAC,aADP;MAEI,IAAI,EAAC,MAFT;MAGI,SAAS,EAAC,MAHd;MAII,SAAS,EAAC,cAJd;MAKI,KAAK,EAAE,KAAKzP,KAAL,CAAWkF,WALtB;MAMI,QAAQ,EAAE,KAAKwK;IANnB,EADJ,eASI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,0BADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CATJ,CAVJ,CA7FJ,eAwHI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,cADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,cADd;MAEI,KAAK,EAAE,KAAK1P,KAAL,CAAWiM,IAFtB;MAGI,QAAQ,EAAE,CAAC,KAAKzM,KAAL,CAAWmQ,0BAH1B;MAII,QAAQ,EAAE,KAAKC;IAJnB,gBAMI;MACI,KAAK,EAAE7D;IADX,GAGK3J,6BAAA,CAAsB,qBAAtB,EAA6C,QAA7C,CAHL,CANJ,eAWI;MACI,KAAK,EAAE0J;IADX,GAGK1J,6BAAA,CAAsB,oBAAtB,EAA4C,cAA5C,CAHL,CAXJ,CADJ,eAkBI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,mBADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CAlBJ,CAVJ,CAxHJ,eA4JI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,yCAAD;MACI,EAAE,EAAC,oCADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CADJ,CA5JJ,eAoKI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,kBADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAO,OAAO,EAAC;IAAf,gBACI;MACI,EAAE,EAAC,SADP;MAEI,IAAI,EAAC,UAFT;MAGI,OAAO,EAAE,KAAKpC,KAAL,CAAWkM,OAAX,IAAsB,KAAKlM,KAAL,CAAWiM,IAAX,KAAoBH,qBAHvD;MAII,QAAQ,EAAE,KAAK+D,aAJnB;MAKI,QAAQ,EAAE,CAAC,KAAKrQ,KAAL,CAAWmQ,0BAAZ,IAA0C,KAAK3P,KAAL,CAAWiM,IAAX,KAAoBH;IAL5E,EADJ,eAQI,oBAAC,sBAAD;MACI,EAAE,EAAC,0BADP;MAEI,cAAc,EAAC;IAFnB,EARJ,CADJ,CADJ,eAgBI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,uBADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CAhBJ,CAVJ,CApKJ,eAsMI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,uBADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAO,OAAO,EAAC;IAAf,gBACI;MACI,EAAE,EAAC,cADP;MAEI,IAAI,EAAC,UAFT;MAGI,OAAO,EAAE,KAAK9L,KAAL,CAAWoM,YAAX,IAA2B,KAAKpM,KAAL,CAAWiM,IAAX,KAAoBH,qBAA/C,IAAwE,KAAK9L,KAAL,CAAWkM,OAHhG;MAII,QAAQ,EAAE,KAAK4D,kBAJnB;MAKI,QAAQ,EAAE,CAAC,KAAKtQ,KAAL,CAAWmQ,0BAAZ,IAA0C,KAAK3P,KAAL,CAAWiM,IAAX,KAAoBH,qBAA9D,IAAuF,KAAK9L,KAAL,CAAWkM;IALhH,EADJ,eAQI,oBAAC,sBAAD;MACI,EAAE,EAAC,+BADP;MAEI,cAAc,EAAC;IAFnB,EARJ,CADJ,CADJ,eAgBI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,4BADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CAhBJ,CAVJ,CAtMJ,eAwOI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,yBAAD;MACI,IAAI,EAAC,WADT;MAEI,MAAM,EAAE,CAAC,KAAKlM,KAAL,CAAWqG,KAAZ;IAFZ,EADJ,eAKI,oBAAC,qBAAD;MACI,SAAS,EAAC,qBADd;MAEI,EAAE,aAAM,KAAK7G,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB;IAFN,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,wBADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CALJ,eAcI,oBAAC,6BAAD;MACI,SAAS,EAAC,iBADd;MAEI,IAAI,EAAC,QAFT;MAGI,QAAQ,EAAE,KAAKK,KAAL,CAAW2N,MAHzB;MAII,YAAY,EAAEqB,gBAJlB;MAKI,OAAO,EAAE,KAAKK,YALlB;MAMI,EAAE,EAAC;IANP,GAQKN,UARL,CAdJ,CAxOJ,CADJ,CAVJ,CADJ;EAiRH;;AA/qBmD;;uBAAnC/C,qBACE;EAEf;AACR;AACA;EACQ7M,IAAI,EAAER,wCALS;;EAOf;AACR;AACA;EACQoG,GAAG,EAAEpG,6BAVU;;EAYf;AACR;AACA;EACQ+I,IAAI,EAAE/I,6BAfS;;EAiBf;AACR;AACA;EACQyO,KAAK,EAAEzO,6BApBQ;;EAsBf;AACR;AACA;EACQmP,WAAW,EAAEnP,wCAzBE;;EA2Bf;AACR;AACA;EACQgR,0BAA0B,EAAEhR,sCA9Bb;;EAgCf;AACR;AACA;EACQ4G,OAAO,EAAE5G,0BAAA,CAAgB;IAErB;AACZ;AACA;IACY8P,SAAS,EAAE9P,sCALU;;IAOrB;AACZ;AACA;IACYqP,QAAQ,EAAErP,sCAVW;;IAYrB;AACZ;AACA;IACYuP,kBAAkB,EAAEvP,sCAfC;;IAiBrB;AACZ;AACA;IACYwP,sBAAsB,EAAExP,sCApBH;;IAsBrB;AACZ;AACA;IACY4H,qBAAqB,EAAE5H,sCAzBF;;IA2BrB;AACZ;AACA;IACY+O,eAAe,EAAE/O,sCAAyB0F;EA9BrB,CAAhB;AAnCM;;;;;;;AC7BvB;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,SAASgG,uBAAT,CAAyBrK,KAAzB,EAAgCoQ,QAAhC,EAA0C;EACtC,MAAM9F,MAAM,GAAGH,6BAAS,CAACnK,KAAD,CAAxB;EACA,MAAMqQ,KAAK,GAAI,IAAIC,eAAJ,CAAoBF,QAAQ,CAACG,QAAT,CAAkBvM,MAAtC,CAAD,CAAgDwM,GAAhD,CAAoD,IAApD,CAAd;EACA,MAAMpI,IAAI,GAAG6H,wCAAc,CAACjQ,KAAD,CAA3B;EACA,MAAM+E,GAAG,GAAGqD,IAAI,GAAGA,IAAI,CAACiI,KAAD,CAAP,GAAiB,IAAjC;EACA,MAAM3I,IAAI,GAAG3C,GAAG,GAAGoE,kCAAO,CAACnJ,KAAD,EAAQ+E,GAAG,CAACU,OAAZ,CAAV,GAAiC,IAAjD;EACA,MAAM2H,KAAK,GAAG1F,IAAI,GAAGA,IAAI,CAAC0F,KAAR,GAAgB,IAAlC;EACA,OAAO;IACHU,WAAW,EAAEhF,QAAQ,CAACwB,MAAM,CAACmG,WAAR,EAAqB,EAArB,CADlB;IAEH1L,GAFG;IAGHqI,KAHG;IAIHuC,0BAA0B,EAAEO,gDAAqB,CAAClQ,KAAD,EAAQ;MAAC0Q,UAAU,EAAEP,yDAAyBQ;IAAtC,CAAR,CAJ9C;IAKHjJ;EALG,CAAP;AAOH;;AAED,SAASkD,0BAAT,CAA4BC,QAA5B,EAAsC;EAClC,OAAO;IACHtF,OAAO,EAAE0E,4BAAkB,CAAC;MACxBwE,SADwB;MAExBT,QAFwB;MAGxBE,kBAHwB;MAIxBC,sBAJwB;MAKxB5H,qBALwB;MAMxBmH,eAAeA,EAAAA,6BAAAA;IANS,CAAD,EAOxB7C,QAPwB;EADxB,CAAP;AAUH;;AAED,8CAAeb,cAAO,CAACK,uBAAD,EAAkBO,0BAAlB,CAAP,CAA6CoB,MAA7C,CAAf;;;;;;;;AC7CA,uDAAe,qBAAuB,+CAA+C;;ACArF,iDAAe,qBAAuB,+CAA+C;;ACArF,uDAAe,qBAAuB,+CAA+C;;ACArF,yDAAe,qBAAuB,+CAA+C;;;;;;;ACArF;AACA;AAEA;AACA;AACA;AAEe,MAAM4E,iBAAN,SAAgChS,mBAAhC,CAAoD;EAC3C,WAATM,SAAS,GAAG;IACnB,OAAO;MACHgO,KAAK,EAAEvO,wCADJ;MAEHkS,KAAK,EAAElS,sCAFJ;MAGHuG,WAAW,EAAEvG,sCAHV;MAIHmS,IAAI,EAAEnS,wCAA2B0F;IAJ9B,CAAP;EAMH;;EAED9E,MAAM,GAAG;IACL,MAAM;MAAC2N,KAAD;MAAQ2D,KAAR;MAAe3L,WAAf;MAA4B4L;IAA5B,IAAoC,KAAKtR,KAA/C;IAEA,oBACI,oBAAC,qBAAD;MACI,EAAE,EAAEsR,IADR;MAEI,SAAS,EAAC;IAFd,gBAII;MACI,GAAG,EAAE,mBADT;MAEI,SAAS,EAAC,2BAFd;MAGI,GAAG,EAAE5D;IAHT,EAJJ,eASI;MAAK,SAAS,EAAC;IAAf,GACK2D,KADL,CATJ,eAYI;MAAK,SAAS,EAAC;IAAf,GACK3L,WADL,CAZJ,CADJ;EAkBH;;AA/B8D;;;;;;ACPnE;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEe,MAAM0D,YAAN,SAA2BhK,mBAA3B,CAA+C;EAAA;IAAA;;IAAA,iDAiB5C,MAAM;MAChB,MAAM0S,eAAe,GAAG,KAAK9R,KAAL,CAAWH,QAAX,IAAuB,EAA/C;MACAkS,QAAQ,CAACV,KAAT,GAAiBzO,6BAAA,CAAsB,4BAAtB,EAAoD,cAApD,IAAsE,KAAtE,GAA8E,KAAK5C,KAAL,CAAWL,IAAX,CAAgB+C,YAA9F,GAA6G,GAA7G,GAAmHoP,eAApI;IACH,CApByD;EAAA;;EACtC,WAATpS,SAAS,GAAG;IACnB,OAAO;MACHC,IAAI,EAAER,6BADH;MAEH+I,IAAI,EAAE/I,6BAFH;MAGHU,QAAQ,EAAEV,6BAHP;MAIH6S,sBAAsB,EAAE7S,2BAJrB;MAKH8S,sBAAsB,EAAE9S,2BALrB;MAMH+S,cAAc,EAAE/S,2BANb;MAOHgT,0BAA0B,EAAEhT,2BAAc2F;IAPvC,CAAP;EASH;;EAEDoE,iBAAiB,GAAG;IAChB,KAAKkJ,WAAL;EACH;;EAODrS,MAAM,GAAG;IACL,MAAM4H,OAAO,GAAG,EAAhB;;IAEA,IAAI,KAAK3H,KAAL,CAAWgS,sBAAf,EAAuC;MACnCrK,OAAO,CAACF,IAAR,eACI,oBAAC,mCAAD;QACI,MAAM,EAAE,KAAKzH,KAAL,CAAWL,IAAX,CAAgBwG,EAD5B;QAEI,WAAW,EAAE,CAACwK,+EAAD,CAFjB;QAGI,GAAG,EAAC;MAHR,gBAKI,oBAAC,iBAAD;QACI,GAAG,EAAC,iBADR;QAEI,KAAK,EAAEa,gBAFX;QAGI,KAAK,eACD,oBAAC,sBAAD;UACI,EAAE,EAAC,oCADP;UAEI,cAAc,EAAC;QAFnB,EAJR;QASI,WAAW,eACP,oBAAC,sBAAD;UACI,EAAE,EAAC,0CADP;UAEI,cAAc,EAAC;QAFnB,EAVR;QAeI,IAAI,EAAE,MAAM,KAAKxR,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB,GAA6B;MAfvC,EALJ,CADJ;IAyBH;;IAED,IAAI,KAAKH,KAAL,CAAWiS,sBAAf,EAAuC;MACnCtK,OAAO,CAACF,IAAR,eACI,oBAAC,mCAAD;QACI,MAAM,EAAE,KAAKzH,KAAL,CAAWL,IAAX,CAAgBwG,EAD5B;QAEI,WAAW,EAAE,CAACwK,+EAAD,CAFjB;QAGI,GAAG,EAAC;MAHR,gBAKI,oBAAC,iBAAD;QACI,GAAG,EAAC,iBADR;QAEI,KAAK,EAAEe,gBAFX;QAGI,KAAK,eACD,oBAAC,sBAAD;UACI,EAAE,EAAC,oCADP;UAEI,cAAc,EAAC;QAFnB,EAJR;QASI,WAAW,eACP,oBAAC,sBAAD;UACI,EAAE,EAAC,0CADP;UAEI,cAAc,EAAC;QAFnB,EAVR;QAeI,IAAI,EAAE,MAAM,KAAK1R,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB,GAA6B;MAfvC,EALJ,CADJ;IAyBH;;IAED,IAAI,KAAKH,KAAL,CAAWkS,cAAf,EAA+B;MAC3BvK,OAAO,CAACF,IAAR,eACI,oBAAC,mCAAD;QACI,MAAM,EAAE,KAAKzH,KAAL,CAAWL,IAAX,CAAgBwG,EAD5B;QAEI,WAAW,EAAE,CAACwK,yEAAD,CAFjB;QAGI,GAAG,EAAC;MAHR,gBAKI,oBAAC,iBAAD;QACI,GAAG,EAAC,SADR;QAEI,KAAK,EAAEgB,kBAFX;QAGI,KAAK,eACD,oBAAC,sBAAD;UACI,EAAE,EAAC,4BADP;UAEI,cAAc,EAAC;QAFnB,EAJR;QASI,WAAW,eACP,oBAAC,sBAAD;UACI,EAAE,EAAC,kCADP;UAEI,cAAc,EAAC;QAFnB,EAVR;QAeI,IAAI,EAAE,MAAM,KAAK3R,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB,GAA6B;MAfvC,EALJ,CADJ;IAyBH;;IAED,IAAI,KAAKH,KAAL,CAAWmS,0BAAf,EAA2C;MACvCxK,OAAO,CAACF,IAAR,eACI,oBAAC,qCAAD;QACI,WAAW,EAAE,CAACkJ,uDAAD,CADjB;QAEI,GAAG,EAAC;MAFR,gBAII,oBAAC,iBAAD;QACI,GAAG,EAAC,YADR;QAEI,KAAK,EAAEc,UAFX;QAGI,KAAK,eACD,oBAAC,sBAAD;UACI,EAAE,EAAC,8BADP;UAEI,cAAc,EAAC;QAFnB,EAJR;QASI,WAAW,eACP,oBAAC,sBAAD;UACI,EAAE,EAAC,oCADP;UAEI,cAAc,EAAC;QAFnB,EAVR;QAeI,IAAI,EAAE,MAAM,KAAKzR,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB,GAA6B;MAfvC,EAJJ,CADJ;IAwBH;;IAEDwH,OAAO,CAACF,IAAR,eACI,oBAAC,qCAAD;MACI,WAAW,EAAE,CAAC,aAAD,CADjB;MAEI,GAAG,EAAC;IAFR,gBAII,oBAAC,iBAAD;MACI,KAAK,EAAE8J,gBADX;MAEI,KAAK,eACD,oBAAC,sBAAD;QACI,EAAE,EAAC,oBADP;QAEI,cAAc,EAAC;MAFnB,EAHR;MAQI,WAAW,eACP,oBAAC,sBAAD;QACI,EAAE,EAAC,yBADP;QAEI,cAAc,EAAC;MAFnB,EATR;MAcI,IAAI,EAAE,MAAM,KAAKvR,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB,GAA6B;IAdvC,EAJJ,CADJ;IAwBA,oBACI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAK,SAAS,EAAC;IAAf,gBACI,6CACI,oBAAC,sBAAD;MACI,EAAE,EAAC,qBADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CADJ,CADJ,eASI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,mBADP;MAEI,cAAc,EAAC,iGAFnB;MAGI,MAAM,EAAE;QACJsS,YAAY,eACR;UACI,MAAM,EAAC,QADX;UAEI,GAAG,EAAC,qBAFR;UAGI,IAAI,EAAC;QAHT,gBAKI,oBAAC,sBAAD;UACI,EAAE,EAAC,gCADP;UAEI,cAAc,EAAC;QAFnB,EALJ;MAFA;IAHZ,EADJ,CATJ,eA6BI;MAAK,SAAS,EAAC;IAAf,GACK9K,OADL,CA7BJ,CADJ;EAmCH;;AAnMyD;;ACtB9D;AACA;AAEA;AAEA;AAEA;;AAEA,SAASkD,4BAAT,CAAyBrK,KAAzB,EAAgC;EAC5B,MAAMsK,MAAM,GAAGH,6BAAS,CAACnK,KAAD,CAAxB;EACA,MAAMX,QAAQ,GAAGiL,MAAM,CAAC4H,QAAxB;EACA,MAAMV,sBAAsB,GAAGlH,MAAM,CAAC6H,sBAAP,KAAkC,MAAjE;EACA,MAAMV,sBAAsB,GAAGnH,MAAM,CAAC8H,sBAAP,KAAkC,MAAjE;EACA,MAAMV,cAAc,GAAGpH,MAAM,CAAC+H,cAAP,KAA0B,MAAjD;EACA,MAAMV,0BAA0B,GAAGrH,MAAM,CAACgI,0BAAP,KAAsC,MAAzE;EAEA,OAAO;IACHjT,QADG;IAEHmS,sBAFG;IAGHC,sBAHG;IAIHC,cAJG;IAKHC;EALG,CAAP;AAOH;;AAED,8DAAe3H,cAAO,CAACK,4BAAD,CAAP,CAAyBzB,YAAzB,CAAf;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AAEA;AACA;AAIA;AACA;AAEA,MAAM6J,OAAO,GAAG,4BAAhB;AAWe,SAASC,qBAAT,CAA+BlT,KAA/B,EAA6C;EACxD,MAAM;IACFmT,iBAAiB,gBACb,oBAAC,sBAAD;MACI,EAAE,EAAC,oCADP;MAEI,cAAc,EAAC;IAFnB,EAFF;IAOFC,QAAQ,gBACJ,oBAAC,sBAAD;MACI,EAAE,EAAC,+BADP;MAEI,cAAc,EAAC;IAFnB,EARF;IAaFC,YAbE;IAcFC,UAAU,gBACN,oBAAC,sBAAD;MACI,EAAE,EAAC,mCADP;MAEI,cAAc,EAAC;IAFnB,EAfF;IAoBFC,QApBE;IAqBFC;EArBE,IAsBFxT,KAtBJ;EAwBA,MAAMyT,OAAO,GAAGV,qBAAW,CAAC,MAAM;IAC9BS,SAAS,CAAC;MACNE,OAAO,EAAET,OADH;MAENU,WAAW,EAAE;QACTR,iBADS;QAETnM,OAAO,eACH;UAAK,SAAS,EAAC;QAAf,gBACI,oBAAC,8BAAD;UAAa,mBAAmB,EAAC;QAAjC,EADJ,EAEKhH,KAAK,CAACqT,YAFX,CAHK;QAQTO,SAAS,EAAEL,QARF;QASTlC,KAAK,EAAEiC;MATE,CAFP;MAaNO,UAAU,EAAEb,kCAAiBA;IAbvB,CAAD,CAAT;EAeH,CAhB0B,EAgBxB,CAACG,iBAAD,EAAoBE,YAApB,EAAkCC,UAAlC,EAA8CC,QAA9C,EAAwDC,SAAxD,CAhBwB,CAA3B;EAkBA,oBACI;IACI,SAAS,EAAC,yBADd;IAEI,OAAO,EAAEC;EAFb,GAIKL,QAJL,CADJ;AAQH;;EA3DGD;EACAC;EACAC;EACAC;EACAC;EACAC;;;ACnBJ;AACA;AAEA;AAEA;AAEA;AAEA,MAAMpI,0CAAkB,GAAG;EACvBoI,SAASA,EAAAA,uBAAAA;AADc,CAA3B;AAIA,8DAAehJ,cAAO,CAAC,IAAD,EAAOY,0CAAP,CAAP,CAAkC8H,qBAAlC,CAAf;;;ACbA;AACA;AAEA;AACA;AAEA;AAMe,SAASY,iBAAT,CAA2B9T,KAA3B,EAAyC;EACpD,oBACI,oBAAC,uBAAD;IACI,iBAAiB,eACb,oBAAC,sBAAD;MACI,EAAE,EAAC,kCADP;MAEI,cAAc,EAAC;IAFnB,EAFR;IAOI,QAAQ,eACJ,oBAAC,sBAAD;MACI,EAAE,EAAC,mBADP;MAEI,cAAc,EAAC;IAFnB,EARR;IAaI,YAAY,eACR,oBAAC,sBAAD;MACI,EAAE,EAAC,+BADP;MAEI,cAAc,EAAC;IAFnB,EAdR;IAmBI,UAAU,eACN,oBAAC,sBAAD;MACI,EAAE,EAAC,iCADP;MAEI,cAAc,EAAC;IAFnB,EApBR;IAyBI,QAAQ,EAAEA,KAAK,CAACuT;EAzBpB,EADJ;AA6BH;;EAjCGA;;;;;;;;ACTJ;AACA;AAEA;AAEA;AACA;AAIA;AAEA;AAce,MAAMU,aAAN,SAA4B7U,mBAA5B,CAAuD;EAAA;IAAA;;IAAA,qDAOnD,MAAY;MACvB,IAAI,KAAKY,KAAL,CAAWuT,QAAf,EAAyB;QACrB,KAAKvT,KAAL,CAAWuT,QAAX,CAAoB,KAAKvT,KAAL,CAAWkU,KAAX,CAAiB/N,EAArC;MACH;;MAED,KAAKnG,KAAL,CAAW+F,OAAX,CAAmBoO,iBAAnB,CAAqC,KAAKnU,KAAL,CAAWkU,KAAX,CAAiB/N,EAAtD;IACH,CAbiE;EAAA;;EAelEpG,MAAM,GAAgB;IAClB,MAAMmU,KAAK,GAAG,KAAKlU,KAAL,CAAWkU,KAAzB;IACA,MAAME,eAAe,GAAG,KAAKpU,KAAL,CAAWoU,eAAnC;IACA,IAAIC,kBAAkB,GAAG,KAAKrU,KAAL,CAAWqU,kBAApC;;IAEA,IAAID,eAAe,IAAIA,eAAe,KAAKC,kBAA3C,EAA+D;MAC3DA,kBAAkB,IAAI,QAAQD,eAAR,GAA0B,GAAhD;IACH;;IAED,IAAIE,YAAY,gBAAG,oBAAC,iBAAD;MAAmB,QAAQ,EAAE,KAAKC;IAAlC,EAAnB;;IAEA,IAAIL,KAAK,CAACM,UAAN,KAAqB,KAAKxU,KAAL,CAAWyU,aAApC,EAAmD;MAC/CH,YAAY,gBACR,oBAAC,uCAAD;QAAuB,WAAW,EAAE,CAAC3D,sDAAD;MAApC,GACK2D,YADL,CADJ;IAKH,CAND,MAMO;MACHA,YAAY,gBACR,oBAAC,uCAAD;QAAuB,WAAW,EAAE,CAAC3D,sDAAD;MAApC,gBACI,oBAAC,uCAAD;QAAuB,WAAW,EAAE,CAACA,oEAAD;MAApC,GACK2D,YADL,CADJ,CADJ;IAOH;;IAED,oBACI;MAAI,SAAS,EAAC;IAAd,gBACI;MAAI,SAAS,EAAC;IAAd,GACK,MAAMJ,KAAK,CAAC/T,IAAZ,GAAmB,GADxB,CADJ,eAII;MAAI,SAAS,EAAC;IAAd,gBACI;MACI,SAAS,EAAC,UADd;MAEI,KAAK,EAAE;QAACyU,eAAe,EAAE,SAASb,oEAAA,CAA+BG,KAAK,CAAC/N,EAArC,CAAT,GAAoD;MAAtE;IAFX,EADJ,CAJJ,eAUI;MAAI,SAAS,EAAC;IAAd,GACKkO,kBADL,CAVJ,eAaI;MAAI,SAAS,EAAC;IAAd,GACKC,YADL,CAbJ,CADJ;EAmBH;;AA7DiE;;+BAAjDL;EAVjBa;EACAL;EACAJ;EACAD;EACAb;EACAxN;IACIoO;;;;+BAIaF,+BACK;EAClBC,KAAK,EAAE,EADW;EAElBO,aAAa,EAAE,EAFG;EAGlBJ,kBAAkB,EAAE;AAHF;;AC3B1B;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAIA;AAIA;;AAEA,SAASxJ,+BAAT,CAAyBrK,KAAzB,EAA6CoQ,QAA7C,EAA8D;EAC1D,MAAMsD,KAAK,GAAG1T,KAAK,CAACC,QAAN,CAAeyU,MAAf,CAAsBC,WAAtB,CAAkCvE,QAAQ,CAACkE,OAA3C,CAAd;EACA,MAAMM,OAAO,GAAGzL,kCAAO,CAACnJ,KAAD,EAAQ0T,KAAK,CAACM,UAAd,CAAvB;EAEA,OAAO;IACHN,KADG;IAEHG,kBAAkB,EAAEY,sCAAoB,CAACzU,KAAD,EAAQ4U,OAAR,CAFrC;IAGHhB,eAAe,EAAEgB,OAAO,GAAGA,OAAO,CAAC3P,QAAX,GAAsB,EAH3C;IAIHgP,aAAa,EAAEM,2CAAgB,CAACvU,KAAD,CAJ5B;IAKH6U,WAAW,EAAEL,gCAAc,CAACxU,KAAD;EALxB,CAAP;AAOH;;AAED,SAAS4K,kCAAT,CAA4BC,QAA5B,EAA+D;EAC3D,OAAO;IACHtF,OAAO,EAAE0E,4BAAkB,CAAC;MACxB0J,iBAAiBA,EAAAA,wCAAAA;IADO,CAAD,EAExB9I,QAFwB;EADxB,CAAP;AAKH;;AAED,sDAAeb,cAAO,CAACK,+BAAD,EAAkBO,kCAAlB,CAAP,CAA6C6I,aAA7C,CAAf;;;;;;;;;;;;;;;;;ACxCA;AACA;AAEA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,MAAMyB,cAAc,GAAG,EAAvB;AACA,MAAMC,+BAA+B,GAAG,GAAxC;AAoCe,MAAMC,SAAN,SAAwBxW,mBAAxB,CAA0D;EAGrE4D,WAAW,CAAChD,KAAD,EAAe;IACtB,MAAMA,KAAN;;IADsB;;IAAA,4CAsBdiD,CAAD,IAA8D;MACrE,IAAIA,CAAJ,EAAO;QACHA,CAAC,CAAC2D,cAAF;MACH;;MAED,MAAMiP,IAAI,GAAG,KAAKrV,KAAL,CAAWsV,IAAX,GAAkB,CAA/B;MACA,KAAK5S,QAAL,CAAc;QAAC6S,WAAW,EAAE;MAAd,CAAd;MACA,KAAK/V,KAAL,CAAW+F,OAAX,CAAmBiQ,eAAnB,CAAmCH,IAAnC,EAAyCH,cAAzC,EAAyDJ,iDAAzD,EAA6E,IAA7E,EACI9L,IADJ,CACS,QAAqC;QAAA,IAApC;UAAC1C;QAAD,CAAoC;QACtC,KAAK5D,QAAL,CAAc;UAAC4S,IAAI,EAAED,IAAP;UAAaE,WAAW,EAAE;QAA1B,CAAd;;QACA,IAAIjP,IAAI,IAAIA,IAAI,CAACjD,MAAL,GAAc6R,cAA1B,EAA0C;UACtC,KAAKxS,QAAL,CAAc;YAACgT,YAAY,EAAE;UAAf,CAAd;QACH;;QAED,KAAKlW,KAAL,CAAWmW,WAAX;MACH,CARL;IASH,CAtCyB;;IAAA,gDAuCVlT,CAAD,IAA8D;MACzE,IAAIA,CAAJ,EAAO;QACHA,CAAC,CAAC2D,cAAF;MACH;;MAED,KAAK1D,QAAL,CAAc;QACV4S,IAAI,EAAE,KAAKtV,KAAL,CAAWsV,IAAX,GAAkB,CADd;QAEVC,WAAW,EAAE,KAFH;QAGVG,YAAY,EAAE;MAHJ,CAAd;MAMA,KAAKlW,KAAL,CAAWmW,WAAX;IACH,CAnDyB;;IAAA,kDAqDYlT,CAAD,IAA0B;MAC3D,IAAI,CAACA,CAAD,IAAM,CAACA,CAAC,CAACE,MAAb,EAAqB;QACjB;MACH;;MAED,MAAMiT,IAAI,GAAInT,CAAC,CAACE,MAAH,CAA+BC,KAA/B,IAAwC,EAArD;MAEAiT,YAAY,CAAC,KAAKC,aAAN,CAAZ;MAEA,KAAKA,aAAL,GAAqBC,UAAU,CAAC,YAAY;QACxC,IAAIH,IAAI,CAAC7H,IAAL,OAAgB,EAApB,EAAwB;UACpB,KAAKrL,QAAL,CAAc;YAACsT,YAAY,EAAE,IAAf;YAAqBV,IAAI,EAAE;UAA3B,CAAd;UACA;QACH;;QAED,KAAK5S,QAAL,CAAc;UAACK,OAAO,EAAE;QAAV,CAAd;QAEA,MAAM;UAACuD;QAAD,IAAkC,MAAM,KAAK9G,KAAL,CAAW+F,OAAX,CAAmB0Q,kBAAnB,CAC1CL,IAD0C,EAE1C,EAF0C,EAG1C,IAH0C,CAA9C;;QAMA,IAAItP,IAAJ,EAAU;UACN,KAAK5D,QAAL,CAAc;YACVsT,YAAY,EAAE1P,IAAI,CAACpD,GAAL,CAAUgT,EAAD,IAAqBA,EAAE,CAACvQ,EAAjC,CADJ;YAEV5C,OAAO,EAAE;UAFC,CAAd;QAIH,CALD,MAKO;UACH,KAAKL,QAAL,CAAc;YAACsT,YAAY,EAAE,EAAf;YAAmBjT,OAAO,EAAE;UAA5B,CAAd;QACH;MACJ,CAtB8B,EAsB5BoS,+BAtB4B,CAA/B;IAuBH,CArFyB;;IAAA,oDAuFNb,OAAD,IAA2B;MAC1C,IAAI,CAAC,KAAKtU,KAAL,CAAWgW,YAAhB,EAA8B;QAC1B;MACH;;MAED,MAAM/K,KAAK,GAAG,KAAKjL,KAAL,CAAWgW,YAAX,CAAwB3Q,OAAxB,CAAgCiP,OAAhC,CAAd;;MAEA,IAAIrJ,KAAK,GAAG,CAAZ,EAAe;QACX;MACH;;MAED,MAAMkL,eAAe,GAAG,CAAC,GAAG,KAAKnW,KAAL,CAAWgW,YAAf,CAAxB;MACAG,eAAe,CAACC,MAAhB,CAAuBnL,KAAvB,EAA8B,CAA9B;MACA,KAAKvI,QAAL,CAAc;QAACsT,YAAY,EAAEG;MAAf,CAAd;IACH,CArGyB;;IAEtB,KAAKL,aAAL,GAAqB,IAArB;IACA,KAAK9V,KAAL,GAAa;MACT+C,OAAO,EAAE,IADA;MAETuS,IAAI,EAAE,CAFG;MAGTC,WAAW,EAAE,KAHJ;MAITS,YAAY,EAAE,IAJL;MAKTN,YAAY,EAAE;IALL,CAAb;EAOH;;EAEsB,MAAjBhN,iBAAiB,GAAkB;IACrC,KAAKlJ,KAAL,CAAW+F,OAAX,CAAmBiQ,eAAnB,CAAmC,CAAnC,EAAsCN,cAAc,GAAG,CAAvD,EAA0DJ,iDAA1D,EAA8E,IAA9E,EACI9L,IADJ,CACS,SAAqC;MAAA,IAApC;QAAC1C;MAAD,CAAoC;MACtC,KAAK5D,QAAL,CAAc;QAACK,OAAO,EAAE;MAAV,CAAd;;MACA,IAAIuD,IAAI,IAAIA,IAAI,CAACjD,MAAL,GAAc6R,cAA1B,EAA0C;QACtC,KAAKxS,QAAL,CAAc;UAACgT,YAAY,EAAE;QAAf,CAAd;MACH;IACJ,CANL;EAOH;;EAmFDnW,MAAM,GAAgB;IAClB,MAAMyW,YAAY,GAAG,KAAKhW,KAAL,CAAWgW,YAAhC;IACA,MAAMtB,MAAM,GAAG,EAAf;IACA,IAAI2B,UAAJ;IACA,IAAIC,cAAJ;;IAEA,IAAI,KAAKtW,KAAL,CAAW+C,OAAf,EAAwB;MACpB2R,MAAM,CAACzN,IAAP,eACI;QACI,GAAG,EAAC,SADR;QAEI,SAAS,EAAC;MAFd,gBAII;QAAI,OAAO,EAAE;MAAb,gBACI,oBAAC,6BAAD;QAAe,GAAG,EAAC;MAAnB,EADJ,CAJJ,CADJ;IAUH,CAXD,MAWO,IACH,KAAKzH,KAAL,CAAW+W,QAAX,CAAoBlT,MAApB,KAA+B,CAA/B,IACC2S,YAAY,IAAIA,YAAY,CAAC3S,MAAb,KAAwB,CAFtC,EAGL;MACEqR,MAAM,CAACzN,IAAP,eACI;QACI,GAAG,EAAC,OADR;QAEI,SAAS,EAAC;MAFd,gBAII;QAAI,OAAO,EAAE;MAAb,gBACI,oBAAC,sBAAD;QACI,EAAE,EAAC,kBADP;QAEI,cAAc,EAAC;MAFnB,EADJ,CAJJ,CADJ;IAaH,CAjBM,MAiBA,IAAI+O,YAAJ,EAAkB;MACrBA,YAAY,CAACpP,OAAb,CAAsB0N,OAAD,IAAqB;QACtCI,MAAM,CAACzN,IAAP,eACI,oBAAC,eAAD;UACI,GAAG,EAAE,sBAAsBqN,OAD/B;UAEI,OAAO,EAAEA,OAFb;UAGI,QAAQ,EAAE,KAAKkC,gBAHnB;UAII,OAAO,EAAE;YAAC7C,iBAAiBA,EAAAA,wCAAAA;UAAlB;QAJb,EADJ;MAQH,CATD;IAUH,CAXM,MAWA;MACH,MAAM8C,SAAS,GAAG,KAAKzW,KAAL,CAAWsV,IAAX,GAAkBJ,cAApC;MACA,MAAMwB,OAAO,GAAGD,SAAS,GAAGvB,cAA5B;MACA,MAAMyB,eAAe,GAAG,KAAKnX,KAAL,CAAW+W,QAAX,CAAoBK,KAApB,CAA0BH,SAA1B,EAAqCC,OAArC,CAAxB;MAEAC,eAAe,CAAC/P,OAAhB,CAAyB0N,OAAD,IAAqB;QACzCI,MAAM,CAACzN,IAAP,eACI,oBAAC,eAAD;UACI,GAAG,EAAE,oBAAoBqN,OAD7B;UAEI,OAAO,EAAEA,OAFb;UAGI,OAAO,EAAE;YAACX,iBAAiBA,EAAAA,wCAAAA;UAAlB;QAHb,EADJ;MAOH,CARD;;MAUA,IAAI,KAAK3T,KAAL,CAAW0V,YAAf,EAA6B;QACzB,MAAMmB,cAAc,gBAChB,+CACI,oBAAC,sBAAD;UACI,EAAE,EAAC,yBADP;UAEI,cAAc,EAAC;QAFnB,EADJ,eAKI,oBAAC,2BAAD;UAAU,mBAAmB,EAAC;QAA9B,EALJ,CADJ;QAUAR,UAAU,gBACN,oBAAC,0BAAD;UACI,QAAQ,EAAC,UADb;UAEI,YAAY,EAAC,YAFjB;UAGI,OAAO,EAAE,KAAKS,QAHlB;UAII,MAAM,EAAE,KAAK9W,KAAL,CAAWuV,WAJvB;UAKI,QAAQ,EAAE,KAAKvV,KAAL,CAAWuV,WALzB;UAMI,cAAc,EAAEsB,cANpB;UAOI,aAAa,EAAEA;QAPnB,EADJ;MAWH;;MAED,IAAI,KAAK7W,KAAL,CAAWsV,IAAX,GAAkB,CAAtB,EAAyB;QACrBgB,cAAc,gBACV;UACI,SAAS,EAAC,cADd;UAEI,OAAO,EAAE,KAAKS;QAFlB,gBAII,oBAAC,+BAAD;UAAc,mBAAmB,EAAC;QAAlC,EAJJ,eAKI,oBAAC,sBAAD;UACI,EAAE,EAAC,yBADP;UAEI,cAAc,EAAC;QAFnB,EALJ,CADJ;MAYH;IACJ;;IAED,oBACI,8CACI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,6BAAD,OADJ,eAEI,oBAAC,8BAAD;MACI,IAAI,EAAC,QADT;MAEI,SAAS,EAAC,cAFd;MAGI,WAAW,EAAE;QACTpR,EAAE,EAAEoF,UAAC,CAAC,mBAAD,CADI;QAETG,cAAc,EAAE;MAFP,CAHjB;MAOI,QAAQ,EAAE,KAAK8L,cAPnB;MAQI,KAAK,EAAEjT,gBAAK,CAACC;IARjB,EAFJ,CADJ,CADJ,eAgBI;MAAM,SAAS,EAAC;IAAhB,gBACI,4CACI,oBAAC,sBAAD;MACI,EAAE,EAAC,iBADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CADJ,eAOI,4CACI,oBAAC,sBAAD;MACI,EAAE,EAAC,kBADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CAPJ,CAhBJ,eA8BI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAO,SAAS,EAAC;IAAjB,gBACI,gDACI;MAAI,SAAS,EAAC;IAAd,gBACI;MAAI,SAAS,EAAC;IAAd,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,iBADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CADJ,eAOI;MAAI,SAAS,EAAC;IAAd,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,kBADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CAPJ,eAaI;MAAI,SAAS,EAAC;IAAd,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,oBADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CAbJ,eAmBI;MAAI,SAAS,EAAC;IAAd,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,oBADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CAnBJ,CADJ,CADJ,eA6BI,mCAAQ0Q,MAAR,CA7BJ,CADJ,CA9BJ,eA+DI;MAAK,SAAS,EAAC;IAAf,GACK4B,cADL,EAEKD,UAFL,CA/DJ,CADJ;EAsEH;;AApRoE;;0BAApDjB;EA7BjBmB;EAKAZ;EACApQ;IAKIiQ;IAKAS;;;;AAoSR,MAAMlS,gBAAK,GAAG;EACVC,MAAM,EAAE;IAACQ,QAAQ,EAAE,CAAX;IAAcC,UAAU,EAAE;EAA1B;AADE,CAAd;;ACjVA;AACA;AAEA;AACA;AAEA;AAEA;AAKA;;AAOA,SAAS4F,0BAAT,CAAyBrK,KAAzB,EAA6C;EACzC,OAAO;IACHuW,QAAQ,EAAEU,gDAA6B,CAACjX,KAAD,CAA7B,IAAwC;EAD/C,CAAP;AAGH;;AAED,SAAS4K,6BAAT,CAA4BC,QAA5B,EAA+D;EAC3D,OAAO;IACHtF,OAAO,EAAE0E,4BAAkB,CAA+C;MACtEuL,eADsE;MAEtES,kBAAkBA,EAAAA,yCAAAA;IAFoD,CAA/C,EAGxBpL,QAHwB;EADxB,CAAP;AAMH;;AAED,iDAAeb,cAAO,CAACK,0BAAD,EAAkBO,6BAAlB,CAAP,CAA6CwK,SAA7C,CAAf;;;;;;;ACnCA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAae,MAAM8B,SAAN,SAAwBtY,mBAAxB,CAAmD;EAAA;IAAA;;IAAA,+CAYhD,MAAM;MAChB2S,QAAQ,CAACV,KAAT,GAAiBzO,6BAAA,CAAsB,qBAAtB,EAA6C,cAA7C,IAA+D,KAA/D,GAAuE,KAAK5C,KAAL,CAAW2X,eAAlF,GAAoG,GAApG,GAA0G,KAAK3X,KAAL,CAAWH,QAAtI;IACH,CAd6D;EAAA;;EAO9DqJ,iBAAiB,GAAG;IAChB,KAAKkJ,WAAL;IACA,KAAKpS,KAAL,CAAW+F,OAAX,CAAmB6R,iBAAnB,CAAqC,CAAC,cAAD,EAAiB,YAAjB,EAA+B,aAA/B,EAA8C,WAA9C,CAArC;EACH;;EAMDC,kBAAkB,CAACC,SAAD,EAAmB;IACjC,IAAI,KAAK9X,KAAL,CAAWH,QAAX,KAAwBiY,SAAS,CAACjY,QAAtC,EAAgD;MAC5C,KAAKuS,WAAL;IACH;EACJ;;EAEDrS,MAAM,GAAG;IACL,oBACI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAK,SAAS,EAAC;IAAf,gBACI,6CACI,oBAAC,sBAAD;MACI,EAAE,EAAC,mBADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CADJ,eAOI,oBAAC,uCAAD;MAAuB,WAAW,EAAE,CAAC4Q,sDAAD;IAApC,gBACI,oBAAC,qBAAD;MACI,SAAS,EAAC,UADd;MAEI,EAAE,EAAE,MAAM,KAAK3Q,KAAL,CAAWgY,QAAjB,GAA4B;IAFpC,gBAII;MACI,IAAI,EAAC,QADT;MAEI,SAAS,EAAC;IAFd,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,gBADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CAJJ,CADJ,CAPJ,CADJ,eAyBI,oBAAC,UAAD;MAAW,WAAW,EAAE,KAAKhY,KAAL,CAAWmW;IAAnC,EAzBJ,CADJ;EA6BH;;AApD6D;;0BAA7CuB;EAVjB/V;EACAqW;EACAL;EACA9X;EAEAkG;;;0BAKiB2R,2BACK;EAClBM,QAAQ,EAAE,EADQ;EAElBL,eAAe,EAAE,EAFC;EAGlB9X,QAAQ,EAAE;AAHQ;;AC1B1B;AACA;AAEA;AACA;AAEA;AACA;AAIA;;AAEA,SAASgL,qBAAT,CAAyBrK,KAAzB,EAA6C;EACzC,MAAMb,IAAI,GAAGqV,gCAAc,CAACxU,KAAD,CAAd,IAAyB,EAAtC;EAEA,OAAO;IACHmB,MAAM,EAAEhC,IAAI,CAACwG,EADV;IAEH6R,QAAQ,EAAErY,IAAI,CAACQ,IAFZ;IAGHwX,eAAe,EAAEhY,IAAI,CAAC+C,YAHnB;IAIH7C,QAAQ,EAAEW,KAAK,CAACC,QAAN,CAAewX,OAAf,CAAuBnN,MAAvB,CAA8B4H;EAJrC,CAAP;AAMH;;AAED,SAAStH,wBAAT,CAA4BC,QAA5B,EAAgD;EAC5C,OAAO;IACHtF,OAAO,EAAE0E,4BAAkB,CAAC;MACxBmN,iBAAiBA,EAAAA,+BAAAA;IADO,CAAD,EAExBvM,QAFwB;EADxB,CAAP;AAKH;;AAED,4CAAeb,cAAO,CAACK,qBAAD,EAAkBO,wBAAlB,CAAP,CAA6CsM,SAA7C,CAAf;;;;;;;;;;;;;;;;;AChCA;AACA;AAEA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AAkCe,MAAMQ,QAAN,SAAuB9Y,mBAAvB,CAAyE;EACpF4D,WAAW,CAAChD,KAAD,EAAuB;IAC9B,MAAMA,KAAN;;IAD8B,mDAYf,MAAOiD,CAAP,IAAwD;MACvE,OAAO,KAAK4M,YAAL,CAAkB5M,CAAlB,CAAP;IACH,CAdiC;;IAAA,wDAgBV,MAAOA,CAAP,IAA6E;MACjG,OAAO,KAAK4M,YAAL,CAAkB5M,CAAlB,CAAP;IACH,CAlBiC;;IAAA,+CAoBnB,MAAOA,CAAP,IAAqD;MAChE,MAAM;QAAC8C,OAAD;QAAUoS,QAAV;QAAoBjQ,IAApB;QAA0BvI;MAA1B,IAAkC,KAAKK,KAA7C;MACA,MAAM;QAAC0N,KAAD;QAAQvN,IAAR;QAAciY;MAAd,IAAwB,KAAK5X,KAAnC;MAEAyC,CAAC,CAAC2D,cAAF;;MAEA,IAAIwR,MAAJ,EAAY;QACR;MACH;;MAED,KAAKlV,QAAL,CAAc;QACVkV,MAAM,EAAE,IADE;QAEVvR,KAAK,EAAE;MAFG,CAAd;MAKA,MAAMqN,KAAsB,GAAG;QAC3BM,UAAU,EAAEtM,IAAI,CAAC/B,EADU;QAE3BhG,IAAI,EAAEA,IAAI,CAACoO,IAAL,GAAYlL,WAAZ;MAFqB,CAA/B,CAfgE,CAoBhE;;MACA,IAAI6Q,KAAK,CAAC/T,IAAN,CAAWkY,UAAX,CAAsB,GAAtB,KAA8BnE,KAAK,CAAC/T,IAAN,CAAWmY,QAAX,CAAoB,GAApB,CAAlC,EAA4D;QACxDpE,KAAK,CAAC/T,IAAN,GAAa+T,KAAK,CAAC/T,IAAN,CAAWoY,SAAX,CAAqB,CAArB,EAAwBrE,KAAK,CAAC/T,IAAN,CAAW0D,MAAX,GAAoB,CAA5C,CAAb;MACH;;MAED,IAAI,CAACqQ,KAAK,CAAC/T,IAAX,EAAiB;QACb,KAAK+C,QAAL,CAAc;UACVkV,MAAM,EAAE,KADE;UAEVvR,KAAK,eACD,oBAAC,sBAAD;YACI,EAAE,EAAC,wBADP;YAEI,cAAc,EAAC;UAFnB;QAHM,CAAd;QAUA;MACH;;MAED,IAAK,cAAD,CAAiB2R,IAAjB,CAAsBtE,KAAK,CAAC/T,IAA5B,CAAJ,EAAuC;QACnC,KAAK+C,QAAL,CAAc;UACVkV,MAAM,EAAE,KADE;UAEVvR,KAAK,eACD,oBAAC,sBAAD;YACI,EAAE,EAAC,uBADP;YAEI,cAAc,EAAC;UAFnB;QAHM,CAAd;QAUA;MACH;;MAED,IAAIsR,QAAQ,CAACM,cAAT,CAAwBvE,KAAK,CAAC/T,IAA9B,CAAJ,EAAyC;QACrC,KAAK+C,QAAL,CAAc;UACVkV,MAAM,EAAE,KADE;UAEVvR,KAAK,eACD,oBAAC,sBAAD;YACI,EAAE,EAAC,qBADP;YAEI,cAAc,EAAC;UAFnB;QAHM,CAAd;QAUA;MACH;;MAED,IAAIsR,QAAQ,CAACO,GAAT,CAAaxE,KAAK,CAAC/T,IAAnB,CAAJ,EAA8B;QAC1B,KAAK+C,QAAL,CAAc;UACVkV,MAAM,EAAE,KADE;UAEVvR,KAAK,eACD,oBAAC,sBAAD;YACI,EAAE,EAAC,2BADP;YAEI,cAAc,EAAC;UAFnB;QAHM,CAAd;QAUA;MACH;;MAED,IAAI,CAAC6G,KAAL,EAAY;QACR,KAAKxK,QAAL,CAAc;UACVkV,MAAM,EAAE,KADE;UAEVvR,KAAK,eACD,oBAAC,sBAAD;YACI,EAAE,EAAC,yBADP;YAEI,cAAc,EAAC;UAFnB;QAHM,CAAd;QAUA;MACH;;MAED,MAAM8R,gBAAgB,GAAG,OAAO,IAAhC;;MACA,IAAIjL,KAAK,CAACW,IAAN,GAAasK,gBAAjB,EAAmC;QAC/B,KAAKzV,QAAL,CAAc;UACVkV,MAAM,EAAE,KADE;UAEVvR,KAAK,eACD,oBAAC,sBAAD;YACI,EAAE,EAAC,yBADP;YAEI,cAAc,EAAC;UAFnB;QAHM,CAAd;QAUA;MACH;;MAED,MAAM+R,QAAQ,GAAG,MAAM7S,OAAO,CAAC8S,iBAAR,CAA0B3E,KAA1B,EAAgDxG,KAAhD,CAAvB;;MAEA,IAAI,UAAUkL,QAAd,EAAwB;QACpB,MAAME,UAAU,GAAGF,QAAnB;;QACA,IAAIE,UAAU,IAAIA,UAAU,CAAChS,IAAX,CAAgB3G,IAAhB,KAAyB+T,KAAK,CAAC/T,IAAjD,EAAuD;UACnD4L,+CAAA,CAAoB,MAAMpM,IAAI,CAACQ,IAAX,GAAkB,QAAtC;UACA;QACH;MACJ;;MAED,IAAI,WAAWyY,QAAf,EAAyB;QACrB,MAAMG,aAAa,GAAGH,QAAtB;;QACA,IAAIG,aAAJ,EAAmB;UACf,KAAK7V,QAAL,CAAc;YACVkV,MAAM,EAAE,KADE;YAEVvR,KAAK,EAAEkS,aAAa,CAAClS,KAAd,CAAoBG;UAFjB,CAAd;UAKA;QACH;MACJ;;MAED,MAAMgS,YAAY,gBACd,oBAAC,sBAAD;QACI,EAAE,EAAC,uBADP;QAEI,cAAc,EAAC;MAFnB,EADJ;MAOA,KAAK9V,QAAL,CAAc;QACVkV,MAAM,EAAE,KADE;QAEVvR,KAAK,EAAGmS;MAFE,CAAd;IAIH,CAnKiC;;IAAA,6CAqKpB/V,CAAD,IAA4C;MACrD,KAAKC,QAAL,CAAc;QACV/C,IAAI,EAAE8C,CAAC,CAACE,MAAF,CAASC;MADL,CAAd;IAGH,CAzKiC;;IAAA,8CA2KnBH,CAAD,IAA4C;MACtD,IAAIA,CAAC,CAACE,MAAF,CAAS0J,KAAT,IAAkB,IAAlB,IAA0B5J,CAAC,CAACE,MAAF,CAAS0J,KAAT,CAAehJ,MAAf,KAA0B,CAAxD,EAA2D;QACvD,KAAKX,QAAL,CAAc;UACVwK,KAAK,EAAE,IADG;UAEVuL,QAAQ,EAAE;QAFA,CAAd;QAKA;MACH;;MAED,MAAMvL,KAAK,GAAGzK,CAAC,CAACE,MAAF,CAAS0J,KAAT,CAAgB,CAAhB,CAAd;MAEA,MAAMK,MAAM,GAAG,IAAIC,UAAJ,EAAf;;MACAD,MAAM,CAACE,MAAP,GAAgB,MAAM;QAClB,KAAKlK,QAAL,CAAc;UACVwK,KADU;UAEVuL,QAAQ,EAAE/L,MAAM,CAACzD;QAFP,CAAd;MAIH,CALD;;MAMAyD,MAAM,CAACgM,aAAP,CAAqBxL,KAArB;IACH,CA/LiC;;IAG9B,KAAKlN,KAAL,GAAa;MACTL,IAAI,EAAE,EADG;MAETuN,KAAK,EAAE,IAFE;MAGTuL,QAAQ,EAAE,EAHD;MAITb,MAAM,EAAE,KAJC;MAKTvR,KAAK,EAAE;IALE,CAAb;EAOH;;EAuLD9G,MAAM,GAAgB;IAClB,IAAIoZ,QAAQ,GAAG,IAAf;;IACA,IAAI,KAAK3Y,KAAL,CAAWkN,KAAf,EAAsB;MAClByL,QAAQ,gBACJ;QAAM,SAAS,EAAC;MAAhB,GACK,KAAK3Y,KAAL,CAAWkN,KAAX,CAAiBvN,IADtB,CADJ;IAKH;;IAED,IAAIiZ,OAAO,GAAG,IAAd;;IACA,IAAI,KAAK5Y,KAAL,CAAWyY,QAAf,EAAyB;MACrBG,OAAO,gBACH;QAAK,SAAS,EAAC;MAAf,gBACI;QACI,SAAS,EAAC,wBADd;QAEI,OAAO,EAAC;MAFZ,gBAII,oBAAC,sBAAD;QACI,EAAE,EAAC,mBADP;QAEI,cAAc,EAAC;MAFnB,EAJJ,CADJ,eAUI;QAAK,SAAS,EAAC;MAAf,gBACI,oBAAC,sBAAD;QACI,EAAE,EAAC,4BADP;QAEI,cAAc,EAAC,wCAFnB;QAGI,MAAM,EAAE;UACJ1L,KAAK,eACD;YACI,SAAS,EAAC,UADd;YAEI,KAAK,EAAE;cAACkH,eAAe,EAAE,SAAS,KAAKpU,KAAL,CAAWyY,QAApB,GAA+B;YAAjD;UAFX;QAFA;MAHZ,EADJ,CAVJ,CADJ;IA2BH;;IAED,oBACI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,eAAD,qBACI,oBAAC,qBAAD;MAAM,EAAE,EAAE,MAAM,KAAKjZ,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB,GAA6B;IAAvC,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,mBADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CADJ,eAOI,oBAAC,sBAAD;MACI,EAAE,EAAC,kBADP;MAEI,cAAc,EAAC;IAFnB,EAPJ,CADJ,eAaI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,iBADd;MAEI,QAAQ,EAAE,KAAKkZ;IAFnB,gBAII;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,gBADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,EAAE,EAAC,MADP;MAEI,IAAI,EAAC,MAFT;MAGI,SAAS,EAAE,EAHf;MAII,SAAS,EAAC,cAJd;MAKI,KAAK,EAAE,KAAK7Y,KAAL,CAAWL,IALtB;MAMI,QAAQ,EAAE,KAAKmZ;IANnB,EADJ,eASI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,qBADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CATJ,CAVJ,CAJJ,eA+BI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,iBADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI,8CACI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAQ,SAAS,EAAC;IAAlB,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,wBADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CADJ,eAOI;MACI,EAAE,EAAC,cADP;MAEI,IAAI,EAAC,MAFT;MAGI,MAAM,EAAEhR,uEAHZ;MAII,QAAQ,EAAE,KAJd;MAKI,QAAQ,EAAE,KAAKkR;IALnB,EAPJ,CADJ,EAgBKL,QAhBL,eAiBI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,sBADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CAjBJ,CADJ,CAVJ,CA/BJ,EAoEKC,OApEL,eAqEI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,yBAAD;MACI,IAAI,EAAC,WADT;MAEI,KAAK,EAAE,KAAK5Y,KAAL,CAAWqG;IAFtB,EADJ,eAKI,oBAAC,qBAAD;MACI,SAAS,EAAC,qBADd;MAEI,EAAE,EAAE,MAAM,KAAK7G,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB,GAA6B;IAFrC,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,kBADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CALJ,eAcI,oBAAC,6BAAD;MACI,SAAS,EAAC,iBADd;MAEI,IAAI,EAAC,QAFT;MAGI,QAAQ,EAAE,KAAKK,KAAL,CAAW4X,MAHzB;MAII,YAAY,EAAErT,iCAAe,CAAC,kBAAD,EAAqB,WAArB,CAJjC;MAKI,OAAO,EAAE,KAAK0U;IALlB,gBAOI,oBAAC,sBAAD;MACI,EAAE,EAAC,gBADP;MAEI,cAAc,EAAC;IAFnB,EAPJ,CAdJ,CArEJ,CADJ,CAbJ,CADJ;EAmHH;;AA9VmF;;yBAAnEvB;EA7BjBnS;IACI8S;;;;ACxBR;AACA;AAEA;AACA;AAEA;AAKA;AAIA;;AAMA,SAAShO,yBAAT,CAAyBrK,KAAzB,EAA6C;EACzC,OAAO;IACH2X,QAAQ,EAAEuB,wCAAW,CAAClZ,KAAD;EADlB,CAAP;AAGH;;AAED,SAAS4K,4BAAT,CAA4BC,QAA5B,EAA+D;EAC3D,OAAO;IACHtF,OAAO,EAAE0E,4BAAkB,CAA+C;MACtEoO,iBAAiBA,EAAAA,wCAAAA;IADqD,CAA/C,EAExBxN,QAFwB;EADxB,CAAP;AAKH;;AAED,gDAAeb,cAAO,CAACK,yBAAD,EAAkBO,4BAAlB,CAAP,CAA6C8M,QAA7C,CAAf;;;;;ACnCA;AACA;AAEA;AACA;AACA;AACA;AAEA,MAAM2B,iBAAiB,GAAG,GAA1B;AAEO,SAASC,mCAAT,CAA6CnY,MAA7C,EAA4F;EAAA,IAAvCmU,IAAuC,uEAAhC,CAAgC;EAAA,IAA7BiE,OAA6B,uEAAnBF,iBAAmB;EAC/F,OAAO,MAAOxO,QAAP,IAAoB;IACvB,MAAM;MAACvE;IAAD,IAAS,MAAMuE,QAAQ,CAACsO,qCAAA,CAAoChY,MAApC,EAA4CmU,IAA5C,EAAkDiE,OAAlD,CAAD,CAA7B;;IACA,IAAIjT,IAAJ,EAAU;MACNuE,QAAQ,CAAC2O,4BAA4B,CAAClT,IAAD,CAA7B,CAAR;IACH;EACJ,CALD;AAMH;AAEM,SAASkT,4BAAT,CAAsCpY,KAAtC,EAA6C;EAChD,OAAO,OAAOyJ,QAAP,EAAiB4O,QAAjB,KAA8B;IACjC,MAAMzZ,KAAK,GAAGyZ,QAAQ,EAAtB;IACA,MAAMC,cAAc,GAAG,EAAvB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGvY,KAAK,CAACiC,MAA1B,EAAkCsW,CAAC,EAAnC,EAAuC;MACnC,MAAMC,IAAI,GAAGxY,KAAK,CAACuY,CAAD,CAAlB;;MACA,IAAI,CAACxQ,kCAAO,CAACnJ,KAAD,EAAQ4Z,IAAI,CAACnU,OAAb,CAAZ,EAAmC;QAC/BiU,cAAc,CAACE,IAAI,CAACnU,OAAN,CAAd,GAA+B,IAA/B;MACH;IACJ;;IAED,MAAMoU,IAAI,GAAGxY,MAAM,CAACyY,IAAP,CAAYJ,cAAZ,CAAb;;IACA,IAAIG,IAAI,CAACxW,MAAL,KAAgB,CAApB,EAAuB;MACnB;IACH;;IAEDwH,QAAQ,CAACuO,kCAAgB,CAACS,IAAD,CAAjB,CAAR;EACH,CAhBD;AAiBH;AAEM,SAASE,mCAAT,CAA6C5Y,MAA7C,EAA4F;EAAA,IAAvCmU,IAAuC,uEAAhC,CAAgC;EAAA,IAA7BiE,OAA6B,uEAAnBF,iBAAmB;EAC/F,OAAO,MAAOxO,QAAP,IAAoB;IACvB,MAAM;MAACvE;IAAD,IAAS,MAAMuE,QAAQ,CAACsO,qCAAA,CAAoC,EAApC,EAAwChY,MAAxC,EAAgDmU,IAAhD,EAAsDiE,OAAtD,CAAD,CAA7B;;IACA,IAAIjT,IAAJ,EAAU;MACNuE,QAAQ,CAACmP,4BAA4B,CAAC1T,IAAD,CAA7B,CAAR;IACH;EACJ,CALD;AAMH;AAEM,SAAS0T,4BAAT,CAAsC5Y,KAAtC,EAA6C;EAChD,OAAO,OAAOyJ,QAAP,EAAiB4O,QAAjB,KAA8B;IACjC,MAAMzZ,KAAK,GAAGyZ,QAAQ,EAAtB;IACA,MAAMC,cAAc,GAAG,EAAvB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGvY,KAAK,CAACiC,MAA1B,EAAkCsW,CAAC,EAAnC,EAAuC;MACnC,MAAMC,IAAI,GAAGxY,KAAK,CAACuY,CAAD,CAAlB;;MACA,IAAI,CAACxQ,kCAAO,CAACnJ,KAAD,EAAQ4Z,IAAI,CAAC5F,UAAb,CAAZ,EAAsC;QAClC0F,cAAc,CAACE,IAAI,CAAC5F,UAAN,CAAd,GAAkC,IAAlC;MACH;IACJ;;IAED,MAAM6F,IAAI,GAAGxY,MAAM,CAACyY,IAAP,CAAYJ,cAAZ,CAAb;;IACA,IAAIG,IAAI,CAACxW,MAAL,KAAgB,CAApB,EAAuB;MACnB;IACH;;IAEDwH,QAAQ,CAACuO,kCAAgB,CAACS,IAAD,CAAjB,CAAR;EACH,CAhBD;AAiBH;AAEM,SAASI,8BAAT,CAAwC9Y,MAAxC,EAAgD;EACnD,OAAO,MAAO0J,QAAP,IAAoB;IACvB,MAAM;MAACvE;IAAD,IAAS,MAAMuE,QAAQ,CAACsO,0CAAA,CAAyChY,MAAzC,CAAD,CAA7B;;IACA,IAAImF,IAAJ,EAAU;MACNuE,QAAQ,CAACsP,uBAAuB,CAAC7T,IAAD,CAAxB,CAAR;IACH;EACJ,CALD;AAMH;AAEM,SAAS6T,uBAAT,CAAiC5Z,QAAjC,EAA2C;EAC9C,OAAO,OAAOsK,QAAP,EAAiB4O,QAAjB,KAA8B;IACjC,MAAMzZ,KAAK,GAAGyZ,QAAQ,EAAtB;IACA,MAAMC,cAAc,GAAG,EAAvB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpZ,QAAQ,CAAC8C,MAA7B,EAAqCsW,CAAC,EAAtC,EAA0C;MACtC,MAAM9X,OAAO,GAAGtB,QAAQ,CAACoZ,CAAD,CAAxB;;MACA,IAAI,CAACxQ,kCAAO,CAACnJ,KAAD,EAAQ6B,OAAO,CAACmS,UAAhB,CAAZ,EAAyC;QACrC0F,cAAc,CAAC7X,OAAO,CAACmS,UAAT,CAAd,GAAqC,IAArC;MACH;IACJ;;IAED,MAAM6F,IAAI,GAAGxY,MAAM,CAACyY,IAAP,CAAYJ,cAAZ,CAAb;;IACA,IAAIG,IAAI,CAACxW,MAAL,KAAgB,CAApB,EAAuB;MACnB;IACH;;IAEDwH,QAAQ,CAACuO,kCAAgB,CAACS,IAAD,CAAjB,CAAR;EACH,CAhBD;AAiBH;AAEM,SAASO,wBAAT,GAAyE;EAAA,IAAvC9E,IAAuC,uEAAhC,CAAgC;EAAA,IAA7BiE,OAA6B,uEAAnBF,iBAAmB;EAC5E,OAAO,OAAOxO,QAAP,EAAiB4O,QAAjB,KAA8B;IACjC,IAAI3Z,4BAAW,CAAC2Z,QAAQ,EAAT,CAAf,EAA6B;MACzB5O,QAAQ,CAACsO,sCAAA,EAAD,CAAR;IACH;;IACD,MAAM;MAAC7S;IAAD,IAAS,MAAMuE,QAAQ,CAACsO,iCAAA,CAAgC7D,IAAhC,EAAsCiE,OAAtC,CAAD,CAA7B;;IACA,IAAIjT,IAAJ,EAAU;MACNuE,QAAQ,CAACwP,wBAAwB,CAAC/T,IAAD,CAAzB,CAAR;IACH;EACJ,CARD;AASH;AAEM,SAAS+T,wBAAT,CAAkCzZ,IAAlC,EAAwC;EAC3C,OAAO,OAAOiK,QAAP,EAAiB4O,QAAjB,KAA8B;IACjC,MAAMzZ,KAAK,GAAGyZ,QAAQ,EAAtB;IACA,MAAMC,cAAc,GAAG,EAAvB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG/Y,IAAI,CAACyC,MAAzB,EAAiCsW,CAAC,EAAlC,EAAsC;MAClC,MAAMW,GAAG,GAAG1Z,IAAI,CAAC+Y,CAAD,CAAhB;;MACA,IAAI,CAACxQ,kCAAO,CAACnJ,KAAD,EAAQsa,GAAG,CAACtG,UAAZ,CAAZ,EAAqC;QACjC0F,cAAc,CAACY,GAAG,CAACtG,UAAL,CAAd,GAAiC,IAAjC;MACH;IACJ;;IAED,MAAM6F,IAAI,GAAGxY,MAAM,CAACyY,IAAP,CAAYJ,cAAZ,CAAb;;IACA,IAAIG,IAAI,CAACxW,MAAL,KAAgB,CAApB,EAAuB;MACnB;IACH;;IAEDwH,QAAQ,CAACuO,kCAAgB,CAACS,IAAD,CAAjB,CAAR;EACH,CAhBD;AAiBH;;;;;;;AC/HD;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAQe,MAAMW,QAAN,SAAuB5b,mBAAvB,CAAkD;EAAA;IAAA;;IAAA,2CAMzC6D,CAAD,IAA8D;MAC7EA,CAAC,CAAC2D,cAAF;MACAmU,iCAAe,CAAC,KAAK/a,KAAL,CAAWoD,KAAZ,CAAf;IACH,CAT4D;EAAA;;EAWtDrD,MAAM,GAAG;IACZ,IAAI,CAACgS,QAAQ,CAACkJ,qBAAT,CAA+B,MAA/B,CAAL,EAA6C;MACzC,OAAO,IAAP;IACH;;IAED,MAAMC,OAAO,gBACT,oBAAC,iCAAD;MAAS,EAAE,EAAC;IAAZ,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAE,KAAKlb,KAAL,CAAWmb,SADnB;MAEI,cAAc,EAAE,KAAKnb,KAAL,CAAW0L;IAF/B,EADJ,CADJ;IASA,oBACI,oBAAC,8BAAD;MACI,SAAS,EAAEpD,qEADf;MAEI,SAAS,EAAC,KAFd;MAGI,OAAO,EAAE4S;IAHb,gBAKI;MACI,IAAI,EAAC,GADT;MAEI,eAAY,UAFhB;MAGI,SAAS,EAAC,iBAHd;MAII,OAAO,EAAE,KAAKE;IAJlB,EALJ,CADJ;EAcH;;AAvC4D;;yBAA5CJ;EALjB5X;EACAsI;EACAyP;;;yBAGiBH,0BACY;EACzBtP,cAAc,EAAE,MADS;EAEzByP,SAAS,EAAE;AAFc;;;;;;ACnBjC;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEO,SAAS7V,wCAAT,CAAuB+V,eAAvB,EAAwCC,OAAxC,EAAiDvZ,MAAjD,EAAyD;EAC5D,IAAI,CAACA,MAAL,EAAa;IACT,OAAO,IAAP;EACH;;EAED,IAAIsZ,eAAe,CAAC3Y,YAAhB,CAA6BW,WAA7B,GAA2CwC,OAA3C,CAAmD9D,MAAnD,MAA+D,CAAC,CAAhE,IACAsZ,eAAe,CAAC3V,WAAhB,CAA4BrC,WAA5B,GAA0CwC,OAA1C,CAAkD9D,MAAlD,MAA8D,CAAC,CADnE,EACsE;IAClE,OAAO,IAAP;EACH;;EAED,IAAIsZ,eAAe,CAACE,UAApB,EAAgC;IAC5B,IAAID,OAAO,IAAIA,OAAO,CAACnb,IAAR,CAAakD,WAAb,GAA2BwC,OAA3B,CAAmC9D,MAAnC,MAA+C,CAAC,CAA/D,EAAkE;MAC9D,OAAO,IAAP;IACH;EACJ;;EAED,OAAO,KAAP;AACH;AAEc,MAAMyZ,wBAAN,SAAuCpc,mBAAvC,CAA2D;EAAA;IAAA;;IAAA,gEAuCvD,MAAM;MACjB,KAAKY,KAAL,CAAWuT,QAAX,CAAoB,KAAKvT,KAAL,CAAWqb,eAA/B;IACH,CAzCqE;EAAA;;EA2CtEtb,MAAM,GAAG;IACL,MAAMsb,eAAe,GAAG,KAAKrb,KAAL,CAAWqb,eAAnC;IACA,MAAMC,OAAO,GAAG,KAAKtb,KAAL,CAAWsb,OAA3B;IACA,MAAMvZ,MAAM,GAAG,KAAK/B,KAAL,CAAW+B,MAAX,GAAoB,KAAK/B,KAAL,CAAW+B,MAAX,CAAkBsB,WAAlB,EAApB,GAAsD,EAArE;;IAEA,IAAI,CAACiC,wCAAa,CAAC+V,eAAD,EAAkBC,OAAlB,EAA2BvZ,MAA3B,CAAlB,EAAsD;MAClD,OAAO,IAAP;IACH;;IAED,IAAI4D,WAAJ;;IACA,IAAI0V,eAAe,CAAC3Y,YAApB,EAAkC;MAC9BiD,WAAW,GAAG0V,eAAe,CAAC3Y,YAA9B;IACH,CAFD,MAEO,IAAI4Y,OAAJ,EAAa;MAChB3V,WAAW,GAAG2V,OAAO,CAAC5Y,YAAtB;IACH,CAFM,MAEA;MACHiD,WAAW,gBACP,oBAAC,sBAAD;QACI,EAAE,EAAC,6CADP;QAEI,cAAc,EAAC;MAFnB,EADJ;IAMH;;IAED,IAAID,WAAW,GAAG,IAAlB;;IACA,IAAI2V,eAAe,CAAC3V,WAApB,EAAiC;MAC7BA,WAAW,gBACP;QAAK,SAAS,EAAC;MAAf,gBACI;QAAM,SAAS,EAAC;MAAhB,GACK2V,eAAe,CAAC3V,WADrB,CADJ,CADJ;IAOH;;IAED,IAAIK,OAAO,GAAG,IAAd;;IACA,IAAI,KAAK/F,KAAL,CAAWyb,SAAf,EAA0B;MACtB1V,OAAO,gBACH;QAAK,SAAS,EAAC;MAAf,gBACI,oBAAC,qBAAD;QAAM,EAAE,aAAM,KAAK/F,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB,qDAAqEkb,eAAe,CAAClV,EAArF;MAAR,gBACI,oBAAC,sBAAD;QACI,EAAE,EAAC,6BADP;QAEI,cAAc,EAAC;MAFnB,EADJ,CADJ,EAOK,KAPL,eAQI,oBAAC,uBAAD;QACI,YAAY,eACR,oBAAC,sBAAD;UACI,EAAE,EAAC,4CADP;UAEI,cAAc,EAAC;QAFnB,EAFR;QAOI,QAAQ,EAAE,KAAKoO;MAPnB,EARJ,CADJ;IAoBH;;IAED,MAAMmH,iBAAiB,GAAGrT,0BAAU,KAAK,SAAf,GAA2BgT,eAAe,CAAClV,EAArE;IAEA,oBACI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAQ,SAAS,EAAC;IAAlB,GACKR,WADL,CADJ,EAIKI,OAJL,CADJ,EAOKL,WAPL,eAQI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAM,SAAS,EAAC;IAAhB,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,4BADP;MAEI,cAAc,EAAC,YAFnB;MAGI,MAAM,EAAE;QACJiW,GAAG,EAAED;MADD;IAHZ,EADJ,eAQI,+CACI,oBAAC,QAAD;MACI,KAAK,EAAEA;IADX,EADJ,CARJ,CADJ,CARJ,eAwBI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAM,SAAS,EAAC;IAAhB,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,iCADP;MAEI,cAAc,EAAC,gDAFnB;MAGI,MAAM,EAAE;QACJtG,OAAO,EAAE,KAAKpV,KAAL,CAAWoV,OAAX,CAAmB3P,QADxB;QAEJmW,QAAQ,EAAEP,eAAe,CAACQ;MAFtB;IAHZ,EADJ,CADJ,CAxBJ,CADJ,CADJ;EAyCH;;AAhJqE;;0CAArDL,uCACE;EAEf;AACR;AACA;EACQH,eAAe,EAAElc,wCALF;;EAOf;AACR;AACA;EACQoU,QAAQ,EAAEpU,sCAVK;;EAYf;AACR;AACA;EACQ4C,MAAM,EAAE5C,6BAfO;;EAiBf;AACR;AACA;EACQiW,OAAO,EAAEjW,wCApBM;;EAsBf;AACR;AACA;EACQsc,SAAS,EAAEtc,sCAzBI;;EA2Bf;AACR;AACA;EACQQ,IAAI,EAAER,wCA9BS;;EAgCf;AACR;AACA;EACQmc,OAAO,EAAEnc,6BAAgBS;AAnCV;;;;;;;AClCvB;AACA;AAEA;AACA;AASA;AACA;AACA;AAEA;AACA;AAqBe,MAAMkc,yBAAN,SAAwC1c,mBAAxC,CAA0E;EACrF4D,WAAW,CAAChD,KAAD,EAAe;IACtB,MAAMA,KAAN;;IADsB,0EAoBDqb,eAAD,IAAsC;MAC1D,KAAKrb,KAAL,CAAW+F,OAAX,CAAmBgW,kBAAnB,CAAsCV,eAAe,CAAClV,EAAtD;IACH,CAtByB;;IAAA,2EAwBD,CAAC3D,CAAD,EAAqBC,CAArB,KAA4C;MACjE,IAAIuZ,YAAY,GAAGxZ,CAAC,CAACE,YAArB;;MACA,IAAI,CAACsZ,YAAL,EAAmB;QACf,MAAMC,QAAQ,GAAG,KAAKjc,KAAL,CAAWkc,QAAX,CAAoB1Z,CAAC,CAAC+Y,UAAtB,CAAjB;;QACA,IAAIU,QAAJ,EAAc;UACVD,YAAY,GAAGC,QAAQ,CAACvZ,YAAxB;QACH,CAFD,MAEO;UACHsZ,YAAY,GAAGpZ,6BAAA,CAAsB,6CAAtB,EAAqE,mBAArE,CAAf;QACH;MACJ;;MAED,MAAMuZ,YAAY,GAAG1Z,CAAC,CAACC,YAAvB;MAEA,OAAOsZ,YAAY,CAACrZ,aAAb,CAA2BwZ,YAA3B,CAAP;IACH,CAtCyB;;IAAA,qEAwCNpa,MAAD,IAAoB,KAAK/B,KAAL,CAAWoc,gBAAX,CACnC7Z,IADmC,CAC9B,KAAK8Z,sBADyB,EAEnCta,MAFmC,CAE3BsZ,eAAD,IAAsC/V,wCAAa,CAAC+V,eAAD,EAAkB,KAAKrb,KAAL,CAAWkc,QAAX,CAAoBb,eAAe,CAACE,UAApC,CAAlB,EAAmExZ,MAAnE,CAFvB,EAGnC2B,GAHmC,CAG9B2X,eAAD,IAAsC;MACtC,MAAMI,SAAS,GAAG,KAAKzb,KAAL,CAAWsc,uBAAX,IAAsC,KAAKtc,KAAL,CAAWkI,IAAX,CAAgB/B,EAAhB,KAAuBkV,eAAe,CAACpV,OAA/F;MACA,MAAMqV,OAAO,GAAG,KAAKtb,KAAL,CAAWkc,QAAX,CAAoBb,eAAe,CAACE,UAApC,CAAhB;MACA,oBACI,oBAAC,wBAAD;QACI,GAAG,EAAEF,eAAe,CAAClV,EADzB;QAEI,eAAe,EAAEkV,eAFrB;QAGI,QAAQ,EAAE,KAAKkB,qBAHnB;QAII,OAAO,EAAE,KAAKvc,KAAL,CAAW0I,KAAX,CAAiB2S,eAAe,CAACpV,OAAjC,KAA6C,EAJ1D;QAKI,SAAS,EAAEwV,SALf;QAMI,IAAI,EAAE,KAAKzb,KAAL,CAAWL,IANrB;QAOI,OAAO,EAAE2b;MAPb,EADJ;IAWH,CAjBkC,CAxCb;;IAGtB,KAAK9a,KAAL,GAAa;MACT+C,OAAO,EAAE;IADA,CAAb;EAGH;;EAED2F,iBAAiB,GAAG;IAChB,IAAI,KAAKlJ,KAAL,CAAWgS,sBAAf,EAAuC;MACnC,KAAKhS,KAAL,CAAW+F,OAAX,CAAmB+T,mCAAnB,CACI,KAAK9Z,KAAL,CAAWL,IAAX,CAAgBwG,EADpB,EAEImC,uFAFJ,EAGIA,6EAHJ,EAIEkB,IAJF,CAKI,MAAM,KAAKtG,QAAL,CAAc;QAACK,OAAO,EAAE;MAAV,CAAd,CALV;IAOH;EACJ;;EAyCDxD,MAAM,GAAG;IACL,oBACI,oBAAC,aAAD;MACI,MAAM,eACF,oBAAC,sBAAD;QACI,EAAE,EAAC,oCADP;QAEI,cAAc,EAAC;MAFnB,EAFR;MAOI,OAAO,eACH,oBAAC,sBAAD;QACI,EAAE,EAAC,iCADP;QAEI,cAAc,EAAC;MAFnB,EARR;MAaI,OAAO,EAAE,MAAM,KAAKC,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB,GAA6B,qCAb1C;MAcI,WAAW,EAAC,oBAdhB;MAeI,SAAS,eACL,oBAAC,sBAAD;QACI,EAAE,EAAC,mCADP;QAEI,cAAc,EAAC;MAFnB,EAhBR;MAqBI,eAAe,eACX,oBAAC,yCAAD;QACI,EAAE,EAAC,yCADP;QAEI,cAAc,EAAC;MAFnB,EAtBR;MA2BI,QAAQ,eACJ,oBAAC,sBAAD;QACI,EAAE,EAAC,kCADP;QAEI,cAAc,EAAC,mKAFnB;QAGI,MAAM,EAAE;UACJqc,YAAY,eACR;YACI,MAAM,EAAC,QADX;YAEI,GAAG,EAAC,qBAFR;YAGI,IAAI,EAAC;UAHT,gBAKI,oBAAC,sBAAD;YACI,EAAE,EAAC,+CADP;YAEI,cAAc,EAAC;UAFnB,EALJ,CAFA;UAaJ/J,YAAY,eACR;YACI,MAAM,EAAC,QADX;YAEI,GAAG,EAAC,qBAFR;YAGI,IAAI,EAAC;UAHT,gBAKI,oBAAC,sBAAD;YACI,EAAE,EAAC,+CADP;YAEI,cAAc,EAAC;UAFnB,EALJ;QAdA;MAHZ,EA5BR;MA2DI,iBAAiB,EAAE7P,6BAAA,CAAsB,oCAAtB,EAA4D,0BAA5D,CA3DvB;MA4DI,OAAO,EAAE,KAAKpC,KAAL,CAAW+C;IA5DxB,GA8DMxB,MAAD,IAAoB;MACjB,MAAMuB,QAAQ,GAAG,KAAK8Y,gBAAL,CAAsBra,MAAtB,CAAjB;MACA,OAAO,CAACuB,QAAD,EAAWA,QAAQ,CAACO,MAAT,GAAkB,CAA7B,CAAP;IACH,CAjEL,CADJ;EAqEH;;AAlIoF;;2CAApEiY;EAhBjBQ;EACAF;EAGApK;EACAjM;IACIgW;IACAjC;;;;AC9BR;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;;AAOA,SAASjP,2CAAT,CAAyBrK,KAAzB,EAA6C;EACzC,MAAMsK,MAAM,GAAGH,6BAAS,CAACnK,KAAD,CAAxB;EACA,MAAMmB,MAAM,GAAGtB,kCAAgB,CAACG,KAAD,CAA/B;EACA,MAAM8b,uBAAuB,GAAGK,8CAAmB,CAACnc,KAAD,EAAQmB,MAAR,EAAgBgP,6FAAhB,CAAnD;EACA,MAAMhQ,aAAa,GAAGJ,gBAAgB,CAACC,KAAD,CAAtC;EACA,MAAM4b,gBAAgB,GAAGva,MAAM,CAACyY,IAAP,CAAY3Z,aAAZ,EACrB+C,GADqB,CAChBmZ,GAAD,IAASlc,aAAa,CAACkc,GAAD,CADL,EAErB9a,MAFqB,CAEbsZ,eAAD,IAAqBA,eAAe,CAACpZ,OAAhB,KAA4BN,MAFnC,CAAzB;EAGA,MAAMqQ,sBAAsB,GAAGlH,MAAM,CAAC6H,sBAAP,KAAkC,MAAjE;EAEA,OAAO;IACHyJ,gBADG;IAEHF,QAAQ,EAAEO,mCAAc,CAACjc,KAAD,CAFrB;IAGHkI,KAAK,EAAEgU,mCAAQ,CAAClc,KAAD,CAHZ;IAIH8b,uBAJG;IAKHtK;EALG,CAAP;AAOH;;AAED,SAAS5G,8CAAT,CAA4BC,QAA5B,EAA+D;EAC3D,OAAO;IACHtF,OAAO,EAAE0E,4BAAkB,CAAwC;MAC/DqP,mCAD+D;MAE/DiC,kBAAkBA,EAAAA,uCAAAA;IAF6C,CAAxC,EAGxB1Q,QAHwB;EADxB,CAAP;AAMH;;AAED,kEAAeb,cAAO,CAACK,2CAAD,EAAkBO,8CAAlB,CAAP,CAA6C0Q,yBAA7C,CAAf;;;;;;;;;;ACvDA;AACA;AAEA;AAIA;AACA;AAWe,MAAMgB,aAAN,SAA4B1d,mBAA5B,CAAuD;EAClEW,MAAM,GAAgB;IAClB,MAAM4H,OAAO,GAAG,cACZ;MACI,GAAG,EAAC,EADR;MAEI,KAAK,EAAC;IAFV,GAIK/E,6BAAA,CAAsB,4BAAtB,EAAoD,0BAApD,CAJL,CADY,CAAhB;IASA,KAAK5C,KAAL,CAAWkc,QAAX,CAAoB9U,OAApB,CAA6BkU,OAAD,IAAsB;MAC9C,MAAMyB,WAAW,GAAGzB,OAAO,CAAC5Y,YAAR,IAAwB4Y,OAAO,CAACnb,IAApD;;MACA,IAAImb,OAAO,CAAClN,IAAR,KAAiB9F,yDAAjB,IAA2C,KAAKtI,KAAL,CAAWid,UAA1D,EAAsE;QAClEtV,OAAO,CAACF,IAAR,eACI;UACI,GAAG,EAAE6T,OAAO,CAACnV,EADjB;UAEI,KAAK,EAAEmV,OAAO,CAACnV;QAFnB,GAIK4W,WAJL,CADJ;MAQH,CATD,MASO,IAAIzB,OAAO,CAAClN,IAAR,KAAiB9F,+DAAjB,IAA8C,KAAKtI,KAAL,CAAWmd,aAA7D,EAA4E;QAC/ExV,OAAO,CAACF,IAAR,eACI;UACI,GAAG,EAAE6T,OAAO,CAACnV,EADjB;UAEI,KAAK,EAAEmV,OAAO,CAACnV;QAFnB,GAIK4W,WAJL,CADJ;MAQH,CATM,MASA,IAAIzB,OAAO,CAAClN,IAAR,KAAiB9F,qDAAjB,IAAyC,KAAKtI,KAAL,CAAWqd,QAAxD,EAAkE;QACrE1V,OAAO,CAACF,IAAR,eACI;UACI,GAAG,EAAE6T,OAAO,CAACnV,EADjB;UAEI,KAAK,EAAEmV,OAAO,CAACnV;QAFnB,GAIK4W,WAJL,CADJ;MAQH;IACJ,CA9BD;IAgCA,oBACI;MACI,SAAS,EAAC,cADd;MAEI,KAAK,EAAE,KAAK/c,KAAL,CAAWoD,KAFtB;MAGI,QAAQ,EAAE,KAAKpD,KAAL,CAAWsd,QAHzB;MAII,EAAE,EAAC;IAJP,GAMK3V,OANL,CADJ;EAUH;;AArDiE;;8BAAjDmV;EARjBZ;EACAoB;EACAla;EACA6Z;EACAE;EACAE;;;;;AChBJ;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAIA;AAEA,MAAMK,mBAAmB,GAAGtd,8BAAc,CACtC,qBADsC,EAEtCmd,8BAFsC,EAGtCC,yCAHsC,EAItC,CAACtB,QAAD,EAAWyB,MAAX,KAAsB;EAClB,OAAO,CAAC,GAAGzB,QAAJ,EAAc3Z,IAAd,CAAmBkb,gEAAA,CAAsC,IAAtC,EAA4CE,MAA5C,CAAnB,CAAP;AACH,CANqC,CAA1C;;AASA,SAAS9S,8BAAT,CAAyBrK,KAAzB,EAA6C;EACzC,OAAO;IACH0b,QAAQ,EAAEwB,mBAAmB,CAACld,KAAD;EAD1B,CAAP;AAGH;;AAED,qDAAegK,cAAO,CAACK,8BAAD,CAAP,CAAyBiS,aAAzB,CAAf;;;;;;AC9BA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEe,MAAMe,uBAAN,SAAsCze,mBAAtC,CAA0D;EAiDrE4D,WAAW,CAAChD,KAAD,EAAQ;IACf,MAAMA,KAAN;;IADe,mEAMCoa,IAAD,IAAU;MACzB,OAAO;QACHzU,WAAW,EAAEyU,IAAI,CAAC1X,YAAL,IAAqB,EAD/B;QAEHgD,WAAW,EAAE0U,IAAI,CAAC1U,WAAL,IAAoB,EAF9B;QAGHoY,SAAS,EAAE1D,IAAI,CAACmB,UAAL,IAAmB,EAH3B;QAIHwC,aAAa,EAAE3D,IAAI,CAAC4D,cAAL,IAAuB,KAJnC;QAKHvY,QAAQ,EAAE2U,IAAI,CAAC3U,QAAL,IAAiB,EALxB;QAMHwY,OAAO,EAAE7D,IAAI,CAAC8D,QAAL,IAAiB,EANvB;QAOH9F,MAAM,EAAE,KAPL;QAQH+F,WAAW,EAAE,EARV;QASHC,WAAW,EAAE;MATV,CAAP;IAWH,CAlBkB;;IAAA,+DAoBHnb,CAAD,IAAO;MAClBA,CAAC,CAAC2D,cAAF;;MAEA,IAAI,KAAKpG,KAAL,CAAW4X,MAAf,EAAuB;QACnB;MACH;;MAED,KAAKlV,QAAL,CAAc;QACVkV,MAAM,EAAE,IADE;QAEV+F,WAAW,EAAE,EAFH;QAGVC,WAAW,EAAE;MAHH,CAAd;;MAMA,IAAI,CAAC,KAAK5d,KAAL,CAAWsd,SAAhB,EAA2B;QACvB,KAAK5a,QAAL,CAAc;UACVkV,MAAM,EAAE,KADE;UAEVgG,WAAW,eACP,oBAAC,sBAAD;YACI,EAAE,EAAC,sCADP;YAEI,cAAc,EAAC;UAFnB;QAHM,CAAd;QAUA;MACH;;MAED,MAAMhE,IAAI,GAAG;QACTmB,UAAU,EAAE,KAAK/a,KAAL,CAAWsd,SADd;QAETE,cAAc,EAAE,KAAKxd,KAAL,CAAWud,aAFlB;QAGTrb,YAAY,EAAE,KAAKlC,KAAL,CAAWmF,WAHhB;QAITD,WAAW,EAAE,KAAKlF,KAAL,CAAWkF,WAJf;QAKTD,QAAQ,EAAE,KAAKjF,KAAL,CAAWiF,QALZ;QAMTyY,QAAQ,EAAE,KAAK1d,KAAL,CAAWyd;MANZ,CAAb;MASA,KAAKje,KAAL,CAAWqe,MAAX,CAAkBjE,IAAlB,EAAwB5Q,IAAxB,CAA6B,MAAM,KAAKtG,QAAL,CAAc;QAACkV,MAAM,EAAE;MAAT,CAAd,CAAnC;IACH,CAzDkB;;IAAA,oEA2DEnV,CAAD,IAAO;MACvB,KAAKC,QAAL,CAAc;QACVyC,WAAW,EAAE1C,CAAC,CAACE,MAAF,CAASC;MADZ,CAAd;IAGH,CA/DkB;;IAAA,oEAiEEH,CAAD,IAAO;MACvB,KAAKC,QAAL,CAAc;QACVwC,WAAW,EAAEzC,CAAC,CAACE,MAAF,CAASC;MADZ,CAAd;IAGH,CArEkB;;IAAA,kEAuEAH,CAAD,IAAO;MACrB,KAAKC,QAAL,CAAc;QACV4a,SAAS,EAAE7a,CAAC,CAACE,MAAF,CAASC;MADV,CAAd;IAGH,CA3EkB;;IAAA,sEA6EIH,CAAD,IAAO;MACzB,KAAKC,QAAL,CAAc;QACV6a,aAAa,EAAE9a,CAAC,CAACE,MAAF,CAASwJ;MADd,CAAd;IAGH,CAjFkB;;IAAA,iEAmFD1J,CAAD,IAAO;MACpB,KAAKC,QAAL,CAAc;QACVuC,QAAQ,EAAExC,CAAC,CAACE,MAAF,CAASC;MADT,CAAd;IAGH,CAvFkB;;IAAA,gEAyFFH,CAAD,IAAO;MACnB,KAAKC,QAAL,CAAc;QACV+a,OAAO,EAAEhb,CAAC,CAACE,MAAF,CAASC;MADR,CAAd;IAGH,CA7FkB;;IAGf,KAAK5C,KAAL,GAAa,KAAK8d,gBAAL,CAAsB,KAAKte,KAAL,CAAWue,WAAX,IAA0B,EAAhD,CAAb;EACH;;EA2FDxe,MAAM,GAAG;IACL,IAAIye,cAAc,GAAG,KAAKxe,KAAL,CAAWoE,MAAhC;IACA,IAAIqa,cAAc,GAAG,KAAKze,KAAL,CAAW0e,MAAhC;IAEA,oBACI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,eAAD,qBACI,oBAAC,qBAAD;MAAM,EAAE,aAAM,KAAK1e,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB;IAAR,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,oCADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CADJ,eAOI,oBAAC,sBAAD;MACI,EAAE,EAAEqe,cAAc,CAACrY,EADvB;MAEI,cAAc,EAAEqY,cAAc,CAAC9S;IAFnC,EAPJ,CADJ,eAaI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,iBADd;MAEI,QAAQ,EAAE,KAAKmE;IAFnB,gBAII;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,kCADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,EAAE,EAAC,aADP;MAEI,IAAI,EAAC,MAFT;MAGI,SAAS,EAAC,IAHd;MAII,SAAS,EAAC,cAJd;MAKI,KAAK,EAAE,KAAKrP,KAAL,CAAWmF,WALtB;MAMI,QAAQ,EAAE,KAAKsK;IANnB,EADJ,eASI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,uCADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CATJ,CAVJ,CAJJ,eA+BI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,kCADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,EAAE,EAAC,aADP;MAEI,IAAI,EAAC,MAFT;MAGI,SAAS,EAAC,KAHd;MAII,SAAS,EAAC,cAJd;MAKI,KAAK,EAAE,KAAKzP,KAAL,CAAWkF,WALtB;MAMI,QAAQ,EAAE,KAAKwK;IANnB,EADJ,eASI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,uCADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CATJ,CAVJ,CA/BJ,eA0DI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,8BADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,cAAD;MACI,EAAE,EAAC,WADP;MAEI,KAAK,EAAE,KAAK1P,KAAL,CAAWsd,SAFtB;MAGI,QAAQ,EAAE,KAAKa,eAHnB;MAII,UAAU,EAAE,IAJhB;MAKI,aAAa,EAAE;IALnB,EADJ,eAQI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,mCADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CARJ,CAVJ,CA1DJ,eAoFI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,oCADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,EAAE,EAAC,eADP;MAEI,IAAI,EAAC,UAFT;MAGI,OAAO,EAAE,KAAKne,KAAL,CAAWud,aAHxB;MAII,QAAQ,EAAE,KAAKa;IAJnB,EADJ,eAOI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,yCADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CAPJ,CAVJ,CApFJ,EA6GM,KAAK5e,KAAL,CAAW6e,0BAAX,iBACE;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,+BADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,EAAE,EAAC,UADP;MAEI,IAAI,EAAC,MAFT;MAGI,SAAS,EAAC,IAHd;MAII,SAAS,EAAC,cAJd;MAKI,KAAK,EAAE,KAAKre,KAAL,CAAWiF,QALtB;MAMI,QAAQ,EAAE,KAAKqK;IANnB,EADJ,eASI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,oCADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CATJ,CAVJ,CA9GR,EA0IM,KAAK9P,KAAL,CAAW8e,sBAAX,iBACE;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,+BADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,EAAE,EAAC,SADP;MAEI,IAAI,EAAC,MAFT;MAGI,SAAS,EAAC,MAHd;MAII,SAAS,EAAC,cAJd;MAKI,KAAK,EAAE,KAAKte,KAAL,CAAWyd,OALtB;MAMI,QAAQ,EAAE,KAAKc;IANnB,EADJ,eASI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,oCADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CATJ,CAVJ,CA3IR,eAuKI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,yBAAD;MACI,IAAI,EAAC,WADT;MAEI,MAAM,EAAE,CAAC,KAAK/e,KAAL,CAAWme,WAAZ,EAAyB,KAAK3d,KAAL,CAAW4d,WAApC;IAFZ,EADJ,eAKI,oBAAC,qBAAD;MACI,SAAS,EAAC,qBADd;MAEI,EAAE,aAAM,KAAKpe,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB;IAFN,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,6BADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CALJ,eAcI,oBAAC,6BAAD;MACI,SAAS,EAAC,iBADd;MAEI,IAAI,EAAC,QAFT;MAGI,QAAQ,EAAE,KAAKK,KAAL,CAAW4X,MAHzB;MAII,YAAY,EAAErT,iCAAe,CAAC,KAAK/E,KAAL,CAAWuD,OAAX,CAAmB4C,EAApB,EAAwB,KAAKnG,KAAL,CAAWuD,OAAX,CAAmBmI,cAA3C,CAJjC;MAKI,OAAO,EAAE,KAAKmE,YALlB;MAMI,EAAE,EAAC;IANP,gBAQI,oBAAC,sBAAD;MACI,EAAE,EAAE4O,cAAc,CAACtY,EADvB;MAEI,cAAc,EAAEsY,cAAc,CAAC/S;IAFnC,EARJ,CAdJ,CAvKJ,CADJ,CAbJ,CADJ;EAsNH;;AA1WoE;;yCAApDmS,sCACE;EAEf;AACR;AACA;EACQle,IAAI,EAAER,wCALS;;EAOf;AACR;AACA;EACQiF,MAAM,EAAEjF,wCAVO;;EAYf;AACR;AACA;EACQuf,MAAM,EAAEvf,wCAfO;;EAiBf;AACR;AACA;EACQoE,OAAO,EAAEpE,wCApBM;;EAsBf;AACR;AACA;EACQgf,WAAW,EAAEhf,wCAzBE;;EA2Bf;AACR;AACA;EACQof,WAAW,EAAEpf,6BA9BE;;EAgCf;AACR;AACA;EACQ0f,0BAA0B,EAAE1f,sCAnCb;;EAqCf;AACR;AACA;EACQ2f,sBAAsB,EAAE3f,sCAxCT;;EA0Cf;AACR;AACA;EACQkf,MAAM,EAAElf,sCAAyB0F;AA7ClB;;;;;;;ACfvB;AACA;AAEA;AAEA;AACA;AACA;AAIA,MAAMma,MAAM,GAAG;EAAC7Y,EAAE,EAAEoF,UAAC,CAAC,kBAAD,CAAN;EAA4BG,cAAc,EAAE;AAA5C,CAAf;AACA,MAAMuT,MAAM,GAAG;EAAC9Y,EAAE,EAAEoF,UAAC,CAAC,2BAAD,CAAN;EAAqCG,cAAc,EAAE;AAArD,CAAf;AACA,MAAMwT,OAAO,GAAG;EAAC/Y,EAAE,EAAEoF,UAAC,CAAC,6BAAD,CAAN;EAAuCG,cAAc,EAAE;AAAvD,CAAhB;AAgCe,MAAMyT,kBAAN,SAAiC/f,mBAAjC,CAAmE;EAC9E4D,WAAW,CAAChD,KAAD,EAAe;IACtB,MAAMA,KAAN;;IADsB,6DAQR,MAAOoa,IAAP,IAAiC;MAC/C,KAAKlX,QAAL,CAAc;QAACib,WAAW,EAAE;MAAd,CAAd;MAEA,MAAM;QAACrX,IAAD;QAAOD;MAAP,IAAgB,MAAM,KAAK7G,KAAL,CAAW+F,OAAX,CAAmBqZ,kBAAnB,CAAsChF,IAAtC,CAA5B;;MACA,IAAItT,IAAJ,EAAU;QACNiF,+CAAA,YAAwB,KAAK/L,KAAL,CAAWL,IAAX,CAAgBQ,IAAxC,6DAA+F2G,IAAI,CAACX,EAApG;QACA;MACH;;MAED,IAAIU,KAAJ,EAAW;QACP,KAAK3D,QAAL,CAAc;UAACib,WAAW,EAAEtX,KAAK,CAACG;QAApB,CAAd;MACH;IACJ,CApByB;;IAGtB,KAAKxG,KAAL,GAAa;MACT2d,WAAW,EAAE;IADJ,CAAb;EAGH;;EAgBDpe,MAAM,GAAG;IACL,oBACI,oBAAC,uBAAD;MACI,IAAI,EAAE,KAAKC,KAAL,CAAWL,IADrB;MAEI,MAAM,EAAEqf,MAFZ;MAGI,MAAM,EAAEC,MAHZ;MAII,OAAO,EAAEC,OAJb;MAKI,0BAA0B,EAAE,KAAKlf,KAAL,CAAW6e,0BAL3C;MAMI,sBAAsB,EAAE,KAAK7e,KAAL,CAAW8e,sBANvC;MAOI,MAAM,EAAE,KAAKO,eAPjB;MAQI,WAAW,EAAE,KAAK7e,KAAL,CAAW2d;IAR5B,EADJ;EAYH;;AApC6E;;oCAA7DgB;EApBjBN;EAKAC;EAEA/Y;IAKIqZ;;;;ACrCR;AACA;AAEA;AACA;AAEA;AACA;AAMA;;AAEA,SAASvU,oCAAT,CAAyBrK,KAAzB,EAA6C;EACzC,MAAMsK,MAAM,GAAGH,6BAAS,CAACnK,KAAD,CAAxB;EACA,MAAMqe,0BAA0B,GAAG/T,MAAM,CAACwU,0BAAP,KAAsC,MAAzE;EACA,MAAMR,sBAAsB,GAAGhU,MAAM,CAACyU,sBAAP,KAAkC,MAAjE;EAEA,OAAO;IACHV,0BADG;IAEHC;EAFG,CAAP;AAIH;;AAMD,SAAS1T,uCAAT,CAA4BC,QAA5B,EAA+D;EAC3D,OAAO;IACHtF,OAAO,EAAE0E,4BAAkB,CAA2C;MAClE2U,kBAAkBA,EAAAA,uCAAAA;IADgD,CAA3C,EAExB/T,QAFwB;EADxB,CAAP;AAKH;;AAED,2DAAeb,cAAO,CAACK,oCAAD,EAAkBO,uCAAlB,CAAP,CAA6C+T,kBAA7C,CAAf;;;;;;;ACtCA;AACA;AAEA;AAMA;AACA;AACA;AACA;AAEA,MAAMH,4BAAM,GAAG;EAAC7Y,EAAE,EAAEoF,UAAC,CAAC,mBAAD,CAAN;EAA6BG,cAAc,EAAE;AAA7C,CAAf;AACA,MAAMuT,4BAAM,GAAG;EAAC9Y,EAAE,EAAEoF,UAAC,CAAC,gCAAD,CAAN;EAA0CG,cAAc,EAAE;AAA1D,CAAf;AACA,MAAMwT,6BAAO,GAAG;EAAC/Y,EAAE,EAAEoF,UAAC,CAAC,kCAAD,CAAN;EAA4CG,cAAc,EAAE;AAA5D,CAAhB;AAqDe,MAAM8T,mBAAN,SAAkCpgB,mBAAlC,CAAoE;EAG/E4D,WAAW,CAAChD,KAAD,EAAe;IACtB,MAAMA,KAAN;;IADsB;;IAAA,+DAeP,MAAOoa,IAAP,IAAiC;MAAA;;MAChD,KAAKqF,OAAL,GAAerF,IAAf;;MAEA,wBAAI,KAAKpa,KAAL,CAAWoa,IAAf,6CAAI,iBAAiBjU,EAArB,EAAyB;QACrBiU,IAAI,CAACjU,EAAL,GAAU,KAAKnG,KAAL,CAAWoa,IAAX,CAAgBjU,EAA1B;MACH;;MAED,MAAM,KAAKuZ,UAAL,EAAN;IACH,CAvByB;;IAAA,yDAyBb,YAAY;MACrB,KAAKxc,QAAL,CAAc;QAACib,WAAW,EAAE;MAAd,CAAd;;MAEA,IAAI,CAAC,KAAKsB,OAAV,EAAmB;QACf;MACH;;MAED,MAAMhW,MAAM,GAAG,MAAM,KAAKzJ,KAAL,CAAW+F,OAAX,CAAmB4Z,kBAAnB,CAAsC,KAAKF,OAA3C,CAArB;;MAEA,IAAI,UAAUhW,MAAd,EAAsB;QAClBsC,+CAAA,YAAwB,KAAK/L,KAAL,CAAWL,IAAX,CAAgBQ,IAAxC;QACA;MACH;;MAED,IAAI,WAAWsJ,MAAf,EAAuB;QACnB,MAAM;UAAC5C;QAAD,IAAU4C,MAAhB;QACA,KAAKvG,QAAL,CAAc;UAACib,WAAW,EAAEtX,KAAK,CAACG;QAApB,CAAd;MACH;IACJ,CA3CyB;;IAGtB,KAAKxG,KAAL,GAAa;MACTof,gBAAgB,EAAE,KADT;MAETzB,WAAW,EAAE;IAFJ,CAAb;EAIH;;EAEDjV,iBAAiB,GAAG;IAChB,IAAI,KAAKlJ,KAAL,CAAWgS,sBAAf,EAAuC;MACnC,KAAKhS,KAAL,CAAW+F,OAAX,CAAmB8Z,eAAnB,CAAmC,KAAK7f,KAAL,CAAW8f,MAA9C;IACH;EACJ;;EAgCD/f,MAAM,GAAG;IACL,IAAI,CAAC,KAAKC,KAAL,CAAWoa,IAAhB,EAAsB;MAClB,oBAAO,oBAAC,6BAAD,OAAP;IACH;;IAED,oBACI,oBAAC,uBAAD;MACI,IAAI,EAAE,KAAKpa,KAAL,CAAWL,IADrB;MAEI,MAAM,EAAEqf,4BAFZ;MAGI,MAAM,EAAEC,4BAHZ;MAII,OAAO,EAAEC,6BAJb;MAKI,0BAA0B,EAAE,KAAKlf,KAAL,CAAW6e,0BAL3C;MAMI,sBAAsB,EAAE,KAAK7e,KAAL,CAAW8e,sBANvC;MAOI,MAAM,EAAE,KAAKiB,gBAPjB;MAQI,WAAW,EAAE,KAAKvf,KAAL,CAAW2d,WAR5B;MASI,WAAW,EAAE,KAAKne,KAAL,CAAWoa;IAT5B,EADJ;EAaH;;AAlE8E;;qCAA9DoF;EApCjBM;EAKA9N;EAKA6M;EAKAC;EAEA/Y;IAKI4Z;IAKAE;;;;;;;;AC5DR;AACA;AAEA;AACA;AAEA;AACA;AAMA;;AAWA,SAAShV,qCAAT,CAAyBrK,KAAzB,EAA6CoQ,QAA7C,EAA8D;EAC1D,MAAM9F,MAAM,GAAGH,6BAAS,CAACnK,KAAD,CAAxB;EACA,MAAMwR,sBAAsB,GAAGlH,MAAM,CAAC6H,sBAAP,KAAkC,MAAjE;EACA,MAAMkM,0BAA0B,GAAG/T,MAAM,CAACwU,0BAAP,KAAsC,MAAzE;EACA,MAAMR,sBAAsB,GAAGhU,MAAM,CAACyU,sBAAP,KAAkC,MAAjE;EACA,MAAMO,MAAM,GAAI,IAAIhP,eAAJ,CAAoBF,QAAQ,CAACG,QAAT,CAAkBvM,MAAtC,CAAD,CAAgDwM,GAAhD,CAAoD,IAApD,KAA6D,EAA5E;EAEA,OAAO;IACH8O,MADG;IAEH1F,IAAI,EAAE5Z,KAAK,CAACC,QAAN,CAAeC,YAAf,CAA4BC,aAA5B,CAA0Cmf,MAA1C,CAFH;IAGH9N,sBAHG;IAIH6M,0BAJG;IAKHC;EALG,CAAP;AAOH;;AAED,SAAS1T,wCAAT,CAA4BC,QAA5B,EAA+D;EAC3D,OAAO;IACHtF,OAAO,EAAE0E,4BAAkB,CAA+C;MACtEkV,kBADsE;MAEtEE,eAAeA,EAAAA,oCAAAA;IAFuD,CAA/C,EAGxBxU,QAHwB;EADxB,CAAP;AAMH;;AAED,4DAAeb,cAAO,CAACK,qCAAD,EAAkBO,wCAAlB,CAAP,CAA6CoU,mBAA7C,CAAf;;;;;;ACjDA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEO,SAASla,wCAAT,CAAuB0a,eAAvB,EAAwC1E,OAAxC,EAAiDvZ,MAAjD,EAAyD;EAC5D,IAAI,CAACA,MAAL,EAAa;IACT,OAAO,IAAP;EACH;;EAED,MAAM;IACFW,YAAY,EAAEiD,WADZ;IAEFD,WAFE;IAGFua,aAAa,EAAEC;EAHb,IAIFF,eAJJ;;EAMA,IACKra,WAAW,IAAIA,WAAW,CAACtC,WAAZ,GAA0BwC,OAA1B,CAAkC9D,MAAlC,MAA8C,CAAC,CAA/D,IACC2D,WAAW,IAAIA,WAAW,CAACrC,WAAZ,GAA0BwC,OAA1B,CAAkC9D,MAAlC,MAA8C,CAAC,CAFnE,EAGE;IACE,OAAO,IAAP;EACH;;EAED,IAAIme,YAAJ,EAAkB;IACd,KAAK,MAAMC,WAAX,IAA0BD,YAA1B,EAAwC;MACpC,IAAIC,WAAW,CAAC9c,WAAZ,GAA0BwC,OAA1B,CAAkC9D,MAAlC,MAA8C,CAAC,CAAnD,EAAsD;QAClD,OAAO,IAAP;MACH;IACJ;EACJ;;EAED,IAAIuZ,OAAO,IAAIA,OAAO,CAACnb,IAAvB,EAA6B;IACzB,IAAImb,OAAO,CAACnb,IAAR,CAAakD,WAAb,GAA2BwC,OAA3B,CAAmC9D,MAAnC,MAA+C,CAAC,CAApD,EAAuD;MACnD,OAAO,IAAP;IACH;EACJ;;EAED,OAAO,KAAP;AACH;AAEc,MAAMqe,wBAAN,SAAuChhB,mBAAvC,CAA2D;EAAA;IAAA;;IAAA,oEA4ClD6D,CAAD,IAAO;MACtBA,CAAC,CAAC2D,cAAF;MAEA,KAAK5G,KAAL,CAAWqgB,YAAX,CAAwB,KAAKrgB,KAAL,CAAWggB,eAAnC;IACH,CAhDqE;;IAAA,gEAkDvD,MAAM;MACjB,KAAKhgB,KAAL,CAAWuT,QAAX,CAAoB,KAAKvT,KAAL,CAAWggB,eAA/B;IACH,CApDqE;EAAA;;EAsDtEM,eAAe,CAACN,eAAD,EAAkB1E,OAAlB,EAA2B;IACtC,IAAI0E,eAAe,CAACtd,YAApB,EAAkC;MAC9B,OAAOsd,eAAe,CAACtd,YAAvB;IACH,CAFD,MAEO,IAAI4Y,OAAJ,EAAa;MAChB,OAAOA,OAAO,CAAC5Y,YAAf;IACH;;IACD,oBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,6CADP;MAEI,cAAc,EAAC;IAFnB,EADJ;EAMH;;EAED3C,MAAM,GAAG;IACL,MAAMigB,eAAe,GAAG,KAAKhgB,KAAL,CAAWggB,eAAnC;IACA,MAAM1E,OAAO,GAAG,KAAKtb,KAAL,CAAWsb,OAA3B;IACA,MAAMvZ,MAAM,GAAG,KAAK/B,KAAL,CAAW+B,MAAX,GAAoB,KAAK/B,KAAL,CAAW+B,MAAX,CAAkBsB,WAAlB,EAApB,GAAsD,EAArE;IACA,MAAMkd,gBAAgB,GAAG,CAAzB;IACA,MAAMC,sBAAsB,GAAG,CAA/B;;IAEA,IAAIR,eAAe,IAAI,CAAC1a,wCAAa,CAAC0a,eAAD,EAAkB1E,OAAlB,EAA2BvZ,MAA3B,CAArC,EAAyE;MACrE,OAAO,IAAP;IACH;;IAED,MAAM4D,WAAW,GAAG,KAAK2a,eAAL,CAAqBN,eAArB,EAAsC1E,OAAtC,CAApB;IAEA,IAAI5V,WAAW,GAAG,IAAlB;;IACA,IAAIsa,eAAe,CAACta,WAApB,EAAiC;MAC7BA,WAAW,gBACP;QAAK,SAAS,EAAC;MAAf,gBACI;QAAM,SAAS,EAAC;MAAhB,GACKsa,eAAe,CAACta,WADrB,CADJ,CADJ;IAOH;;IAED,IAAIwa,YAAY,GAAG,IAAnB;;IACA,IAAIF,eAAe,CAACC,aAAhB,IAAiCD,eAAe,CAACC,aAAhB,CAA8Bpc,MAA9B,GAAuC,CAA5E,EAA+E;MAC3Eqc,YAAY,gBACR;QAAK,SAAS,EAAC;MAAf,gBACI;QAAM,SAAS,EAAC;MAAhB,gBACI,oBAAC,sBAAD;QACI,EAAE,EAAC,qCADP;QAEI,cAAc,EAAC,+BAFnB;QAGI,MAAM,EAAE;UACJA,YAAY,EAAEF,eAAe,CAACC,aAAhB,CAA8BQ,IAA9B,CAAmC,IAAnC;QADV;MAHZ,EADJ,CADJ,CADJ;IAaH;;IAED,MAAMC,IAAI,gBACN;MAAK,SAAS,EAAC;IAAf,gBACI;MAAM,SAAS,EAAC;IAAhB,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,sCADP;MAEI,cAAc,EAAC,uBAFnB;MAGI,MAAM,EAAE;QACJA,IAAI,EAAEV,eAAe,CAACW,aAAhB,CAA8BF,IAA9B,CAAmC,IAAnC;MADF;IAHZ,EADJ,CADJ,CADJ;IAcA,IAAIG,WAAJ;;IACA,IAAIZ,eAAe,CAACa,YAAhB,KAAiCN,gBAArC,EAAuD;MACnDK,WAAW,gBACP,oBAAC,sBAAD;QACI,EAAE,EAAC,sDADP;QAEI,cAAc,EAAC;MAFnB,EADJ;IAMH,CAPD,MAOO,IAAIZ,eAAe,CAACa,YAAhB,KAAiCL,sBAArC,EAA6D;MAChEI,WAAW,gBACP,oBAAC,sBAAD;QACI,EAAE,EAAC,wDADP;QAEI,cAAc,EAAC;MAFnB,EADJ;IAMH;;IAED,IAAI7a,OAAO,GAAG,IAAd;;IACA,IAAI,KAAK/F,KAAL,CAAWyb,SAAf,EAA0B;MACtB1V,OAAO,gBACH;QAAK,SAAS,EAAC;MAAf,gBACI;QACI,SAAS,EAAC,yBADd;QAEI,OAAO,EAAE,KAAK+a;MAFlB,gBAII,oBAAC,sBAAD;QACI,EAAE,EAAC,mCADP;QAEI,cAAc,EAAC;MAFnB,EAJJ,CADJ,EAUK,KAVL,eAWI,oBAAC,qBAAD;QAAM,EAAE,aAAM,KAAK9gB,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB,qDAAqE6f,eAAe,CAAC7Z,EAArF;MAAR,gBACI,oBAAC,sBAAD;QACI,EAAE,EAAC,6BADP;QAEI,cAAc,EAAC;MAFnB,EADJ,CAXJ,EAiBK,KAjBL,eAkBI,oBAAC,uBAAD;QACI,YAAY,eACR,oBAAC,sBAAD;UACI,EAAE,EAAC,4CADP;UAEI,cAAc,EAAC;QAFnB,EAFR;QAOI,QAAQ,EAAE,KAAKoO;MAPnB,EAlBJ,CADJ;IA8BH;;IAED,oBACI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAQ,SAAS,EAAC;IAAlB,GACK5O,WADL,CADJ,EAIKI,OAJL,CADJ,EAOKL,WAPL,eAQI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAM,SAAS,EAAC;IAAhB,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,qCADP;MAEI,cAAc,EAAC,6BAFnB;MAGI,MAAM,EAAE;QACJqb,WAAW,EAAEf,eAAe,CAACgB,YAAhB,IAAgC;MADzC;IAHZ,EADJ,CADJ,CARJ,EAmBKd,YAnBL,eAoBI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAM,SAAS,EAAC;IAAhB,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,oCADP;MAEI,cAAc,EAAC,6BAFnB;MAGI,MAAM,EAAE;QACJU;MADI;IAHZ,EADJ,CADJ,CApBJ,eA+BI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAM,SAAS,EAAC;IAAhB,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,8BADP;MAEI,cAAc,EAAC,gBAFnB;MAGI,MAAM,EAAE;QACJla,KAAK,EAAEsZ,eAAe,CAACtZ;MADnB;IAHZ,EADJ,eAQI,oBAAC,QAAD;MACI,KAAK,EAAEsZ,eAAe,CAACtZ;IAD3B,EARJ,CADJ,CA/BJ,eA6CI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAM,SAAS,EAAC;IAAhB,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,iCADP;MAEI,cAAc,EAAC,gDAFnB;MAGI,MAAM,EAAE;QACJ0O,OAAO,EAAE,KAAKpV,KAAL,CAAWoV,OAAX,CAAmB3P,QADxB;QAEJmW,QAAQ,EAAEoE,eAAe,CAACnE;MAFtB;IAHZ,EADJ,CADJ,CA7CJ,EAyDK6E,IAzDL,CADJ,CADJ;EA+DH;;AA7OqE;;0CAArDN,uCACE;EAEf;AACR;AACA;EACQJ,eAAe,EAAE7gB,wCALF;;EAOf;AACR;AACA;EACQkhB,YAAY,EAAElhB,sCAVC;;EAYf;AACR;AACA;EACQoU,QAAQ,EAAEpU,sCAfK;;EAiBf;AACR;AACA;EACQ4C,MAAM,EAAE5C,6BApBO;;EAsBf;AACR;AACA;EACQiW,OAAO,EAAEjW,wCAzBM;;EA2Bf;AACR;AACA;EACQsc,SAAS,EAAEtc,sCA9BI;;EAgCf;AACR;AACA;EACQQ,IAAI,EAAER,wCAnCS;;EAqCf;AACR;AACA;EACQmc,OAAO,EAAEnc,6BAAgBS;AAxCV;;;;;;AChDvB;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEe,MAAMqhB,yBAAN,SAAwC7hB,mBAAxC,CAA4D;EA8DvE4D,WAAW,CAAChD,KAAD,EAAQ;IACf,MAAMA,KAAN;;IADe,8EAoBUggB,eAAD,IAAqB;MAC7C,KAAKhgB,KAAL,CAAW+F,OAAX,CAAmBmb,sBAAnB,CAA0ClB,eAAe,CAAC7Z,EAA1D;IACH,CAtBkB;;IAAA,uEAwBG6Z,eAAD,IAAqB;MACtC,KAAKhgB,KAAL,CAAW+F,OAAX,CAAmBob,kBAAnB,CAAsCnB,eAAe,CAAC7Z,EAAtD;IACH,CA1BkB;;IAAA,2EA4BM,CAAC3D,CAAD,EAAIC,CAAJ,KAAU;MAC/B,IAAIuZ,YAAY,GAAGxZ,CAAC,CAACE,YAArB;;MACA,IAAI,CAACsZ,YAAL,EAAmB;QACf,MAAMC,QAAQ,GAAG,KAAKjc,KAAL,CAAWkc,QAAX,CAAoB1Z,CAAC,CAAC+Y,UAAtB,CAAjB;;QACA,IAAIU,QAAJ,EAAc;UACVD,YAAY,GAAGC,QAAQ,CAACvZ,YAAxB;QACH,CAFD,MAEO;UACHsZ,YAAY,GAAGpZ,6BAAA,CAAsB,6CAAtB,EAAqE,mBAArE,CAAf;QACH;MACJ;;MAED,IAAIuZ,YAAY,GAAG1Z,CAAC,CAACC,YAArB;;MACA,IAAI,CAACyZ,YAAL,EAAmB;QACf,MAAMiF,QAAQ,GAAG,KAAKphB,KAAL,CAAWkc,QAAX,CAAoBzZ,CAAC,CAAC8Y,UAAtB,CAAjB;;QACA,IAAI6F,QAAJ,EAAc;UACVjF,YAAY,GAAGiF,QAAQ,CAAC1e,YAAxB;QACH,CAFD,MAEO;UACHyZ,YAAY,GAAGvZ,6BAAA,CAAsB,6CAAtB,EAAqE,mBAArE,CAAf;QACH;MACJ;;MACD,OAAOoZ,YAAY,CAACrZ,aAAb,CAA2BwZ,YAA3B,CAAP;IACH,CAjDkB;;IAAA,qEAmDCpa,MAAD,IAAY,KAAK/B,KAAL,CAAWqhB,gBAAX,CAC3B9e,IAD2B,CACtB,KAAK+e,sBADiB,EAE3Bvf,MAF2B,CAEnBie,eAAD,IAAqB1a,wCAAa,CAAC0a,eAAD,EAAkB,KAAKhgB,KAAL,CAAWkc,QAAX,CAAoB8D,eAAe,CAACzE,UAApC,CAAlB,EAAmExZ,MAAnE,CAFd,EAG3B2B,GAH2B,CAGtBsc,eAAD,IAAqB;MACrB,MAAMvE,SAAS,GAAG,KAAKzb,KAAL,CAAWsc,uBAAX,IAAsC,KAAKtc,KAAL,CAAWkI,IAAX,CAAgB/B,EAAhB,KAAuB6Z,eAAe,CAACxL,UAA/F;MACA,MAAM8G,OAAO,GAAG,KAAKtb,KAAL,CAAWkc,QAAX,CAAoB8D,eAAe,CAACzE,UAApC,CAAhB;MACA,oBACI,oBAAC,wBAAD;QACI,GAAG,EAAEyE,eAAe,CAAC7Z,EADzB;QAEI,eAAe,EAAE6Z,eAFrB;QAGI,YAAY,EAAE,KAAKuB,yBAHvB;QAII,QAAQ,EAAE,KAAKJ,kBAJnB;QAKI,OAAO,EAAE,KAAKnhB,KAAL,CAAW0I,KAAX,CAAiBsX,eAAe,CAACxL,UAAjC,KAAgD,EAL7D;QAMI,SAAS,EAAEiH,SANf;QAOI,IAAI,EAAE,KAAKzb,KAAL,CAAWL,IAPrB;QAQI,OAAO,EAAE2b;MARb,EADJ;IAYH,CAlB0B,CAnDZ;;IAGf,KAAK9a,KAAL,GAAa;MACT+C,OAAO,EAAE;IADA,CAAb;EAGH;;EAED2F,iBAAiB,GAAG;IAChB,IAAI,KAAKlJ,KAAL,CAAWiS,sBAAf,EAAuC;MACnC,KAAKjS,KAAL,CAAW+F,OAAX,CAAmBwU,mCAAnB,CACI,KAAKva,KAAL,CAAW2B,MADf,EAEI2G,uFAFJ,EAGIA,6EAHJ,EAIEkB,IAJF,CAKI,MAAM,KAAKtG,QAAL,CAAc;QAACK,OAAO,EAAE;MAAV,CAAd,CALV;IAOH;EACJ;;EAqDDxD,MAAM,GAAG;IACL,oBACI,oBAAC,aAAD;MACI,MAAM,eACF,oBAAC,sBAAD;QACI,EAAE,EAAC,oCADP;QAEI,cAAc,EAAC;MAFnB,EAFR;MAOI,OAAO,eACH,oBAAC,sBAAD;QACI,EAAE,EAAC,iCADP;QAEI,cAAc,EAAC;MAFnB,EARR;MAaI,OAAO,EAAE,MAAM,KAAKC,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB,GAA6B,qCAb1C;MAcI,WAAW,EAAC,oBAdhB;MAeI,SAAS,eACL,oBAAC,sBAAD;QACI,EAAE,EAAC,mCADP;QAEI,cAAc,EAAC;MAFnB,EAhBR;MAqBI,eAAe,eACX,oBAAC,yCAAD;QACI,EAAE,EAAC,yCADP;QAEI,cAAc,EAAC;MAFnB,EAtBR;MA2BI,QAAQ,eACJ,oBAAC,sBAAD;QACI,EAAE,EAAC,kCADP;QAEI,cAAc,EAAC,mKAFnB;QAGI,MAAM,EAAE;UACJqc,YAAY,eACR;YACI,MAAM,EAAC,QADX;YAEI,GAAG,EAAC,qBAFR;YAGI,IAAI,EAAC;UAHT,gBAKI,oBAAC,sBAAD;YACI,EAAE,EAAC,+CADP;YAEI,cAAc,EAAC;UAFnB,EALJ,CAFA;UAaJ/J,YAAY,eACR;YACI,MAAM,EAAC,QADX;YAEI,GAAG,EAAC,qBAFR;YAGI,IAAI,EAAC;UAHT,gBAKI,oBAAC,sBAAD;YACI,EAAE,EAAC,+CADP;YAEI,cAAc,EAAC;UAFnB,EALJ;QAdA;MAHZ,EA5BR;MA2DI,iBAAiB,EAAE7P,6BAAA,CAAsB,oCAAtB,EAA4D,0BAA5D,CA3DvB;MA4DI,OAAO,EAAE,KAAKpC,KAAL,CAAW+C;IA5DxB,GA8DMxB,MAAD,IAAY;MACT,MAAMuB,QAAQ,GAAG,KAAK+d,gBAAL,CAAsBtf,MAAtB,CAAjB;MACA,OAAO,CAACuB,QAAD,EAAWA,QAAQ,CAACO,MAAT,GAAkB,CAA7B,CAAP;IACH,CAjEL,CADJ;EAqEH;;AA3MsE;;2CAAtDod,wCACE;EAEf;AACR;AACA;EACQthB,IAAI,EAAER,6BALS;;EAOf;AACR;AACA;EACQ+I,IAAI,EAAE/I,6BAVS;;EAYf;AACR;AACA;EACQmd,uBAAuB,EAAEnd,2BAfV;;EAiBf;AACR;AACA;EACQkiB,gBAAgB,EAAEliB,4BApBH;;EAsBf;AACR;AACA;EACQ+c,QAAQ,EAAE/c,6BAzBK;;EA2Bf;AACR;AACA;EACQuJ,KAAK,EAAEvJ,6BA9BQ;;EAgCf;AACR;AACA;EACQwC,MAAM,EAAExC,6BAnCO;EAqCf4G,OAAO,EAAE5G,0BAAA,CAAgB;IAErB;AACZ;AACA;IACYgiB,kBAAkB,EAAEhiB,2BALC;;IAOrB;AACZ;AACA;IACYob,mCAAmC,EAAEpb,2BAVhB;;IAYrB;AACZ;AACA;IACY+hB,sBAAsB,EAAE/hB,2BAAcyF;EAfjB,CAAhB,CArCM;;EAuDf;AACR;AACA;EACQqN,sBAAsB,EAAE9S,2BAAc2F;AA1DvB;;ACdvB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAEA,SAAS+F,2CAAT,CAAyBrK,KAAzB,EAAgC;EAC5B,MAAMsK,MAAM,GAAGH,6BAAS,CAACnK,KAAD,CAAxB;EACA,MAAMmB,MAAM,GAAGtB,kCAAgB,CAACG,KAAD,CAA/B;EACA,MAAM8b,uBAAuB,GAAGK,8CAAmB,CAACnc,KAAD,EAAQmB,MAAR,EAAgBgP,6FAAhB,CAAnD;EACA,MAAM9P,aAAa,GAAGD,gBAAgB,CAACJ,KAAD,CAAtC;EACA,MAAM6gB,gBAAgB,GAAGxf,MAAM,CAACyY,IAAP,CAAYzZ,aAAZ,EACrB6C,GADqB,CAChBmZ,GAAD,IAAShc,aAAa,CAACgc,GAAD,CADL,EAErB9a,MAFqB,CAEbie,eAAD,IAAqBA,eAAe,CAAC/d,OAAhB,KAA4BN,MAFnC,CAAzB;EAGA,MAAMsQ,sBAAsB,GAAGnH,MAAM,CAAC8H,sBAAP,KAAkC,MAAjE;EAEA,OAAO;IACHyO,gBADG;IAEHnF,QAAQ,EAAEO,mCAAc,CAACjc,KAAD,CAFrB;IAGHkI,KAAK,EAAEgU,mCAAQ,CAAClc,KAAD,CAHZ;IAIHmB,MAJG;IAKH2a,uBALG;IAMHrK;EANG,CAAP;AAQH;;AAED,SAAS7G,8CAAT,CAA4BC,QAA5B,EAAsC;EAClC,OAAO;IACHtF,OAAO,EAAE0E,4BAAkB,CAAC;MACxB8P,mCADwB;MAExB4G,kBAAkB,EAAEM,uCAFI;MAGxBP,sBAAsB,EAAEO,2CAA8BP;IAH9B,CAAD,EAIxB7V,QAJwB;EADxB,CAAP;AAOH;;AAED,kEAAeb,cAAO,CAACK,2CAAD,EAAkBO,8CAAlB,CAAP,CAA6CgV,yBAA7C,CAAf;;;;;;;;;;;;;AChDA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEe,MAAMuB,uBAAN,SAAsCviB,mBAAtC,CAA0D;EAsDrE4D,WAAW,CAAChD,KAAD,EAAQ;IACf,MAAMA,KAAN;;IADe,mEAMCoa,IAAD,IAAU;MACzB,IAAI8F,YAAY,GAAG,EAAnB;;MACA,IAAI9F,IAAI,CAAC6F,aAAT,EAAwB;QACpB,IAAI9F,CAAC,GAAG,CAAR;;QACA,KAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGC,IAAI,CAAC6F,aAAL,CAAmBpc,MAAnC,EAA2CsW,CAAC,EAA5C,EAAgD;UAC5C+F,YAAY,IAAI9F,IAAI,CAAC6F,aAAL,CAAmB9F,CAAnB,IAAwB,IAAxC;QACH;MACJ;;MAED,IAAIyH,YAAY,GAAG,EAAnB;;MACA,IAAIxH,IAAI,CAACuG,aAAT,EAAwB;QACpB,IAAIxG,CAAC,GAAG,CAAR;;QACA,KAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGC,IAAI,CAACuG,aAAL,CAAmB9c,MAAnC,EAA2CsW,CAAC,EAA5C,EAAgD;UAC5CyH,YAAY,IAAIxH,IAAI,CAACuG,aAAL,CAAmBxG,CAAnB,IAAwB,IAAxC;QACH;MACJ;;MAED,OAAO;QACHxU,WAAW,EAAEyU,IAAI,CAAC1X,YAAL,IAAqB,EAD/B;QAEHgD,WAAW,EAAE0U,IAAI,CAAC1U,WAAL,IAAoB,EAF9B;QAGHqb,WAAW,EAAE3G,IAAI,CAAC4G,YAAL,IAAqB,mCAH/B;QAIHlD,SAAS,EAAE1D,IAAI,CAACmB,UAAL,IAAmB,EAJ3B;QAKH2E,YALG;QAMHU,WAAW,EAAExG,IAAI,CAACyG,YAAL,IAAqB,CAN/B;QAOHe,YAPG;QAQHxJ,MAAM,EAAE,KARL;QASHgG,WAAW,EAAE,IATV;QAUH3Y,QAAQ,EAAE2U,IAAI,CAAC3U,QAAL,IAAiB,EAVxB;QAWHwY,OAAO,EAAE7D,IAAI,CAAC8D,QAAL,IAAiB;MAXvB,CAAP;IAaH,CApCkB;;IAAA,+DAsCHjb,CAAD,IAAO;MAClBA,CAAC,CAAC2D,cAAF;;MAEA,IAAI,KAAKpG,KAAL,CAAW4X,MAAf,EAAuB;QACnB;MACH;;MAED,KAAKlV,QAAL,CAAc;QACVkV,MAAM,EAAE,IADE;QAEVgG,WAAW,EAAE;MAFH,CAAd;MAKA,MAAM8B,YAAY,GAAG,EAArB;;MACA,IAAI,KAAK1f,KAAL,CAAW0f,YAAf,EAA6B;QACzB,KAAK,IAAIC,WAAT,IAAwB,KAAK3f,KAAL,CAAW0f,YAAX,CAAwB2B,KAAxB,CAA8B,IAA9B,CAAxB,EAA6D;UACzD1B,WAAW,GAAGA,WAAW,CAAC5R,IAAZ,EAAd;;UAEA,IAAI4R,WAAW,CAACtc,MAAZ,GAAqB,CAAzB,EAA4B;YACxBqc,YAAY,CAACzY,IAAb,CAAkB0Y,WAAlB;UACH;QACJ;MACJ;;MAED,IAAI,CAAC,KAAK3f,KAAL,CAAWsd,SAAZ,IAAyBoC,YAAY,CAACrc,MAAb,KAAwB,CAArD,EAAwD;QACpD,KAAKX,QAAL,CAAc;UACVkV,MAAM,EAAE,KADE;UAEVgG,WAAW,eACP,oBAAC,sBAAD;YACI,EAAE,EAAC,oDADP;YAEI,cAAc,EAAC;UAFnB;QAHM,CAAd;QAUA;MACH;;MAED,MAAMwD,YAAY,GAAG,EAArB;;MACA,KAAK,IAAIE,WAAT,IAAwB,KAAKthB,KAAL,CAAWohB,YAAX,CAAwBC,KAAxB,CAA8B,IAA9B,CAAxB,EAA6D;QACzDC,WAAW,GAAGA,WAAW,CAACvT,IAAZ,EAAd;;QAEA,IAAIuT,WAAW,CAACje,MAAZ,GAAqB,CAAzB,EAA4B;UACxB+d,YAAY,CAACna,IAAb,CAAkBqa,WAAlB;QACH;MACJ;;MAED,IAAIF,YAAY,CAAC/d,MAAb,KAAwB,CAA5B,EAA+B;QAC3B,KAAKX,QAAL,CAAc;UACVkV,MAAM,EAAE,KADE;UAEVgG,WAAW,eACP,oBAAC,sBAAD;YACI,EAAE,EAAC,2CADP;YAEI,cAAc,EAAC;UAFnB;QAHM,CAAd;QAUA;MACH;;MAED,MAAMhE,IAAI,GAAG;QACTnY,OAAO,EAAE,KAAKjC,KAAL,CAAWL,IAAX,CAAgBwG,EADhB;QAEToV,UAAU,EAAE,KAAK/a,KAAL,CAAWsd,SAFd;QAGTmC,aAAa,EAAEC,YAHN;QAITW,YAAY,EAAEvX,QAAQ,CAAC,KAAK9I,KAAL,CAAWogB,WAAZ,EAAyB,EAAzB,CAJb;QAKTD,aAAa,EAAEiB,YALN;QAMTlf,YAAY,EAAE,KAAKlC,KAAL,CAAWmF,WANhB;QAOTqb,YAAY,EAAE,KAAKxgB,KAAL,CAAWugB,WAPhB;QAQTrb,WAAW,EAAE,KAAKlF,KAAL,CAAWkF,WARf;QASTD,QAAQ,EAAE,KAAKjF,KAAL,CAAWiF,QATZ;QAUTyY,QAAQ,EAAE,KAAK1d,KAAL,CAAWyd;MAVZ,CAAb;MAaA,KAAKje,KAAL,CAAWqe,MAAX,CAAkBjE,IAAlB,EAAwB5Q,IAAxB,CAA6B,MAAM,KAAKtG,QAAL,CAAc;QAACkV,MAAM,EAAE;MAAT,CAAd,CAAnC;IACH,CAhHkB;;IAAA,oEAkHEnV,CAAD,IAAO;MACvB,KAAKC,QAAL,CAAc;QACVyC,WAAW,EAAE1C,CAAC,CAACE,MAAF,CAASC;MADZ,CAAd;IAGH,CAtHkB;;IAAA,oEAwHEH,CAAD,IAAO;MACvB,KAAKC,QAAL,CAAc;QACVwC,WAAW,EAAEzC,CAAC,CAACE,MAAF,CAASC;MADZ,CAAd;IAGH,CA5HkB;;IAAA,oEA8HEH,CAAD,IAAO;MACvB,KAAKC,QAAL,CAAc;QACV6d,WAAW,EAAE9d,CAAC,CAACE,MAAF,CAASC;MADZ,CAAd;IAGH,CAlIkB;;IAAA,kEAoIAH,CAAD,IAAO;MACrB,KAAKC,QAAL,CAAc;QACV4a,SAAS,EAAE7a,CAAC,CAACE,MAAF,CAASC;MADV,CAAd;IAGH,CAxIkB;;IAAA,qEA0IGH,CAAD,IAAO;MACxB,KAAKC,QAAL,CAAc;QACVgd,YAAY,EAAEjd,CAAC,CAACE,MAAF,CAASC;MADb,CAAd;IAGH,CA9IkB;;IAAA,oEAgJEH,CAAD,IAAO;MACvB,KAAKC,QAAL,CAAc;QACV0d,WAAW,EAAE3d,CAAC,CAACE,MAAF,CAASC;MADZ,CAAd;IAGH,CApJkB;;IAAA,qEAsJGH,CAAD,IAAO;MACxB,KAAKC,QAAL,CAAc;QACV0e,YAAY,EAAE3e,CAAC,CAACE,MAAF,CAASC;MADb,CAAd;IAGH,CA1JkB;;IAAA,iEA4JDH,CAAD,IAAO;MACpB,KAAKC,QAAL,CAAc;QACVuC,QAAQ,EAAExC,CAAC,CAACE,MAAF,CAASC;MADT,CAAd;IAGH,CAhKkB;;IAAA,gEAkKFH,CAAD,IAAO;MACnB,KAAKC,QAAL,CAAc;QACV+a,OAAO,EAAEhb,CAAC,CAACE,MAAF,CAASC;MADR,CAAd;IAGH,CAtKkB;;IAGf,KAAK5C,KAAL,GAAa,KAAK8d,gBAAL,CAAsB,KAAKte,KAAL,CAAWue,WAAX,IAA0B,EAAhD,CAAb;EACH;;EAoKDxe,MAAM,GAAG;IACL,MAAMgiB,kBAAkB,GAAG,mCAA3B;IACA,MAAMC,kBAAkB,GAAG,kBAA3B;IAEA,IAAIxD,cAAc,GAAG,KAAKxe,KAAL,CAAWoE,MAAhC;IACA,IAAIqa,cAAc,GAAG,KAAKze,KAAL,CAAW0e,MAAhC;IACA,IAAIuD,WAAW,GAAG,KAAKjiB,KAAL,CAAWiiB,WAA7B;IAEA,oBACI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,eAAD,qBACI,oBAAC,qBAAD;MAAM,EAAE,aAAM,KAAKjiB,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB;IAAR,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,oCADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CADJ,eAOI,oBAAC,sBAAD;MACI,EAAE,EAAEqe,cAAc,CAACrY,EADvB;MAEI,cAAc,EAAEqY,cAAc,CAAC9S;IAFnC,EAPJ,CADJ,eAaI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,iBADd;MAEI,QAAQ,EAAE,KAAKmE;IAFnB,gBAII;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,kCADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,EAAE,EAAC,aADP;MAEI,IAAI,EAAC,MAFT;MAGI,SAAS,EAAC,IAHd;MAII,SAAS,EAAC,cAJd;MAKI,KAAK,EAAE,KAAKrP,KAAL,CAAWmF,WALtB;MAMI,QAAQ,EAAE,KAAKsK;IANnB,EADJ,eASI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,uCADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CATJ,CAVJ,CAJJ,eA+BI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,kCADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,EAAE,EAAC,aADP;MAEI,IAAI,EAAC,MAFT;MAGI,SAAS,EAAC,KAHd;MAII,SAAS,EAAC,cAJd;MAKI,KAAK,EAAE,KAAKzP,KAAL,CAAWkF,WALtB;MAMI,QAAQ,EAAE,KAAKwK;IANnB,EADJ,eASI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,uCADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CATJ,CAVJ,CA/BJ,eA0DI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,mCADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,cADd;MAEI,KAAK,EAAE,KAAK1P,KAAL,CAAWugB,WAFtB;MAGI,QAAQ,EAAE,KAAKmB;IAHnB,gBAKI;MACI,KAAK,EAAEH;IADX,GAGKA,kBAHL,CALJ,eAUI;MACI,KAAK,EAAEC;IADX,GAGKA,kBAHL,CAVJ,CADJ,eAiBI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,wCADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CAjBJ,eAuBI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,wCADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CAvBJ,eA6BI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,wCADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CA7BJ,CAVJ,CA1DJ,eAyGI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,8BADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,cAAD;MACI,EAAE,EAAC,WADP;MAEI,KAAK,EAAE,KAAKxhB,KAAL,CAAWsd,SAFtB;MAGI,QAAQ,EAAE,KAAKa,eAHnB;MAII,UAAU,EAAE;IAJhB,EADJ,eAOI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,mCADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CAPJ,CAVJ,CAzGJ,eAkII;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,mCADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,EAAE,EAAC,cADP;MAEI,IAAI,EAAC,GAFT;MAGI,SAAS,EAAC,MAHd;MAII,SAAS,EAAC,cAJd;MAKI,KAAK,EAAE,KAAKne,KAAL,CAAW0f,YALtB;MAMI,QAAQ,EAAE,KAAKiC;IANnB,EADJ,eASI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,wCADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CATJ,CAVJ,CAlIJ,eA6JI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,8CADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,cADd;MAEI,KAAK,EAAE,KAAK3hB,KAAL,CAAWogB,WAFtB;MAGI,QAAQ,EAAE,KAAKwB;IAHnB,gBAKI;MACI,KAAK,EAAC;IADV,GAGKrd,iCAAe,CAAC,sDAAD,EAAyD,2CAAzD,CAHpB,CALJ,eAUI;MACI,KAAK,EAAC;IADV,GAGKA,iCAAe,CAAC,wDAAD,EAA2D,uCAA3D,CAHpB,CAVJ,CADJ,eAiBI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,mDADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CAjBJ,CAVJ,CA7JJ,eAgMI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,mCADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,EAAE,EAAC,cADP;MAEI,IAAI,EAAC,GAFT;MAGI,SAAS,EAAC,MAHd;MAII,SAAS,EAAC,cAJd;MAKI,KAAK,EAAE,KAAKvE,KAAL,CAAWohB,YALtB;MAMI,QAAQ,EAAE,KAAKS;IANnB,EADJ,eASI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,wCADP;MAEI,cAAc,EAAC,+FAFnB;MAGI,MAAM,EAAE;QACJ/Q,IAAI,eACA;UACI,IAAI,EAAC,mFADT;UAEI,MAAM,EAAC,QAFX;UAGI,GAAG,EAAC;QAHR,gBAKI,oBAAC,sBAAD;UACI,EAAE,EAAC,gDADP;UAEI,cAAc,EAAC;QAFnB,EALJ;MAFA;IAHZ,EADJ,CATJ,CAVJ,CAhMJ,EAyOK,KAAKtR,KAAL,CAAW6e,0BAAX,iBACG;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,+BADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,EAAE,EAAC,UADP;MAEI,IAAI,EAAC,MAFT;MAGI,SAAS,EAAC,IAHd;MAII,SAAS,EAAC,cAJd;MAKI,KAAK,EAAE,KAAKre,KAAL,CAAWiF,QALtB;MAMI,QAAQ,EAAE,KAAKqK;IANnB,EADJ,eASI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,oCADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CATJ,CAVJ,CA1OR,EAsQK,KAAK9P,KAAL,CAAW8e,sBAAX,iBACG;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,+BADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,EAAE,EAAC,SADP;MAEI,IAAI,EAAC,MAFT;MAGI,SAAS,EAAC,MAHd;MAII,SAAS,EAAC,cAJd;MAKI,KAAK,EAAE,KAAKte,KAAL,CAAWyd,OALtB;MAMI,QAAQ,EAAE,KAAKc;IANnB,EADJ,eASI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,oCADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CATJ,CAVJ,CAvQR,eAmSI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,yBAAD;MACI,IAAI,EAAC,WADT;MAEI,MAAM,EAAE,CAAC,KAAK/e,KAAL,CAAWme,WAAZ,EAAyB,KAAK3d,KAAL,CAAW4d,WAApC;IAFZ,EADJ,eAKI,oBAAC,qBAAD;MACI,SAAS,EAAC,qBADd;MAEI,EAAE,aAAM,KAAKpe,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB;IAFN,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,6BADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CALJ,eAcI,oBAAC,6BAAD;MACI,SAAS,EAAC,iBADd;MAEI,IAAI,EAAC,QAFT;MAGI,QAAQ,EAAE,KAAKK,KAAL,CAAW4X,MAHzB;MAII,YAAY,EAAErT,iCAAe,CAAC,KAAK/E,KAAL,CAAWuD,OAAX,CAAmB4C,EAApB,EAAwB,KAAKnG,KAAL,CAAWuD,OAAX,CAAmBmI,cAA3C,CAJjC;MAKI,OAAO,EAAE,KAAKmE,YALlB;MAMI,EAAE,EAAC;IANP,gBAQI,oBAAC,sBAAD;MACI,EAAE,EAAE4O,cAAc,CAACtY,EADvB;MAEI,cAAc,EAAEsY,cAAc,CAAC/S;IAFnC,EARJ,CAdJ,EA2BKuW,WA3BL,CAnSJ,CADJ,CAbJ,CADJ;EAmVH;;AAzjBoE;;yCAApDN,sCACE;EAEf;AACR;AACA;EACQhiB,IAAI,EAAER,wCALS;;EAOf;AACR;AACA;EACQiF,MAAM,EAAEjF,wCAVO;;EAYf;AACR;AACA;EACQuf,MAAM,EAAEvf,wCAfO;;EAiBf;AACR;AACA;EACQoE,OAAO,EAAEpE,wCApBM;;EAsBf;AACR;AACA;EACQ8iB,WAAW,EAAE9iB,sCAzBE;;EA2Bf;AACR;AACA;EACQgf,WAAW,EAAEhf,wCA9BE;;EAgCf;AACR;AACA;EACQof,WAAW,EAAEpf,6BAnCE;;EAqCf;AACR;AACA;EACQkf,MAAM,EAAElf,sCAxCO;;EA0Cf;AACR;AACA;EACQ0f,0BAA0B,EAAE1f,sCA7Cb;;EA+Cf;AACR;AACA;EACQ2f,sBAAsB,EAAE3f,sCAAyB0F;AAlDlC;;;;;;ACfvB;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA,MAAMma,2BAAM,GAAG;EAAC7Y,EAAE,EAAEoF,UAAC,CAAC,kBAAD,CAAN;EAA4BG,cAAc,EAAE;AAA5C,CAAf;AACA,MAAMuT,2BAAM,GAAG;EAAC9Y,EAAE,EAAEoF,UAAC,CAAC,2BAAD,CAAN;EAAqCG,cAAc,EAAE;AAArD,CAAf;AACA,MAAMwT,4BAAO,GAAG;EAAC/Y,EAAE,EAAEoF,UAAC,CAAC,6BAAD,CAAN;EAAuCG,cAAc,EAAE;AAAvD,CAAhB;AAEe,MAAM4W,kBAAN,SAAiCljB,mBAAjC,CAAqD;EA2BhE4D,WAAW,CAAChD,KAAD,EAAQ;IACf,MAAMA,KAAN;;IADe,6DAQD,MAAOoa,IAAP,IAAgB;MAC9B,KAAKlX,QAAL,CAAc;QAACib,WAAW,EAAE;MAAd,CAAd;MAEA,MAAM;QAACrX,IAAD;QAAOD;MAAP,IAAgB,MAAM,KAAK7G,KAAL,CAAW+F,OAAX,CAAmBwc,kBAAnB,CAAsCnI,IAAtC,CAA5B;;MACA,IAAItT,IAAJ,EAAU;QACNiF,+CAAA,YAAwB,KAAK/L,KAAL,CAAWL,IAAX,CAAgBQ,IAAxC,6DAA+F2G,IAAI,CAACX,EAApG;QACA;MACH;;MAED,IAAIU,KAAJ,EAAW;QACP,KAAK3D,QAAL,CAAc;UAACib,WAAW,EAAEtX,KAAK,CAACG;QAApB,CAAd;MACH;IACJ,CApBkB;;IAGf,KAAKxG,KAAL,GAAa;MACT2d,WAAW,EAAE;IADJ,CAAb;EAGH;;EAgBDpe,MAAM,GAAG;IACL,oBACI,oBAAC,uBAAD;MACI,IAAI,EAAE,KAAKC,KAAL,CAAWL,IADrB;MAEI,MAAM,EAAEqf,2BAFZ;MAGI,MAAM,EAAEC,2BAHZ;MAII,OAAO,EAAEC,4BAJb;MAKI,WAAW,EAAE,EALjB;MAMI,MAAM,EAAE,KAAKsD,eANjB;MAOI,WAAW,EAAE,KAAKhiB,KAAL,CAAW2d,WAP5B;MAQI,0BAA0B,EAAE,KAAKne,KAAL,CAAW6e,0BAR3C;MASI,sBAAsB,EAAE,KAAK7e,KAAL,CAAW8e;IATvC,EADJ;EAaH;;AA/D+D;;oCAA/CwD,iCACE;EAEf;AACR;AACA;EACQ3iB,IAAI,EAAER,wCALS;EAOf4G,OAAO,EAAE5G,0BAAA,CAAgB;IAErB;AACZ;AACA;IACYojB,kBAAkB,EAAEpjB,sCAAyB0F;EALxB,CAAhB,EAMNA,UAbY;;EAef;AACR;AACA;EACQga,0BAA0B,EAAE1f,sCAlBb;;EAoBf;AACR;AACA;EACQ2f,sBAAsB,EAAE3f,sCAAyB0F;AAvBlC;;ACfvB;AACA;AAEA;AACA;AAEA;AAEA;AAEA;;AAEA,SAASgG,oCAAT,CAAyBrK,KAAzB,EAAgC;EAC5B,MAAMsK,MAAM,GAAGH,6BAAS,CAACnK,KAAD,CAAxB;EACA,MAAMqe,0BAA0B,GAAG/T,MAAM,CAACwU,0BAAP,KAAsC,MAAzE;EACA,MAAMR,sBAAsB,GAAGhU,MAAM,CAACyU,sBAAP,KAAkC,MAAjE;EACA,OAAO;IACHV,0BADG;IAEHC;EAFG,CAAP;AAIH;;AAED,SAAS1T,uCAAT,CAA4BC,QAA5B,EAAsC;EAClC,OAAO;IACHtF,OAAO,EAAE0E,4BAAkB,CAAC;MACxB8X,kBAAkBA,EAAAA,uCAAAA;IADM,CAAD,EAExBlX,QAFwB;EADxB,CAAP;AAKH;;AAED,2DAAeb,cAAO,CAACK,oCAAD,EAAkBO,uCAAlB,CAAP,CAA6CkX,kBAA7C,CAAf;;;;;;;AC9BA;AACA;AAEA;AACA;AAMA;AACA;AACA;AACA;AAEA,MAAMtD,4BAAM,GAAG;EAAC7Y,EAAE,EAAE,mBAAL;EAA0BuF,cAAc,EAAE;AAA1C,CAAf;AACA,MAAMuT,4BAAM,GAAG;EAAC9Y,EAAE,EAAE,gCAAL;EAAuCuF,cAAc,EAAE;AAAvD,CAAf;AACA,MAAMwT,6BAAO,GAAG;EAAC/Y,EAAE,EAAE,kCAAL;EAAyCuF,cAAc,EAAE;AAAzD,CAAhB;AAoDe,MAAM+W,mBAAN,SAAkCrjB,mBAAlC,CAAoE;EAG/E4D,WAAW,CAAChD,KAAD,EAAe;IACtB,MAAMA,KAAN;;IADsB;;IAAA,+DAcP,MAAOoa,IAAP,IAAgD;MAC/D,KAAKqF,OAAL,GAAerF,IAAf;;MAEA,IAAI,KAAKpa,KAAL,CAAWoa,IAAX,CAAiBjU,EAArB,EAAyB;QACrBiU,IAAI,CAACjU,EAAL,GAAU,KAAKnG,KAAL,CAAWoa,IAAX,CAAiBjU,EAA3B;MACH;;MAED,IAAI,KAAKnG,KAAL,CAAWoa,IAAX,CAAiB1T,KAArB,EAA4B;QACxB0T,IAAI,CAAC1T,KAAL,GAAa,KAAK1G,KAAL,CAAWoa,IAAX,CAAiB1T,KAA9B;MACH;;MAED,MAAMgc,gBAAgB,GAAI,KAAK1iB,KAAL,CAAWoa,IAAX,CAAiB6F,aAAjB,CAA+Bpc,MAA/B,KAA0CuW,IAAI,CAAE6F,aAAN,CAAoBpc,MAA/D,IACrB,KAAK7D,KAAL,CAAWoa,IAAX,CAAiB6F,aAAjB,CAA+B0C,KAA/B,CAAqC,CAACC,CAAD,EAAIzI,CAAJ,KAAUyI,CAAC,KAAKxI,IAAI,CAAC6F,aAAL,CAAmB9F,CAAnB,CAArD,CADJ;MAGA,MAAM0I,gBAAgB,GAAI,KAAK7iB,KAAL,CAAWoa,IAAX,CAAiBuG,aAAjB,CAA+B9c,MAA/B,KAA0CuW,IAAI,CAAEuG,aAAN,CAAoB9c,MAA/D,IACrB,KAAK7D,KAAL,CAAWoa,IAAX,CAAiBuG,aAAjB,CAA+BgC,KAA/B,CAAqC,CAACC,CAAD,EAAIzI,CAAJ,KAAUyI,CAAC,KAAKxI,IAAI,CAACuG,aAAL,CAAmBxG,CAAnB,CAArD,CADJ;;MAGA,IAAI,KAAKna,KAAL,CAAWoa,IAAX,CAAiB4G,YAAjB,KAAkC5G,IAAI,CAAC4G,YAAvC,IACA,CAAC0B,gBADD,IACqB,CAACG,gBAD1B,EAC4C;QACxC,KAAKC,kBAAL;MACH,CAHD,MAGO;QACH,MAAM,KAAKpD,UAAL,EAAN;MACH;IACJ,CArCyB;;IAAA,iEAuCL,MAAY;MAC7B,KAAKxc,QAAL,CAAc;QAAC0c,gBAAgB,EAAE;MAAnB,CAAd;IACH,CAzCyB;;IAAA,oEA2CF,MAAY;MAChC,KAAK1c,QAAL,CAAc;QAAC0c,gBAAgB,EAAE;MAAnB,CAAd;IACH,CA7CyB;;IAAA,yDA+Cb,YAA2B;MACpC,KAAK1c,QAAL,CAAc;QAACib,WAAW,EAAE;MAAd,CAAd;MAEA,MAAM;QAACrX,IAAD;QAAOD;MAAP,IAA6D,MAAM,KAAK7G,KAAL,CAAW+F,OAAX,CAAmBgd,kBAAnB,CAAsC,KAAKtD,OAA3C,CAAzE;;MAEA,IAAI3Y,IAAJ,EAAU;QACNiF,+CAAA,YAAwB,KAAK/L,KAAL,CAAWL,IAAX,CAAgBQ,IAAxC;QACA;MACH;;MAED,KAAK+C,QAAL,CAAc;QAAC0c,gBAAgB,EAAE;MAAnB,CAAd;;MAEA,IAAI/Y,KAAJ,EAAW;QACP,KAAK3D,QAAL,CAAc;UAACib,WAAW,EAAEtX,KAAK,CAACG;QAApB,CAAd;MACH;IACJ,CA9DyB;;IAAA,0DAgEZ,MAAmB;MAC7B,MAAMgc,aAAa,gBACf,oBAAC,sBAAD;QACI,EAAE,EAAC,gCADP;QAEI,cAAc,EAAC;MAFnB,EADJ;MAOA,MAAMC,YAAY,gBACd,oBAAC,sBAAD;QACI,EAAE,EAAC,iCADP;QAEI,cAAc,EAAC;MAFnB,EADJ;MAOA,MAAMC,cAAc,gBAChB,oBAAC,sBAAD;QACI,EAAE,EAAC,kCADP;QAEI,cAAc,EAAC;MAFnB,EADJ;MAOA,oBACI,oBAAC,4BAAD;QACI,KAAK,EAAED,YADX;QAEI,OAAO,EAAEC,cAFb;QAGI,iBAAiB,EAAEF,aAHvB;QAII,IAAI,EAAE,KAAKxiB,KAAL,CAAWof,gBAJrB;QAKI,SAAS,EAAE,KAAKF,UALpB;QAMI,QAAQ,EAAE,KAAKyD;MANnB,EADJ;IAUH,CAhGyB;;IAEtB,KAAK3iB,KAAL,GAAa;MACTof,gBAAgB,EAAE,KADT;MAETzB,WAAW,EAAE;IAFJ,CAAb;EAIH;;EAEDjV,iBAAiB,GAAS;IACtB,IAAI,KAAKlJ,KAAL,CAAWiS,sBAAf,EAAuC;MACnC,KAAKjS,KAAL,CAAW+F,OAAX,CAAmBqd,eAAnB,CAAmC,KAAKpjB,KAAL,CAAW8f,MAA9C;IACH;EACJ;;EAsFD/f,MAAM,GAAgB;IAClB,IAAI,CAAC,KAAKC,KAAL,CAAWoa,IAAhB,EAAsB;MAClB,oBAAO,oBAAC,6BAAD,OAAP;IACH;;IAED,oBACI,oBAAC,uBAAD;MACI,IAAI,EAAE,KAAKpa,KAAL,CAAWL,IADrB;MAEI,MAAM,EAAEqf,4BAFZ;MAGI,MAAM,EAAEC,4BAHZ;MAII,OAAO,EAAEC,6BAJb;MAKI,WAAW,EAAE,KAAK+C,WAAL,EALjB;MAMI,MAAM,EAAE,KAAKoB,gBANjB;MAOI,WAAW,EAAE,KAAK7iB,KAAL,CAAW2d,WAP5B;MAQI,WAAW,EAAE,KAAKne,KAAL,CAAWoa,IAR5B;MASI,0BAA0B,EAAE,KAAKpa,KAAL,CAAW6e,0BAT3C;MAUI,sBAAsB,EAAE,KAAK7e,KAAL,CAAW8e;IAVvC,EADJ;EAcH;;AAxH8E;;qCAA9D2D;EAnCjB3C;EACA/Z;IAKIgd;IAKAK;;EAMJnR;EAKA4M;EAKAC;;;;;;;AC7DJ;AACA;AAEA;AACA;AAEA;AACA;AAMA;;AAaA,SAASjU,qCAAT,CAAyBrK,KAAzB,EAA6CoQ,QAA7C,EAAiE;EAC7D,MAAM9F,MAAM,GAAGH,6BAAS,CAACnK,KAAD,CAAxB;EACA,MAAMsf,MAAM,GAAI,IAAIhP,eAAJ,CAAoBF,QAAQ,CAACG,QAAT,CAAkBvM,MAAtC,CAAD,CAAgDwM,GAAhD,CAAoD,IAApD,CAAf;EACA,MAAMiB,sBAAsB,GAAGnH,MAAM,CAAC8H,sBAAP,KAAkC,MAAjE;EACA,MAAMiM,0BAA0B,GAAG/T,MAAM,CAACwU,0BAAP,KAAsC,MAAzE;EACA,MAAMR,sBAAsB,GAAGhU,MAAM,CAACyU,sBAAP,KAAkC,MAAjE;EAEA,OAAO;IACHO,MAAM,EAAEA,MADL;IAEH1F,IAAI,EAAE5Z,KAAK,CAACC,QAAN,CAAeC,YAAf,CAA4BG,aAA5B,CAA0Cif,MAA1C,CAFH;IAGH7N,sBAHG;IAIH4M,0BAJG;IAKHC;EALG,CAAP;AAOH;;AAED,SAAS1T,wCAAT,CAA4BC,QAA5B,EAA+D;EAC3D,OAAO;IACHtF,OAAO,EAAE0E,4BAAkB,CAA+C;MACtEsY,kBADsE;MAEtEK,eAAeA,EAAAA,oCAAAA;IAFuD,CAA/C,EAGxB/X,QAHwB;EADxB,CAAP;AAMH;;AAED,4DAAeb,cAAO,CAACK,qCAAD,EAAkBO,wCAAlB,CAAP,CAA6CqX,mBAA7C,CAAf;;;;;;;;;;ACnDA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;AAEA,MAAMa,WAAW,GAAG,iBAApB;AAEO,SAAShe,iCAAT,CAAuBie,QAAvB,EAA2CxhB,MAA3C,EAA4E;EAC/E,IAAI,CAACA,MAAL,EAAa;IACT,OAAO,IAAP;EACH;;EAED,OAAOwhB,QAAQ,CAACpjB,IAAT,CAAckD,WAAd,GAA4BsF,QAA5B,CAAqC5G,MAArC,CAAP;AACH;AA0Cc,MAAMyhB,iBAAN,SAAgCpkB,mBAAhC,CAAmG;EAC9G4D,WAAW,CAAChD,KAAD,EAAgC;IACvC,MAAMA,KAAN;;IADuC,mEAQjBiD,CAAD,IAAgC;MACrD,IAAIA,CAAC,IAAIA,CAAC,CAAC2D,cAAX,EAA2B;QACvB3D,CAAC,CAAC2D,cAAF;MACH;;MACD,KAAK1D,QAAL,CAAc;QAACugB,YAAY,EAAE,KAAKzjB,KAAL,CAAWujB,QAAX,CAAoBG;MAAnC,CAAd;IACH,CAb0C;;IAAA,mEAejBzgB,CAAD,IAA+B;MACpDA,CAAC,CAAC2D,cAAF;MACA,KAAK1D,QAAL,CAAc;QAACugB,YAAY,EAAEH;MAAf,CAAd;IACH,CAlB0C;;IAAA,6DAoBvBrgB,CAAD,IAA+B;MAC9CA,CAAC,CAAC2D,cAAF;MACA,KAAK5G,KAAL,CAAW2jB,kBAAX,CAA8B,KAAK3jB,KAAL,CAAWujB,QAAX,CAAoBpd,EAAlD,EAAsDqD,IAAtD,CACI,QAAa;QAAA,IAAZ;UAAC3C;QAAD,CAAY;;QACT,IAAIA,KAAJ,EAAW;UACP,KAAK3D,QAAL,CAAc;YAAC2D,KAAK,EAAEA,KAAK,CAACG;UAAd,CAAd;QACH,CAFD,MAEO;UACH,KAAK9D,QAAL,CAAc;YAAC2D,KAAK,EAAE;UAAR,CAAd;UACA,KAAK+c,sBAAL;QACH;MACJ,CARL;IAUH,CAhC0C;;IAAA,yDAkC5B,MAAY;MACvB,KAAK5jB,KAAL,CAAWuT,QAAX,CAAoB,KAAKvT,KAAL,CAAWujB,QAA/B;IACH,CApC0C;;IAGvC,KAAK/iB,KAAL,GAAa;MACTijB,YAAY,EAAEH;IADL,CAAb;EAGH;;EAgCDvjB,MAAM,GAAoB;IACtB,MAAM;MAACwjB,QAAD;MAAWM;IAAX,IAA0B,KAAK7jB,KAArC;IACA,IAAI6G,KAAJ;;IAEA,IAAI,KAAKrG,KAAL,CAAWqG,KAAf,EAAsB;MAClBA,KAAK,gBACD,oBAAC,yBAAD;QACI,KAAK,EAAE,KAAKrG,KAAL,CAAWqG;MADtB,EADJ;IAKH;;IAED,IAAI,CAACvB,iCAAa,CAACie,QAAD,EAAW,KAAKvjB,KAAL,CAAW+B,MAAtB,CAAlB,EAAiD;MAC7C,OAAO,IAAP;IACH;;IAED,IAAI5B,IAAJ;;IACA,IAAIojB,QAAQ,CAACpjB,IAAb,EAAmB;MACfA,IAAI,GAAGojB,QAAQ,CAACpjB,IAAhB;IACH,CAFD,MAEO;MACHA,IAAI,gBACA,oBAAC,sBAAD;QACI,EAAE,EAAC,0CADP;QAEI,cAAc,EAAC;MAFnB,EADJ;IAMH;;IAED,IAAIuF,WAAJ;;IACA,IAAI6d,QAAQ,CAAC7d,WAAb,EAA0B;MACtBA,WAAW,gBACP;QAAK,SAAS,EAAC;MAAf,gBACI;QAAM,SAAS,EAAC;MAAhB,GACK6d,QAAQ,CAAC7d,WADd,CADJ,CADJ;IAOH;;IAED,MAAMgb,IAAI,gBACN;MAAK,SAAS,EAAC;IAAf,gBACI;MAAM,SAAS,EAAC;IAAhB,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,sCADP;MAEI,cAAc,EAAC,uBAFnB;MAGI,MAAM,EAAE;QACJA,IAAI,EAAE6C,QAAQ,CAAC5C,aAAT,CAAuBF,IAAvB,CAA4B,IAA5B;MADF;IAHZ,EADJ,CADJ,CADJ;IAcA,IAAIqD,SAAJ;;IACA,IAAIP,QAAQ,CAACQ,UAAb,EAAyB;MACrBD,SAAS,GAAGlhB,6BAAA,CAAsB,kCAAtB,EAA0D,KAA1D,CAAZ;IACH,CAFD,MAEO;MACHkhB,SAAS,GAAGlhB,6BAAA,CAAsB,iCAAtB,EAAyD,IAAzD,CAAZ;IACH;;IAED,IAAIohB,QAAJ;IACA,IAAIP,YAAJ;;IACA,IAAI,KAAKjjB,KAAL,CAAWijB,YAAX,KAA4BH,WAAhC,EAA6C;MACzCU,QAAQ,gBACJ;QACI,EAAE,EAAC,kBADP;QAEI,SAAS,EAAC,yBAFd;QAGI,OAAO,EAAE,KAAKJ;MAHlB,gBAKI,oBAAC,sBAAD;QACI,EAAE,EAAC,mCADP;QAEI,cAAc,EAAC;MAFnB,EALJ,CADJ;MAYAH,YAAY,gBACR;QAAM,SAAS,EAAC;MAAhB,gBACI,oBAAC,sBAAD;QACI,EAAE,EAAC,sCADP;QAEI,cAAc,EAAC,mCAFnB;QAGI,MAAM,EAAE;UACJA,YAAY,EAAE,KAAKjjB,KAAL,CAAWijB;QADrB;MAHZ,EADJ,CADJ;IAWH,CAxBD,MAwBO;MACHO,QAAQ,gBACJ;QACI,EAAE,EAAC,kBADP;QAEI,SAAS,EAAC,yBAFd;QAGI,OAAO,EAAE,KAAKC;MAHlB,gBAKI,oBAAC,sBAAD;QACI,EAAE,EAAC,mCADP;QAEI,cAAc,EAAC;MAFnB,EALJ,CADJ;MAYAR,YAAY,gBACR;QAAM,SAAS,EAAC;MAAhB,gBACI,oBAAC,yCAAD;QACI,EAAE,EAAC,sCADP;QAEI,cAAc,EAAC,mCAFnB;QAGI,MAAM,EAAE;UACJA,YAAY,EAAE,KAAKjjB,KAAL,CAAWijB;QADrB;MAHZ,EADJ,eAQI,oBAAC,QAAD;QACI,SAAS,EAAC,iCADd;QAEI,cAAc,EAAC,oBAFnB;QAGI,KAAK,EAAE,KAAKjjB,KAAL,CAAWijB;MAHtB,EARJ,CADJ;IAgBH;;IAED,MAAMS,KAAK,gBACP;MACI,EAAE,EAAC,wBADP;MAEI,SAAS,EAAC,yBAFd;MAGI,OAAO,EAAE,KAAKC;IAHlB,gBAKI,oBAAC,sBAAD;MACI,EAAE,EAAC,oCADP;MAEI,cAAc,EAAC;IAFnB,EALJ,CADJ;IAaA,IAAIC,IAAJ;;IACA,IAAIb,QAAQ,CAACrF,QAAb,EAAuB;MACnBkG,IAAI,gBACA;QAAK,SAAS,EAAC;MAAf,gBACI;QACI,GAAG,EAAE,oBADT;QAEI,GAAG,EAAEb,QAAQ,CAACrF;MAFlB,EADJ,CADJ;IAQH;;IAED,IAAInY,OAAJ;;IACA,IAAI,CAAC,KAAK/F,KAAL,CAAWiH,OAAhB,EAAyB;MACrBlB,OAAO,gBACH;QAAK,SAAS,EAAC;MAAf,GACKie,QADL,EAEK,KAFL,EAGKE,KAHL,EAIK,KAJL,eAKI,oBAAC,qBAAD;QAAM,EAAE,aAAM,KAAKlkB,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB,+CAA+DojB,QAAQ,CAACpd,EAAxE;MAAR,gBACI,oBAAC,sBAAD;QACI,EAAE,EAAC,6BADP;QAEI,cAAc,EAAC;MAFnB,EADJ,CALJ,EAWK,KAXL,eAYI,oBAAC,uBAAD;QACI,YAAY,eACR,oBAAC,sBAAD;UACI,EAAE,EAAC,qCADP;UAEI,cAAc,EAAC;QAFnB,EAFR;QAOI,QAAQ,EAAE,KAAKoO;MAPnB,EAZJ,CADJ;IAwBH;;IAED,IAAI8P,OAAO,gBACP;MAAK,SAAS,EAAC;IAAf,gBACI;MAAM,SAAS,EAAC;IAAhB,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,gCADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CADJ,CADJ;;IAUA,IAAI,CAAC,KAAKrkB,KAAL,CAAWiH,OAAhB,EAAyB;MACrBod,OAAO,gBACH,uDACI;QAAK,SAAS,EAAC;MAAf,gBACI;QAAM,SAAS,EAAC;MAAhB,gBACI,oBAAC,yCAAD;QACI,EAAE,EAAC,iCADP;QAEI,cAAc,EAAC,6BAFnB;QAGI,MAAM,EAAE;UACJP;QADI;MAHZ,EADJ,CADJ,CADJ,eAYI;QAAK,SAAS,EAAC;MAAf,gBACI;QAAM,SAAS,EAAC;MAAhB,gBACI,oBAAC,yCAAD;QACI,EAAE,EAAC,kCADP;QAEI,cAAc,EAAC,2BAFnB;QAGI,MAAM,EAAE;UACJQ,QAAQ,EAAEf,QAAQ,CAACpd;QADf;MAHZ,EADJ,eAQI,oBAAC,QAAD;QACI,SAAS,EAAC,6BADd;QAEI,cAAc,EAAC,gBAFnB;QAGI,KAAK,EAAEod,QAAQ,CAACpd;MAHpB,EARJ,CADJ,CAZJ,eA4BI;QAAK,SAAS,EAAC;MAAf,GACKsd,YADL,CA5BJ,EA+BK/C,IA/BL,eAgCI;QAAK,SAAS,EAAC;MAAf,gBACI;QAAM,SAAS,EAAC;MAAhB,gBACI,oBAAC,sBAAD;QACI,EAAE,EAAC,iCADP;QAEI,cAAc,EAAC,gDAFnB;QAGI,MAAM,EAAE;UACJtL,OAAO,EAAEyO,WADL;UAEJjI,QAAQ,EAAE2H,QAAQ,CAAC1H;QAFf;MAHZ,EADJ,CADJ,CAhCJ,CADJ;IA+CH;;IAED,oBACI;MAAK,SAAS,EAAC;IAAf,GACKuI,IADL,eAEI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAQ,SAAS,EAAC;IAAlB,GACKjkB,IADL,CADJ,EAIK4F,OAJL,CADJ,EAOKc,KAPL,EAQKnB,WARL,EASK2e,OATL,CAFJ,CADJ;EAgBH;;AA7R6G;;mCAA7Fb;EAzBjBvc;EAEA4c;EAKAF;EAKApQ;EAKAxR;;;AC3DJ;AACA;AAEA;AAEA;AAIA;AAEA;;AAEA,SAAS8I,mCAAT,CAAyBrK,KAAzB,EAA6CoQ,QAA7C,EAA+E;EAC3E,MAAM2S,QAAQ,GAAG3S,QAAQ,CAAC2S,QAAT,IAAqB,EAAtC;EACA,OAAO;IACHM,WAAW,EAAE5O,sCAAoB,CAACzU,KAAD,EAAQmJ,kCAAO,CAACnJ,KAAD,EAAQ+iB,QAAQ,CAAC/O,UAAjB,CAAf;EAD9B,CAAP;AAGH;;AAED,0DAAehK,cAAO,CAACK,mCAAD,CAAP,CAAyB2Y,iBAAzB,CAAf;;;;;;;;;;ACpBA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AAsDe,MAAMe,kBAAN,SAAiCnlB,mBAAjC,CAAmE;EAC9E4D,WAAW,CAAChD,KAAD,EAAe;IACtB,MAAMA,KAAN;;IADsB,4DAeR8a,GAAD,IAAyB;MACtC,IAAIA,GAAG,IAAIA,GAAG,CAAC3U,EAAf,EAAmB;QACf,KAAKnG,KAAL,CAAW+F,OAAX,CAAmBye,cAAnB,CAAkC1J,GAAG,CAAC3U,EAAtC;MACH;IACJ,CAnByB;;IAAA,uDAmCbpE,MAAD,IAAqBF,MAAM,CAACC,MAAP,CAAc,KAAK9B,KAAL,CAAWiB,SAAzB,EAC7Bc,MAD6B,CACrB+Y,GAAD,IAASxV,iCAAa,CAACwV,GAAD,EAAM/Y,MAAN,CADA,EAE7BQ,IAF6B,CAExB,KAAKkiB,eAFmB,EAG7B/gB,GAH6B,CAGxBoX,GAAD,IAAS;MACT,oBACI,oBAAC,mBAAD;QACI,GAAG,EAAEA,GAAG,CAAC3U,EADb;QAEI,QAAQ,EAAE2U,GAFd;QAGI,kBAAkB,EAAE,KAAK9a,KAAL,CAAW+F,OAAX,CAAmB2e,mBAH3C;QAII,QAAQ,EAAE,KAAKF,cAJnB;QAKI,IAAI,EAAE,KAAKxkB,KAAL,CAAWL,IALrB;QAMI,WAAW,EAAC,EANhB;QAOI,OAAO,EAAE,KAAKK,KAAL,CAAWmB,eAAX,CAA2BwH,QAA3B,CAAoCmS,GAAG,CAAC3U,EAAxC;MAPb,EADJ;IAWH,CAf4B,CAnCP;;IAEtB,KAAK3F,KAAL,GAAa;MACT+C,OAAO,EAAE;IADA,CAAb;EAGH;;EAED2F,iBAAiB,GAAS;IACtB,IAAI,KAAKlJ,KAAL,CAAWmS,0BAAf,EAA2C;MACvC,KAAKnS,KAAL,CAAW+F,OAAX,CAAmB6U,wBAAnB,GAA8CpR,IAA9C,CACI,MAAM,KAAKtG,QAAL,CAAc;QAACK,OAAO,EAAE;MAAV,CAAd,CADV;IAGH;EACJ;;EAQDkhB,eAAe,CAACjiB,CAAD,EAAcC,CAAd,EAAmC;IAC9C,IAAIkiB,KAAK,GAAGniB,CAAC,CAACrC,IAAF,CAAOykB,QAAP,EAAZ;;IACA,IAAI,CAACD,KAAL,EAAY;MACRA,KAAK,GAAG5f,iCAAe,CAAC,0CAAD,EAA6C,+BAA7C,CAAvB;IACH;;IAED,IAAI8f,KAAK,GAAGpiB,CAAC,CAACtC,IAAF,CAAOykB,QAAP,EAAZ;;IACA,IAAI,CAACC,KAAL,EAAY;MACRA,KAAK,GAAG9f,iCAAe,CAAC,0CAAD,EAA6C,+BAA7C,CAAvB;IACH;;IAED,OAAO4f,KAAK,CAAChiB,aAAN,CAAoBkiB,KAApB,CAAP;EACH;;EAmBD9kB,MAAM,GAAgB;IAClB,MAAM+kB,mBAAmB,GAAG,KAAK9kB,KAAL,CAAWmS,0BAAX,IAAyC,KAAKnS,KAAL,CAAW+kB,cAAhF;IACA,IAAI/kB,KAAJ;;IACA,IAAI8kB,mBAAJ,EAAyB;MACrB9kB,KAAK,GAAG;QACJiE,OAAO,EAAE,MAAM,KAAKjE,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB,GAA6B,+BADlC;QAEJ+D,OAAO,EAAEa,iCAAe,CAAC,0BAAD,EAA6B,2BAA7B,CAFpB;QAGJZ,WAAW,EAAE;MAHT,CAAR;IAKH;;IAED,oBACI,oBAAC,aAAD;MACI,MAAM,eACF,oBAAC,sBAAD;QACI,EAAE,EAAC,6BADP;QAEI,cAAc,EAAC;MAFnB,EAFR;MAOI,QAAQ,eACJ,oBAAC,sBAAD;QACI,EAAE,EAAC,2BADP;QAEI,cAAc,EAAC,0JAFnB;QAGI,MAAM,EAAE;UACJ6gB,iBAAiB,eACb;YACI,MAAM,EAAC,QADX;YAEI,GAAG,EAAC,qBAFR;YAGI,IAAI,EAAC;UAHT,gBAKI,oBAAC,sBAAD;YACI,EAAE,EAAC,6CADP;YAEI,cAAc,EAAC;UAFnB,EALJ,CAFA;UAaJvS,YAAY,eACR;YACI,MAAM,EAAC,QADX;YAEI,GAAG,EAAC,qBAFR;YAGI,IAAI,EAAC;UAHT,gBAKI,oBAAC,sBAAD;YACI,EAAE,EAAC,wCADP;YAEI,cAAc,EAAC;UAFnB,EALJ;QAdA;MAHZ,EARR;MAuCI,SAAS,eACL,oBAAC,sBAAD;QACI,EAAE,EAAC,4BADP;QAEI,cAAc,EAAC;MAFnB,EAxCR;MA6CI,eAAe,eACX,oBAAC,yCAAD;QACI,EAAE,EAAC,kCADP;QAEI,cAAc,EAAC;MAFnB,EA9CR;MAmDI,iBAAiB,EAAE1N,iCAAe,CAAC,6BAAD,EAAgC,+BAAhC,CAnDtC;MAoDI,OAAO,EAAE,KAAKvE,KAAL,CAAW+C;IApDxB,GAqDQvD,KArDR,GAuDM+B,MAAD,IAAoB;MACjB,MAAMuB,QAAQ,GAAG,KAAKrC,SAAL,CAAec,MAAf,CAAjB;MACA,OAAO,CAACuB,QAAD,EAAWA,QAAQ,CAACO,MAAT,GAAkB,CAA7B,CAAP;IACH,CA1DL,CADJ;EA8DH;;AA9H6E;;oCAA7D0gB;EA/CjB5kB;IAAOQ;;EAYPgB;EAKA4jB;EAKA5S;EAEApM;IAKI6U;IAKA8J;IAKAF;;;;AC1DR;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAIA;AAEA;;AAEA,SAAS3Z,oCAAT,CAAyBrK,KAAzB,EAA6C;EACzC,MAAMsK,MAAM,GAAGH,6BAAS,CAACnK,KAAD,CAAxB;EACA,MAAM2R,0BAA0B,GAAGrH,MAAM,CAACgI,0BAAP,KAAsC,MAAzE;EAEA,OAAO;IACHiS,cAAc,EAAErU,gDAAqB,CAAClQ,KAAD,EAAQ;MAAC0Q,UAAU,EAAEP,uDAAwB6B;IAArC,CAAR,CADlC;IAEHvR,SAAS,EAAED,YAAY,CAACR,KAAD,CAFpB;IAGHW,eAAe,EAAED,kBAAkB,CAACV,KAAD,CAHhC;IAIH2R,0BAJG;IAKHxS,IAAI,EAAEqV,gCAAc,CAACxU,KAAD;EALjB,CAAP;AAOH;;AAQD,SAAS4K,uCAAT,CAA4BC,QAA5B,EAA+D;EAC3D,OAAO;IACHtF,OAAO,EAAE0E,4BAAkB,CAAmC;MAC1DmQ,wBAD0D;MAE1D8J,mBAF0D;MAG1DF,cAAcA,EAAAA,mCAAAA;IAH4C,CAAnC,EAIxBnZ,QAJwB;EADxB,CAAP;AAOH;;AAED,2DAAeb,cAAO,CAACK,oCAAD,EAAkBO,uCAAlB,CAAP,CAA6CmZ,kBAA7C,CAAf;;;;;;;;;;ACnDA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEe,MAAMU,gBAAN,SAA+B7lB,mBAA/B,CAAmD;EA4C9D4D,WAAW,CAAChD,KAAD,EAAQ;IACf,MAAMA,KAAN;;IADe,2DASA8a,GAAD,IAAS;MACvB,OAAO;QACH3a,IAAI,EAAE2a,GAAG,CAAC3a,IAAJ,IAAY,EADf;QAEHuF,WAAW,EAAEoV,GAAG,CAACpV,WAAJ,IAAmB,EAF7B;QAGHwf,QAAQ,EAAEpK,GAAG,CAACoK,QAAJ,IAAgB,EAHvB;QAIHhH,QAAQ,EAAEpD,GAAG,CAACoD,QAAJ,IAAgB,EAJvB;QAKH0D,YAAY,EAAE9G,GAAG,CAAC6F,aAAJ,GAAoB7F,GAAG,CAAC6F,aAAJ,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB,GAAmD,EAL9D;QAMHsD,UAAU,EAAEjJ,GAAG,CAACiJ,UAAJ,IAAkB,KAN3B;QAOHoB,QAAQ,EAAEC,OAAO,CAACtK,GAAG,CAACoD,QAAL,CAPd;QAQH9F,MAAM,EAAE,KARL;QASHgG,WAAW,EAAE;MATV,CAAP;IAWH,CArBkB;;IAAA,uDAuBL,MAAM;MAChB,KAAKlb,QAAL,CAAc;QACViiB,QAAQ,EAAE,IADA;QAEVjH,QAAQ,EAAE,KAAKA,QAAL,CAAcmH,OAAd,CAAsBjiB;MAFtB,CAAd;IAIH,CA5BkB;;IAAA,wDA8BHH,CAAD,IAAO;MAClBA,CAAC,CAAC2D,cAAF;;MAEA,IAAI,KAAKpG,KAAL,CAAW4X,MAAf,EAAuB;QACnB;MACH;;MAED,KAAKlV,QAAL,CAAc;QACVkV,MAAM,EAAE,IADE;QAEVgG,WAAW,EAAE;MAFH,CAAd;;MAKA,IAAI,CAAC,KAAK5d,KAAL,CAAWL,IAAhB,EAAsB;QAClB,KAAK+C,QAAL,CAAc;UACVkV,MAAM,EAAE,KADE;UAEVgG,WAAW,eACP,oBAAC,sBAAD;YACI,EAAE,EAAC,4BADP;YAEI,cAAc,EAAC;UAFnB;QAHM,CAAd;QAUA;MACH;;MAED,IAAI,CAAC,KAAK5d,KAAL,CAAWkF,WAAhB,EAA6B;QACzB,KAAKxC,QAAL,CAAc;UACVkV,MAAM,EAAE,KADE;UAEVgG,WAAW,eACP,oBAAC,sBAAD;YACI,EAAE,EAAC,mCADP;YAEI,cAAc,EAAC;UAFnB;QAHM,CAAd;QAUA;MACH;;MAED,IAAI,CAAC,KAAK5d,KAAL,CAAW0kB,QAAhB,EAA0B;QACtB,KAAKhiB,QAAL,CAAc;UACVkV,MAAM,EAAE,KADE;UAEVgG,WAAW,eACP,oBAAC,sBAAD;YACI,EAAE,EAAC,gCADP;YAEI,cAAc,EAAC;UAFnB;QAHM,CAAd;QAUA;MACH;;MAED,MAAMwD,YAAY,GAAG,EAArB;;MACA,KAAK,IAAIE,WAAT,IAAwB,KAAKthB,KAAL,CAAWohB,YAAX,CAAwBC,KAAxB,CAA8B,IAA9B,CAAxB,EAA6D;QACzDC,WAAW,GAAGA,WAAW,CAACvT,IAAZ,EAAd;;QAEA,IAAIuT,WAAW,CAACje,MAAZ,GAAqB,CAAzB,EAA4B;UACxB+d,YAAY,CAACna,IAAb,CAAkBqa,WAAlB;QACH;MACJ;;MAED,IAAIF,YAAY,CAAC/d,MAAb,KAAwB,CAA5B,EAA+B;QAC3B,KAAKX,QAAL,CAAc;UACVkV,MAAM,EAAE,KADE;UAEVgG,WAAW,eACP,oBAAC,sBAAD;YACI,EAAE,EAAC,oCADP;YAEI,cAAc,EAAC;UAFnB;QAHM,CAAd;QAUA;MACH;;MAED,MAAMtD,GAAG,GAAG;QACR3a,IAAI,EAAE,KAAKK,KAAL,CAAWL,IADT;QAERwgB,aAAa,EAAEiB,YAFP;QAGRsD,QAAQ,EAAE,KAAK1kB,KAAL,CAAW0kB,QAHb;QAIRxf,WAAW,EAAE,KAAKlF,KAAL,CAAWkF,WAJhB;QAKRqe,UAAU,EAAE,KAAKvjB,KAAL,CAAWujB,UALf;QAMR7F,QAAQ,EAAE,KAAK1d,KAAL,CAAW0d;MANb,CAAZ;MASA,KAAKle,KAAL,CAAWqe,MAAX,CAAkBvD,GAAlB,EAAuBtR,IAAvB,CAA4B,MAAM,KAAKtG,QAAL,CAAc;QAACkV,MAAM,EAAE;MAAT,CAAd,CAAlC;IACH,CArHkB;;IAAA,sDAuHLnV,CAAD,IAAO;MAChB,KAAKC,QAAL,CAAc;QACV/C,IAAI,EAAE8C,CAAC,CAACE,MAAF,CAASC;MADL,CAAd;IAGH,CA3HkB;;IAAA,yDA6HFH,CAAD,IAAO;MACnB,KAAKC,QAAL,CAAc;QACV6gB,UAAU,EAAE9gB,CAAC,CAACE,MAAF,CAASC,KAAT,KAAmB;MADrB,CAAd;IAGH,CAjIkB;;IAAA,6DAmIEH,CAAD,IAAO;MACvB,KAAKC,QAAL,CAAc;QACVwC,WAAW,EAAEzC,CAAC,CAACE,MAAF,CAASC;MADZ,CAAd;IAGH,CAvIkB;;IAAA,0DAyIDH,CAAD,IAAO;MACpB,KAAKC,QAAL,CAAc;QACVgiB,QAAQ,EAAEjiB,CAAC,CAACE,MAAF,CAASC;MADT,CAAd;IAGH,CA7IkB;;IAAA,yDA+IFH,CAAD,IAAO;MACnB,KAAKC,QAAL,CAAc;QACViiB,QAAQ,EAAE,KADA;QAEVjH,QAAQ,EAAEjb,CAAC,CAACE,MAAF,CAASC;MAFT,CAAd;MAIA,KAAKsK,KAAL,CAAW4X,GAAX,GAAiBriB,CAAC,CAACE,MAAF,CAASC,KAA1B;IACH,CArJkB;;IAAA,8DAuJGH,CAAD,IAAO;MACxB,KAAKC,QAAL,CAAc;QACV0e,YAAY,EAAE3e,CAAC,CAACE,MAAF,CAASC;MADb,CAAd;IAGH,CA3JkB;;IAGf,KAAKsK,KAAL,GAAa,IAAI6X,KAAJ,EAAb;IACA,KAAK7X,KAAL,CAAWN,MAAX,GAAoB,KAAKoY,WAAzB;IACA,KAAKtH,QAAL,gBAAgB9e,eAAA,EAAhB;IACA,KAAKoB,KAAL,GAAa,KAAKklB,eAAL,CAAqB,KAAK1lB,KAAL,CAAW2lB,UAAX,IAAyB,EAA9C,CAAb;EACH;;EAsJD5lB,MAAM,GAAG;IACL,MAAMye,cAAc,GAAG,KAAKxe,KAAL,CAAWoE,MAAlC;IACA,MAAMqa,cAAc,GAAG,KAAKze,KAAL,CAAW0e,MAAlC;IACA,MAAMuD,WAAW,GAAG,KAAKjiB,KAAL,CAAWiiB,WAA/B;IAEA,IAAImC,IAAJ;;IACA,IAAI,KAAK5jB,KAAL,CAAW2kB,QAAf,EAAyB;MACrBf,IAAI,gBACA;QAAK,SAAS,EAAC;MAAf,gBACI;QACI,GAAG,EAAE,kBADT;QAEI,GAAG,EAAE,KAAK5jB,KAAL,CAAW0d;MAFpB,EADJ,CADJ;IAQH;;IAED,MAAM0H,OAAO,gBACT,oBAAC,qCAAD;MAAsB,WAAW,EAAE,CAACjV,yDAAD;IAAnC,gBACI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,8BADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAO,SAAS,EAAC;IAAjB,gBACI;MACI,IAAI,EAAC,OADT;MAEI,KAAK,EAAC,MAFV;MAGI,IAAI,EAAC,YAHT;MAII,OAAO,EAAE,KAAKnQ,KAAL,CAAWujB,UAJxB;MAKI,QAAQ,EAAE,KAAK8B;IALnB,EADJ,eAQI,oBAAC,sBAAD;MACI,EAAE,EAAC,kCADP;MAEI,cAAc,EAAC;IAFnB,EARJ,CADJ,eAcI;MAAO,SAAS,EAAC;IAAjB,gBACI;MACI,IAAI,EAAC,OADT;MAEI,KAAK,EAAC,OAFV;MAGI,IAAI,EAAC,YAHT;MAII,OAAO,EAAE,CAAC,KAAKrlB,KAAL,CAAWujB,UAJzB;MAKI,QAAQ,EAAE,KAAK8B;IALnB,EADJ,eAQI,oBAAC,sBAAD;MACI,EAAE,EAAC,iCADP;MAEI,cAAc,EAAC;IAFnB,EARJ,CAdJ,eA2BI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,4BADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CA3BJ,CAVJ,CADJ,CADJ;IAkDA,oBACI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,eAAD,qBACI,oBAAC,qBAAD;MAAM,EAAE,aAAM,KAAK7lB,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB;IAAR,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,6BADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CADJ,eAOI,oBAAC,sBAAD;MACI,EAAE,EAAEqe,cAAc,CAACrY,EADvB;MAEI,cAAc,EAAEqY,cAAc,CAAC9S;IAFnC,EAPJ,CADJ,eAaI;MAAK,SAAS,EAAC;IAAf,GACK0Y,IADL,eAEI;MAAM,SAAS,EAAC;IAAhB,GACKwB,OADL,eAEI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,2BADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,EAAE,EAAC,MADP;MAEI,IAAI,EAAC,MAFT;MAGI,SAAS,EAAC,IAHd;MAII,SAAS,EAAC,cAJd;MAKI,KAAK,EAAE,KAAKplB,KAAL,CAAWL,IALtB;MAMI,QAAQ,EAAE,KAAKmZ;IANnB,EADJ,eASI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,yBADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CATJ,CAVJ,CAFJ,eA6BI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,kCADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,EAAE,EAAC,aADP;MAEI,IAAI,EAAC,MAFT;MAGI,SAAS,EAAC,KAHd;MAII,SAAS,EAAC,cAJd;MAKI,KAAK,EAAE,KAAK9Y,KAAL,CAAWkF,WALtB;MAMI,QAAQ,EAAE,KAAKwK;IANnB,EADJ,eASI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,gCADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CATJ,CAVJ,CA7BJ,eAwDI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,+BADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,EAAE,EAAC,UADP;MAEI,IAAI,EAAC,KAFT;MAGI,SAAS,EAAC,KAHd;MAII,SAAS,EAAC,cAJd;MAKI,KAAK,EAAE,KAAK1P,KAAL,CAAW0kB,QALtB;MAMI,QAAQ,EAAE,KAAKY;IANnB,EADJ,eASI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,6BADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CATJ,CAVJ,CAxDJ,eAmFI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,8BADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,EAAE,EAAC,UADP;MAEI,GAAG,EAAE,KAAK5H,QAFd;MAGI,IAAI,EAAC,KAHT;MAII,SAAS,EAAC,KAJd;MAKI,SAAS,EAAC,cALd;MAMI,KAAK,EAAE,KAAK1d,KAAL,CAAW0d,QANtB;MAOI,QAAQ,EAAE,KAAK6H;IAPnB,EADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,yBADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CAVJ,CAVJ,CAnFJ,eA+GI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,mCADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,EAAE,EAAC,cADP;MAEI,IAAI,EAAC,GAFT;MAGI,SAAS,EAAC,MAHd;MAII,SAAS,EAAC,cAJd;MAKI,KAAK,EAAE,KAAKvlB,KAAL,CAAWohB,YALtB;MAMI,QAAQ,EAAE,KAAKS;IANnB,EADJ,eASI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,iCADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CATJ,CAVJ,CA/GJ,eA0II;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,yBAAD;MACI,IAAI,EAAC,WADT;MAEI,MAAM,EAAE,CAAC,KAAKriB,KAAL,CAAWme,WAAZ,EAAyB,KAAK3d,KAAL,CAAW4d,WAApC;IAFZ,EADJ,eAKI,oBAAC,qBAAD;MACI,SAAS,EAAC,qBADd;MAEI,EAAE,aAAM,KAAKpe,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB;IAFN,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,6BADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CALJ,eAcI,oBAAC,6BAAD;MACI,SAAS,EAAC,iBADd;MAEI,IAAI,EAAC,QAFT;MAGI,QAAQ,EAAE,KAAKK,KAAL,CAAW4X,MAHzB;MAII,YAAY,EAAErT,iCAAe,CAAC,KAAK/E,KAAL,CAAWuD,OAAX,CAAmB4C,EAApB,EAAwB,KAAKnG,KAAL,CAAWuD,OAAX,CAAmBmI,cAA3C,CAJjC;MAKI,OAAO,EAAE,KAAKmE,YALlB;MAMI,EAAE,EAAC;IANP,gBAQI,oBAAC,sBAAD;MACI,EAAE,EAAE4O,cAAc,CAACtY,EADvB;MAEI,cAAc,EAAEsY,cAAc,CAAC/S;IAFnC,EARJ,CAdJ,EA2BKuW,WA3BL,CA1IJ,CAFJ,CAbJ,CADJ;EA2LH;;AAvc6D;;kCAA7CgD,+BACE;EAEf;AACR;AACA;EACQtlB,IAAI,EAAER,wCALS;;EAOf;AACR;AACA;EACQiF,MAAM,EAAEjF,wCAVO;;EAYf;AACR;AACA;EACQuf,MAAM,EAAEvf,wCAfO;;EAiBf;AACR;AACA;EACQoE,OAAO,EAAEpE,wCApBM;;EAsBf;AACR;AACA;EACQ8iB,WAAW,EAAE9iB,sCAzBE;;EA2Bf;AACR;AACA;EACQgf,WAAW,EAAEhf,wCA9BE;;EAgCf;AACR;AACA;EACQwmB,UAAU,EAAExmB,6BAnCG;;EAqCf;AACR;AACA;EACQkf,MAAM,EAAElf,sCAAyB0F;AAxClB;;;;;;ACjBvB;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA,MAAMma,oBAAM,GAAG;EAAC7Y,EAAE,EAAEoF,UAAC,CAAC,sBAAD,CAAN;EAAgCG,cAAc,EAAE;AAAhD,CAAf;AACA,MAAMuT,oBAAM,GAAG;EAAC9Y,EAAE,EAAEoF,UAAC,CAAC,2BAAD,CAAN;EAAqCG,cAAc,EAAE;AAArD,CAAf;AACA,MAAMwT,qBAAO,GAAG;EAAC/Y,EAAE,EAAEoF,UAAC,CAAC,6BAAD,CAAN;EAAuCG,cAAc,EAAE;AAAvD,CAAhB;AAEe,MAAMsa,WAAN,SAA0B5mB,mBAA1B,CAA8C;EAsBzD4D,WAAW,CAAChD,KAAD,EAAQ;IACf,MAAMA,KAAN;;IADe,kDAQL,MAAO8a,GAAP,IAAe;MACzB,KAAK5X,QAAL,CAAc;QAACib,WAAW,EAAE;MAAd,CAAd;MAEA,MAAM;QAACrX,IAAD;QAAOD;MAAP,IAAgB,MAAM,KAAK7G,KAAL,CAAW+F,OAAX,CAAmBkgB,WAAnB,CAA+BnL,GAA/B,CAA5B;;MACA,IAAIhU,IAAJ,EAAU;QACNiF,+CAAA,YAAwB,KAAK/L,KAAL,CAAWL,IAAX,CAAgBQ,IAAxC,uDAAyF2G,IAAI,CAACX,EAA9F;QACA;MACH;;MAED,IAAIU,KAAJ,EAAW;QACP,KAAK3D,QAAL,CAAc;UAACib,WAAW,EAAEtX,KAAK,CAACG;QAApB,CAAd;MACH;IACJ,CApBkB;;IAGf,KAAKxG,KAAL,GAAa;MACT2d,WAAW,EAAE;IADJ,CAAb;EAGH;;EAgBDpe,MAAM,GAAG;IACL,oBACI,oBAAC,gBAAD;MACI,IAAI,EAAE,KAAKC,KAAL,CAAWL,IADrB;MAEI,MAAM,EAAEqf,oBAFZ;MAGI,MAAM,EAAEC,oBAHZ;MAII,OAAO,EAAEC,qBAJb;MAKI,WAAW,EAAE,EALjB;MAMI,MAAM,EAAE,KAAK+G,WANjB;MAOI,WAAW,EAAE,KAAKzlB,KAAL,CAAW2d;IAP5B,EADJ;EAWH;;AAxDwD;;6BAAxC6H,0BACE;EAEf;AACR;AACA;EACQrmB,IAAI,EAAER,6BALS;;EAOf;AACR;AACA;EACQ+mB,kBAAkB,EAAE/mB,wCAVL;EAYf4G,OAAO,EAAE5G,0BAAA,CAAgB;IAErB;AACZ;AACA;IACY8mB,WAAW,EAAE9mB,sCAAyB0F;EALjB,CAAhB,EAMNA;AAlBY;;ACfvB;AACA;AAEA;AACA;AAEA;AAEA;;AAEA,SAASuG,gCAAT,CAA4BC,QAA5B,EAAsC;EAClC,OAAO;IACHtF,OAAO,EAAE0E,4BAAkB,CAAC;MACxBwb,WAAWA,EAAAA,gCAAAA;IADa,CAAD,EAExB5a,QAFwB;EADxB,CAAP;AAKH;;AAED,oDAAeb,cAAO,CAAC,IAAD,EAAOY,gCAAP,CAAP,CAAkC4a,WAAlC,CAAf;;;;;;;AClBA;AACA;AAEA;AACA;AAMA;AACA;AACA;AACA;AAEA,MAAMhH,qBAAM,GAAG;EAAC7Y,EAAE,EAAE,mBAAL;EAA0BuF,cAAc,EAAE;AAA1C,CAAf;AACA,MAAMuT,qBAAM,GAAG;EAAC9Y,EAAE,EAAE,gCAAL;EAAuCuF,cAAc,EAAE;AAAvD,CAAf;AACA,MAAMwT,sBAAO,GAAG;EAAC/Y,EAAE,EAAE,kCAAL;EAAyCuF,cAAc,EAAE;AAAzD,CAAhB;AAoBe,MAAMya,YAAN,SAA2B/mB,mBAA3B,CAA6D;EAGxE4D,WAAW,CAAChD,KAAD,EAAe;IACtB,MAAMA,KAAN;;IADsB;;IAAA,oDAgBX,MAAO8a,GAAP,IAAyB;MACpC,KAAKsL,MAAL,GAActL,GAAd;;MAEA,IAAI,KAAK9a,KAAL,CAAWujB,QAAX,CAAoBpd,EAAxB,EAA4B;QACxB2U,GAAG,CAAC3U,EAAJ,GAAS,KAAKnG,KAAL,CAAWujB,QAAX,CAAoBpd,EAA7B;MACH;;MAED,MAAM0c,gBAAgB,GAAI,KAAK7iB,KAAL,CAAWujB,QAAX,CAAoB5C,aAApB,CAAkC9c,MAAlC,KAA6CiX,GAAG,CAAC6F,aAAJ,CAAkB9c,MAAhE,IACrB,KAAK7D,KAAL,CAAWujB,QAAX,CAAoB5C,aAApB,CAAkCgC,KAAlC,CAAwC,CAACC,CAAD,EAAIzI,CAAJ,KAAUyI,CAAC,KAAK9H,GAAG,CAAC6F,aAAJ,CAAkBxG,CAAlB,CAAxD,CADJ;;MAGA,IAAI0I,gBAAgB,KAAK,KAAzB,EAAgC;QAC5B,KAAKC,kBAAL;MACH,CAFD,MAEO;QACH,MAAM,KAAKuD,cAAL,EAAN;MACH;IACJ,CA/ByB;;IAAA,0DAiCL,MAAM;MACvB,KAAKnjB,QAAL,CAAc;QAAC0c,gBAAgB,EAAE;MAAnB,CAAd;IACH,CAnCyB;;IAAA,6DAqCF,MAAM;MAC1B,KAAK1c,QAAL,CAAc;QAAC0c,gBAAgB,EAAE;MAAnB,CAAd;IACH,CAvCyB;;IAAA,sDAyCT,YAAY;MACzB,KAAK1c,QAAL,CAAc;QAACib,WAAW,EAAE;MAAd,CAAd;MAEA,MAAMmI,GAAG,GAAG,MAAM,KAAKtmB,KAAL,CAAW+F,OAAX,CAAmBwgB,YAAnB,CAAgC,KAAKH,MAArC,CAAlB;;MAEA,IAAI,UAAUE,GAAV,IAAiBA,GAAG,CAACxf,IAAzB,EAA+B;QAC3BiF,+CAAA,YAAwB,KAAK/L,KAAL,CAAWL,IAAX,CAAgBQ,IAAxC;QACA;MACH;;MAED,KAAK+C,QAAL,CAAc;QAAC0c,gBAAgB,EAAE;MAAnB,CAAd;;MAEA,IAAI,WAAW0G,GAAf,EAAoB;QAChB,MAAM;UAACzf,KAAK,EAAE2f;QAAR,IAAeF,GAArB;QACA,KAAKpjB,QAAL,CAAc;UAACib,WAAW,EAAEqI,GAAG,CAACxf;QAAlB,CAAd;MACH;IACJ,CAzDyB;;IAAA,mDA2DZ,MAAM;MAChB,MAAMgc,aAAa,gBACf,oBAAC,sBAAD;QACI,EAAE,EAAC,uBADP;QAEI,cAAc,EAAC;MAFnB,EADJ;MAOA,MAAMC,YAAY,gBACd,oBAAC,sBAAD;QACI,EAAE,EAAC,0BADP;QAEI,cAAc,EAAC;MAFnB,EADJ;MAOA,MAAMC,cAAc,gBAChB,oBAAC,sBAAD;QACI,EAAE,EAAC,2BADP;QAEI,cAAc,EAAC;MAFnB,EADJ;MAOA,oBACI,oBAAC,4BAAD;QACI,KAAK,EAAED,YADX;QAEI,OAAO,EAAEC,cAFb;QAGI,iBAAiB,EAAEF,aAHvB;QAII,IAAI,EAAE,KAAKxiB,KAAL,CAAWof,gBAJrB;QAKI,SAAS,EAAE,KAAKyG,cALpB;QAMI,QAAQ,EAAE,KAAKlD;MANnB,EADJ;IAUH,CA3FyB;;IAGtB,KAAK3iB,KAAL,GAAa;MACTof,gBAAgB,EAAE,KADT;MAETzB,WAAW,EAAE;IAFJ,CAAb;IAIA,KAAKiI,MAAL,GAAc,KAAKpmB,KAAL,CAAWujB,QAAzB;EACH;;EAEDra,iBAAiB,GAAG;IAChB,IAAI,KAAKlJ,KAAL,CAAWmS,0BAAf,EAA2C;MACvC,KAAKnS,KAAL,CAAW+F,OAAX,CAAmB0gB,WAAnB,CAA+B,KAAKzmB,KAAL,CAAW0mB,UAA1C;IACH;EACJ;;EA+ED3mB,MAAM,GAAG;IACL,IAAI,CAAC,KAAKC,KAAL,CAAWujB,QAAhB,EAA0B;MACtB,oBAAO,oBAAC,6BAAD,OAAP;IACH;;IAED,oBACI,oBAAC,gBAAD;MACI,IAAI,EAAE,KAAKvjB,KAAL,CAAWL,IADrB;MAEI,MAAM,EAAEqf,qBAFZ;MAGI,MAAM,EAAEC,qBAHZ;MAII,OAAO,EAAEC,sBAJb;MAKI,WAAW,EAAE,KAAK+C,WAAL,EALjB;MAMI,MAAM,EAAE,KAAKsE,YANjB;MAOI,WAAW,EAAE,KAAK/lB,KAAL,CAAW2d,WAP5B;MAQI,UAAU,EAAE,KAAKne,KAAL,CAAWujB;IAR3B,EADJ;EAYH;;AAjHuE;;8BAAvD4C;EAXjBO;EAEA3gB;IARA0gB;IACAF;;EAQApU;;;;;;;AC7BJ;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AAKA;;AAWA,SAAStH,8BAAT,CAAyBrK,KAAzB,EAA6CoQ,QAA7C,EAA8D;EAC1D,MAAM9F,MAAM,GAAGH,6BAAS,CAACnK,KAAD,CAAxB;EACA,MAAMkmB,UAAkB,GAAI,IAAI5V,eAAJ,CAAoBF,QAAQ,CAACG,QAAT,CAAkBvM,MAAtC,CAAD,CAAgDwM,GAAhD,CAAoD,IAApD,KAA6D,EAAxF;EACA,MAAMmB,0BAA0B,GAAGrH,MAAM,CAACgI,0BAAP,KAAsC,MAAzE;EAEA,OAAO;IACH4T,UADG;IAEHnD,QAAQ,EAAE/iB,KAAK,CAACC,QAAN,CAAeC,YAAf,CAA4BO,SAA5B,CAAsCylB,UAAtC,CAFP;IAGHvU;EAHG,CAAP;AAKH;;AAED,SAAS/G,iCAAT,CAA4BC,QAA5B,EAAgD;EAC5C,OAAO;IACHtF,OAAO,EAAE0E,4BAAkB,CAA+C;MACtEgc,WADsE;MAEtEF,YAAYA,EAAAA,iCAAAA;IAF0D,CAA/C,EAGxBlb,QAHwB;EADxB,CAAP;AAMH;;AAED,qDAAeb,cAAO,CAACK,8BAAD,EAAkBO,iCAAlB,CAAP,CAA6C+a,YAA7C,CAAf;;;;;;AChDA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEO,SAAS7gB,+BAAT,CAAuBjD,OAAvB,EAAgCN,MAAhC,EAAwC;EAC3C,IAAI,CAACA,MAAL,EAAa;IACT,OAAO,IAAP;EACH;;EAED,OAAOM,OAAO,CAACK,YAAR,CAAqBW,WAArB,GAAmCwC,OAAnC,CAA2C9D,MAA3C,MAAuD,CAAC,CAAxD,IACHM,OAAO,CAACqD,WAAR,CAAoBrC,WAApB,GAAkCwC,OAAlC,CAA0C9D,MAA1C,MAAsD,CAAC,CADpD,IAEHM,OAAO,CAACskB,OAAR,CAAgBtjB,WAAhB,GAA8BwC,OAA9B,CAAsC9D,MAAtC,MAAkD,CAAC,CAFvD;AAGH;AAEc,MAAM6kB,gBAAN,SAA+BxnB,mBAA/B,CAAmD;EAAA;IAAA;;IAAA,2DAuC1C6D,CAAD,IAAO;MACtBA,CAAC,CAAC2D,cAAF;MAEA,KAAK5G,KAAL,CAAWqgB,YAAX,CAAwB,KAAKrgB,KAAL,CAAWqC,OAAnC;IACH,CA3C6D;;IAAA,uDA6C/C,MAAM;MACjB,KAAKrC,KAAL,CAAWuT,QAAX,CAAoB,KAAKvT,KAAL,CAAWqC,OAA/B;IACH,CA/C6D;EAAA;;EAiD9DtC,MAAM,GAAG;IACL,MAAMsC,OAAO,GAAG,KAAKrC,KAAL,CAAWqC,OAA3B;IACA,MAAMN,MAAM,GAAG,KAAK/B,KAAL,CAAW+B,MAAX,GAAoB,KAAK/B,KAAL,CAAW+B,MAAX,CAAkBsB,WAAlB,EAApB,GAAsD,EAArE;;IAEA,IAAI,CAACiC,+BAAa,CAACjD,OAAD,EAAUN,MAAV,CAAlB,EAAqC;MACjC,OAAO,IAAP;IACH;;IAED,IAAI5B,IAAJ;;IAEA,IAAIkC,OAAO,CAACK,YAAZ,EAA0B;MACtBvC,IAAI,GAAGkC,OAAO,CAACK,YAAf;IACH,CAFD,MAEO;MACHvC,IAAI,gBACA,oBAAC,sBAAD;QACI,EAAE,EAAC,oCADP;QAEI,cAAc,EAAC;MAFnB,EADJ;IAMH;;IAED,IAAIuF,WAAW,GAAG,IAAlB;;IACA,IAAIrD,OAAO,CAACqD,WAAZ,EAAyB;MACrBA,WAAW,gBACP;QAAK,SAAS,EAAC;MAAf,gBACI;QAAM,SAAS,EAAC;MAAhB,GACKrD,OAAO,CAACqD,WADb,CADJ,CADJ;IAOH;;IAED,IAAIihB,OAAO,GAAG,QAAQtkB,OAAO,CAACskB,OAA9B;;IACA,IAAItkB,OAAO,CAACC,aAAR,IAAyBD,OAAO,CAACwkB,kBAArC,EAAyD;MACrDF,OAAO,IAAI,MAAMtkB,OAAO,CAACwkB,kBAAzB;IACH;;IAED,IAAI9gB,OAAO,GAAG,IAAd;;IACA,IAAI,KAAK/F,KAAL,CAAWyb,SAAf,EAA0B;MACtB1V,OAAO,gBACH;QAAK,SAAS,EAAC;MAAf,gBACI;QACI,SAAS,EAAC,yBADd;QAEI,OAAO,EAAE,KAAK+a;MAFlB,gBAII,oBAAC,sBAAD;QACI,EAAE,EAAC,mCADP;QAEI,cAAc,EAAC;MAFnB,EAJJ,CADJ,EAUK,KAVL,eAWI,oBAAC,qBAAD;QAAM,EAAE,aAAM,KAAK9gB,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB,4CAA4DkC,OAAO,CAAC8D,EAApE;MAAR,gBACI,oBAAC,sBAAD;QACI,EAAE,EAAC,6BADP;QAEI,cAAc,EAAC;MAFnB,EADJ,CAXJ,EAiBK,KAjBL,eAkBI,oBAAC,uBAAD;QACI,YAAY,eACR,oBAAC,sBAAD;UACI,EAAE,EAAC,mCADP;UAEI,cAAc,EAAC;QAFnB,EAFR;QAOI,QAAQ,EAAE,KAAKoO;MAPnB,EAlBJ,CADJ;IA8BH;;IAED,MAAMuS,YAAY,GAAGzkB,OAAO,CAACqE,KAA7B;IAEA,oBACI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAK,SAAS,EAAC;IAAf,gBACI,8CACI;MAAQ,SAAS,EAAC;IAAlB,GACKvG,IADL,CADJ,eAII;MAAM,SAAS,EAAC;IAAhB,GACKwmB,OADL,CAJJ,CADJ,EASK5gB,OATL,CADJ,EAYKL,WAZL,eAaI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAM,SAAS,EAAC;IAAhB,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,8BADP;MAEI,cAAc,EAAC,gBAFnB;MAGI,MAAM,EAAE;QACJgB,KAAK,EAAEogB;MADH;IAHZ,EADJ,eAQI,oBAAC,QAAD;MACI,KAAK,EAAEA;IADX,EARJ,CADJ,CAbJ,eA2BI;MAAK,SAAS,EAAC;IAAf,gBACI;MAAM,SAAS,EAAC;IAAhB,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,iCADP;MAEI,cAAc,EAAC,gDAFnB;MAGI,MAAM,EAAE;QACJ1R,OAAO,EAAE,KAAKpV,KAAL,CAAWoV,OAAX,CAAmB3P,QADxB;QAEJmW,QAAQ,EAAEvZ,OAAO,CAACwZ;MAFd;IAHZ,EADJ,CADJ,CA3BJ,CADJ,CADJ;EA4CH;;AAtK6D;;iCAA7C+K,+BACE;EAEf;AACR;AACA;EACQjnB,IAAI,EAAER,wCALS;;EAOf;AACR;AACA;EACQkD,OAAO,EAAElD,wCAVM;;EAYf;AACR;AACA;EACQkhB,YAAY,EAAElhB,sCAfC;;EAiBf;AACR;AACA;EACQoU,QAAQ,EAAEpU,sCApBK;;EAsBf;AACR;AACA;EACQ4C,MAAM,EAAE5C,6BAzBO;;EA2Bf;AACR;AACA;EACQiW,OAAO,EAAEjW,wCA9BM;;EAgCf;AACR;AACA;EACQsc,SAAS,EAAEtc,sCAAyB0F;AAnCrB;;;;;;;;ACvBvB;AACA;AAEA;AACA;AAQA;AACA;AACA;AACA;AAuBe,MAAMkiB,iBAAN,SAAgC3nB,mBAAhC,CAA2D;EAAA;IAAA;;IAAA,6DAC1CiD,OAAD,IAA4B;MACnD,KAAKrC,KAAL,CAAW+F,OAAX,CAAmBihB,iBAAnB,CAAqC3kB,OAAO,CAAC8D,EAA7C;IACH,CAHqE;;IAAA,yDAK9C9D,OAAD,IAA4B;MAC/C,KAAKrC,KAAL,CAAW+F,OAAX,CAAmBkhB,aAAnB,CAAiC5kB,OAAO,CAAC8D,EAAzC;IACH,CAPqE;EAAA;;EAS9D+gB,cAAc,CAAC1kB,CAAD,EAAaC,CAAb,EAAyB;IAC3C,IAAIkiB,KAAK,GAAGniB,CAAC,CAACE,YAAd;;IACA,IAAI,CAACiiB,KAAL,EAAY;MACRA,KAAK,GAAG/hB,6BAAA,CAAsB,oCAAtB,EAA4D,uBAA5D,CAAR;IACH;;IAED,IAAIiiB,KAAK,GAAGpiB,CAAC,CAACC,YAAd;;IACA,IAAI,CAACmiB,KAAL,EAAY;MACRA,KAAK,GAAGjiB,6BAAA,CAAsB,oCAAtB,EAA4D,uBAA5D,CAAR;IACH;;IAED,OAAO+hB,KAAK,CAAChiB,aAAN,CAAoBkiB,KAApB,CAAP;EACH;;EAEM9kB,MAAM,GAAgB;IACzB,MAAMgB,QAAQ,GAAIgB,MAAD,IAAoB,KAAK/B,KAAL,CAAWe,QAAX,CACjCgB,MADiC,CACzBM,OAAD,IAAaA,OAAO,CAACJ,OAAR,KAAoB,KAAKjC,KAAL,CAAWL,IAAX,CAAgBwG,EADvB,EAEjCpE,MAFiC,CAEzBM,OAAD,IAAaiD,+BAAa,CAACjD,OAAD,EAAUN,MAAV,CAFA,EAGjCQ,IAHiC,CAG5B,KAAK2kB,cAHuB,EAGPxjB,GAHO,CAGFrB,OAAD,IAAa;MACvC,MAAMoZ,SAAS,GAAG,KAAKzb,KAAL,CAAWmnB,4BAAX,IAA2C,KAAKnnB,KAAL,CAAWkI,IAAX,CAAgB/B,EAAhB,KAAuB9D,OAAO,CAACmS,UAA5F;MAEA,oBACI,oBAAC,gBAAD;QACI,GAAG,EAAEnS,OAAO,CAAC8D,EADjB;QAEI,IAAI,EAAE,KAAKnG,KAAL,CAAWL,IAFrB;QAGI,OAAO,EAAE0C,OAHb;QAII,YAAY,EAAE,KAAK2kB,iBAJvB;QAKI,QAAQ,EAAE,KAAKC,aALnB;QAMI,OAAO,EAAE,KAAKjnB,KAAL,CAAW0I,KAAX,CAAiBrG,OAAO,CAACmS,UAAzB,KAAwC,EANrD;QAOI,SAAS,EAAEiH;MAPf,EADJ;IAWH,CAjBgC,CAArC;;IAmBA,oBACI,oBAAC,aAAD;MACI,MAAM,eACF,oBAAC,sBAAD;QACI,EAAE,EAAC,2BADP;QAEI,cAAc,EAAC;MAFnB,EAFR;MAOI,OAAO,eACH,oBAAC,sBAAD;QACI,EAAE,EAAC,wBADP;QAEI,cAAc,EAAC;MAFnB,EARR;MAaI,OAAO,EAAE,MAAM,KAAKzb,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB,GAA6B,4BAb1C;MAcI,WAAW,EAAC,iBAdhB;MAeI,SAAS,eACL,oBAAC,sBAAD;QACI,EAAE,EAAC,0BADP;QAEI,cAAc,EAAC;MAFnB,EAhBR;MAqBI,eAAe,eACX,oBAAC,yCAAD;QACI,EAAE,EAAC,gCADP;QAEI,cAAc,EAAC;MAFnB,EAtBR;MA2BI,QAAQ,eACJ,oBAAC,sBAAD;QACI,EAAE,EAAC,yBADP;QAEI,cAAc,EAAC,gKAFnB;QAGI,MAAM,EAAE;UACJqc,YAAY,eACR;YACI,MAAM,EAAC,QADX;YAEI,GAAG,EAAC,qBAFR;YAGI,IAAI,EAAC;UAHT,gBAKI,oBAAC,sBAAD;YACI,EAAE,EAAC,sCADP;YAEI,cAAc,EAAC;UAFnB,EALJ,CAFA;UAaJ/J,YAAY,eACR;YACI,MAAM,EAAC,QADX;YAEI,GAAG,EAAC,qBAFR;YAGI,IAAI,EAAC;UAHT,gBAKI,oBAAC,sBAAD;YACI,EAAE,EAAC,sCADP;YAEI,cAAc,EAAC;UAFnB,EALJ;QAdA;MAHZ,EA5BR;MA2DI,iBAAiB,EAAE7P,6BAAA,CAAsB,2BAAtB,EAAmD,uBAAnD,CA3DvB;MA4DI,OAAO,EAAE,KAAK5C,KAAL,CAAWuD;IA5DxB,GA8DMxB,MAAD,IAAoB;MACjB,MAAMuB,QAAQ,GAAGvC,QAAQ,CAACgB,MAAD,CAAzB;MACA,OAAO,CAACuB,QAAD,EAAWA,QAAQ,CAACO,MAAT,GAAkB,CAA7B,CAAP;IACH,CAjEL,CADJ;EAqEH;;AAhHqE;;kCAArDkjB;EAfjBhmB;EACAwC;EAGA4jB;EACAphB;IAGIihB;IAGAC;;;;AClCR;AACA;AAEA;AACA;AAEA;AACA;AACA;AAIA;;AAaA,SAASpc,kCAAT,CAAyBrK,KAAzB,EAA6CoQ,QAA7C,EAA8D;EAC1D,MAAMuW,4BAA4B,GAAGxK,8CAAmB,CAACnc,KAAD,EAAQoQ,QAAQ,CAACjR,IAAT,CAAcwG,EAAtB,EAA0BwK,uFAA1B,CAAxD;EAEA,OAAO;IACHwW;EADG,CAAP;AAGH;;AAED,SAAS/b,qCAAT,CAA4BC,QAA5B,EAA+D;EAC3D,OAAO;IACHtF,OAAO,EAAE0E,4BAAkB,CAA+C;MACtEuc,iBADsE;MAEtEC,aAAaA,EAAAA,kCAAAA;IAFyD,CAA/C,EAGxB5b,QAHwB;EADxB,CAAP;AAMH;;AAED,yDAAeb,cAAO,CAACK,kCAAD,EAAkBO,qCAAlB,CAAP,CAA6C2b,iBAA7C,CAAf;;;;;;;AC1CA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,MAAMM,YAAY,GAAG,GAArB;AACA,MAAMC,WAAW,GAAG,GAApB;AAEe,MAAMC,eAAN,SAA8BnoB,mBAA9B,CAAkD;EA4C7D4D,WAAW,CAAChD,KAAD,EAAQ;IACf,MAAMA,KAAN;;IADe,6DAMIqC,OAAD,IAAa;MAC/B,OAAO;QACHsD,WAAW,EAAEtD,OAAO,CAACK,YAAR,IAAwB,EADlC;QAEHgD,WAAW,EAAErD,OAAO,CAACqD,WAAR,IAAuB,EAFjC;QAGHihB,OAAO,EAAEtkB,OAAO,CAACskB,OAAR,IAAmB,EAHzB;QAIHhL,GAAG,EAAEtZ,OAAO,CAACsZ,GAAR,IAAe,EAJjB;QAKH6L,MAAM,EAAEnlB,OAAO,CAACmlB,MAAR,IAAkBH,YALvB;QAMH5hB,QAAQ,EAAEpD,OAAO,CAACoD,QAAR,IAAoB,EAN3B;QAOHgiB,OAAO,EAAEplB,OAAO,CAAC6b,QAAR,IAAoB,EAP1B;QAQHwJ,YAAY,EAAErlB,OAAO,CAACC,aAAR,IAAyB,KARpC;QASHqlB,gBAAgB,EAAEtlB,OAAO,CAACwkB,kBAAR,IAA8B,EAT7C;QAUHe,uBAAuB,EAAEvlB,OAAO,CAACwlB,kBAAR,IAA8B,EAVpD;QAWHzP,MAAM,EAAE,KAXL;QAYHgG,WAAW,EAAE;MAZV,CAAP;IAcH,CArBkB;;IAAA,sDAuBHnb,CAAD,IAAO;MAClBA,CAAC,CAAC2D,cAAF;;MAEA,IAAI,KAAKpG,KAAL,CAAW4X,MAAf,EAAuB;QACnB;MACH;;MAED,KAAKlV,QAAL,CAAc;QACVkV,MAAM,EAAE,IADE;QAEVgG,WAAW,EAAE;MAFH,CAAd;MAKA,IAAI+B,WAAW,GAAG,KAAK3f,KAAL,CAAWmmB,OAAX,CAAmBpY,IAAnB,GAA0BlL,WAA1B,EAAlB;;MACA,IAAI8c,WAAW,CAACta,OAAZ,CAAoB,GAApB,MAA6B,CAAjC,EAAoC;QAChCsa,WAAW,GAAGA,WAAW,CAAC2H,MAAZ,CAAmB,CAAnB,CAAd;MACH;;MAED,MAAMzlB,OAAO,GAAG;QACZK,YAAY,EAAE,KAAKlC,KAAL,CAAWmF,WADb;QAEZD,WAAW,EAAE,KAAKlF,KAAL,CAAWkF,WAFZ;QAGZihB,OAAO,EAAExG,WAHG;QAIZxE,GAAG,EAAE,KAAKnb,KAAL,CAAWmb,GAAX,CAAepN,IAAf,EAJO;QAKZiZ,MAAM,EAAE,KAAKhnB,KAAL,CAAWgnB,MALP;QAMZ/hB,QAAQ,EAAE,KAAKjF,KAAL,CAAWiF,QANT;QAOZyY,QAAQ,EAAE,KAAK1d,KAAL,CAAWinB,OAPT;QAQZnlB,aAAa,EAAE,KAAK9B,KAAL,CAAWknB,YARd;QASZzlB,OAAO,EAAE,KAAKjC,KAAL,CAAWL,IAAX,CAAgBwG;MATb,CAAhB;;MAYA,IAAI9D,OAAO,CAACC,aAAZ,EAA2B;QACvBD,OAAO,CAACwlB,kBAAR,GAA6B,KAAKrnB,KAAL,CAAWonB,uBAAxC;QACAvlB,OAAO,CAACwkB,kBAAR,GAA6B,KAAKrmB,KAAL,CAAWmnB,gBAAxC;MACH;;MAED,IAAI,CAACtlB,OAAO,CAACskB,OAAb,EAAsB;QAClB,KAAKzjB,QAAL,CAAc;UACVkV,MAAM,EAAE,KADE;UAEVgG,WAAW,eACP,oBAAC,sBAAD;YACI,EAAE,EAAC,6BADP;YAEI,cAAc,EAAC;UAFnB;QAHM,CAAd;QAUA;MACH;;MAED,IAAI/b,OAAO,CAACskB,OAAR,CAAgB9gB,OAAhB,CAAwB,GAAxB,MAAiC,CAArC,EAAwC;QACpC,KAAK3C,QAAL,CAAc;UACVkV,MAAM,EAAE,KADE;UAEVgG,WAAW,eACP,oBAAC,sBAAD;YACI,EAAE,EAAC,iCADP;YAEI,cAAc,EAAC;UAFnB;QAHM,CAAd;QAUA;MACH;;MAED,IAAI/b,OAAO,CAACskB,OAAR,CAAgB9gB,OAAhB,CAAwB,GAAxB,MAAiC,CAAC,CAAtC,EAAyC;QACrC,KAAK3C,QAAL,CAAc;UACVkV,MAAM,EAAE,KADE;UAEVgG,WAAW,eACP,oBAAC,sBAAD;YACI,EAAE,EAAC,iCADP;YAEI,cAAc,EAAC;UAFnB;QAHM,CAAd;QASA;MACH;;MAED,IAAI/b,OAAO,CAACskB,OAAR,CAAgB9iB,MAAhB,GAAyByE,qEAAzB,IACAjG,OAAO,CAACskB,OAAR,CAAgB9iB,MAAhB,GAAyByE,qEAD7B,EAC2D;QACvD,KAAKpF,QAAL,CAAc;UACVkV,MAAM,EAAE,KADE;UAEVgG,WAAW,eACP,oBAAC,sBAAD;YACI,EAAE,EAAC,kCADP;YAEI,cAAc,EAAC,gEAFnB;YAGI,MAAM,EAAE;cACJ6J,GAAG,EAAE3f,qEADD;cAEJ4f,GAAG,EAAE5f,qEAA4B0f;YAF7B;UAHZ;QAHM,CAAd;QAcA;MACH;;MAED,IAAI,CAAC3lB,OAAO,CAACsZ,GAAb,EAAkB;QACd,KAAKzY,QAAL,CAAc;UACVkV,MAAM,EAAE,KADE;UAEVgG,WAAW,eACP,oBAAC,sBAAD;YACI,EAAE,EAAC,yBADP;YAEI,cAAc,EAAC;UAFnB;QAHM,CAAd;QAUA;MACH;;MAED,KAAKpe,KAAL,CAAWqe,MAAX,CAAkBhc,OAAlB,EAA2BmH,IAA3B,CAAgC,MAAM,KAAKtG,QAAL,CAAc;QAACkV,MAAM,EAAE;MAAT,CAAd,CAAtC;IACH,CApIkB;;IAAA,2DAsIEnV,CAAD,IAAO;MACvB,KAAKC,QAAL,CAAc;QACVyC,WAAW,EAAE1C,CAAC,CAACE,MAAF,CAASC;MADZ,CAAd;IAGH,CA1IkB;;IAAA,2DA4IEH,CAAD,IAAO;MACvB,KAAKC,QAAL,CAAc;QACVwC,WAAW,EAAEzC,CAAC,CAACE,MAAF,CAASC;MADZ,CAAd;IAGH,CAhJkB;;IAAA,uDAkJFH,CAAD,IAAO;MACnB,KAAKC,QAAL,CAAc;QACVyjB,OAAO,EAAE1jB,CAAC,CAACE,MAAF,CAASC;MADR,CAAd;IAGH,CAtJkB;;IAAA,mDAwJNH,CAAD,IAAO;MACf,KAAKC,QAAL,CAAc;QACVyY,GAAG,EAAE1Y,CAAC,CAACE,MAAF,CAASC;MADJ,CAAd;IAGH,CA5JkB;;IAAA,sDA8JHH,CAAD,IAAO;MAClB,KAAKC,QAAL,CAAc;QACVskB,MAAM,EAAEvkB,CAAC,CAACE,MAAF,CAASC;MADP,CAAd;IAGH,CAlKkB;;IAAA,wDAoKDH,CAAD,IAAO;MACpB,KAAKC,QAAL,CAAc;QACVuC,QAAQ,EAAExC,CAAC,CAACE,MAAF,CAASC;MADT,CAAd;IAGH,CAxKkB;;IAAA,uDA0KFH,CAAD,IAAO;MACnB,KAAKC,QAAL,CAAc;QACVukB,OAAO,EAAExkB,CAAC,CAACE,MAAF,CAASC;MADR,CAAd;IAGH,CA9KkB;;IAAA,4DAgLGH,CAAD,IAAO;MACxB,KAAKC,QAAL,CAAc;QACVwkB,YAAY,EAAEzkB,CAAC,CAACE,MAAF,CAASwJ;MADb,CAAd;IAGH,CApLkB;;IAAA,gEAsLO1J,CAAD,IAAO;MAC5B,KAAKC,QAAL,CAAc;QACVykB,gBAAgB,EAAE1kB,CAAC,CAACE,MAAF,CAASC;MADjB,CAAd;IAGH,CA1LkB;;IAAA,uEA4LcH,CAAD,IAAO;MACnC,KAAKC,QAAL,CAAc;QACV0kB,uBAAuB,EAAE3kB,CAAC,CAACE,MAAF,CAASC;MADxB,CAAd;IAGH,CAhMkB;;IAGf,KAAK5C,KAAL,GAAa,KAAK2nB,mBAAL,CAAyB,KAAKnoB,KAAL,CAAWooB,cAAX,IAA6B,EAAtD,CAAb;EACH;;EA8LDroB,MAAM,GAAG;IACL,IAAI4nB,gBAAgB,GAAG,IAAvB;IACA,IAAIC,uBAAuB,GAAG,IAA9B;;IAEA,IAAI,KAAKpnB,KAAL,CAAWknB,YAAf,EAA6B;MACzBC,gBAAgB,gBACZ;QAAK,SAAS,EAAC;MAAf,gBACI;QACI,SAAS,EAAC,wBADd;QAEI,OAAO,EAAC;MAFZ,gBAII,oBAAC,sBAAD;QACI,EAAE,EAAC,8BADP;QAEI,cAAc,EAAC;MAFnB,EAJJ,CADJ,eAUI;QAAK,SAAS,EAAC;MAAf,gBACI,oBAAC,8BAAD;QACI,EAAE,EAAC,kBADP;QAEI,IAAI,EAAC,MAFT;QAGI,SAAS,EAAC,MAHd;QAII,SAAS,EAAC,cAJd;QAKI,KAAK,EAAE,KAAKnnB,KAAL,CAAWmnB,gBALtB;QAMI,QAAQ,EAAE,KAAKU,sBANnB;QAOI,WAAW,EAAE;UAACliB,EAAE,EAAEoF,UAAC,CAAC,0CAAD,CAAN;UAAoDG,cAAc,EAAE;QAApE;MAPjB,EADJ,eAUI;QAAK,SAAS,EAAC;MAAf,gBACI,oBAAC,sBAAD;QACI,EAAE,EAAC,mCADP;QAEI,cAAc,EAAC;MAFnB,EADJ,CAVJ,CAVJ,CADJ;MA+BAkc,uBAAuB,gBACnB;QAAK,SAAS,EAAC;MAAf,gBACI;QACI,SAAS,EAAC,wBADd;QAEI,OAAO,EAAC;MAFZ,gBAII,oBAAC,sBAAD;QACI,EAAE,EAAC,qCADP;QAEI,cAAc,EAAC;MAFnB,EAJJ,CADJ,eAUI;QAAK,SAAS,EAAC;MAAf,gBACI,oBAAC,8BAAD;QACI,EAAE,EAAC,aADP;QAEI,IAAI,EAAC,MAFT;QAGI,SAAS,EAAC,KAHd;QAII,SAAS,EAAC,cAJd;QAKI,KAAK,EAAE,KAAKpnB,KAAL,CAAWonB,uBALtB;QAMI,QAAQ,EAAE,KAAKU,6BANnB;QAOI,WAAW,EAAE;UAACniB,EAAE,EAAEoF,UAAC,CAAC,iDAAD,CAAN;UAA2DG,cAAc,EAAE;QAA3E;MAPjB,EADJ,eAUI;QAAK,SAAS,EAAC;MAAf,gBACI,oBAAC,sBAAD;QACI,EAAE,EAAC,0CADP;QAEI,cAAc,EAAC;MAFnB,EADJ,CAVJ,CAVJ,CADJ;IA8BH;;IAED,oBACI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,eAAD,qBACI,oBAAC,qBAAD;MAAM,EAAE,EAAE,MAAM,KAAK1L,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB,GAA6B;IAAvC,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,0BADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CADJ,eAOI,oBAAC,sBAAD;MACI,EAAE,EAAE,KAAKH,KAAL,CAAWoE,MAAX,CAAkB+B,EAD1B;MAEI,cAAc,EAAE,KAAKnG,KAAL,CAAWoE,MAAX,CAAkBsH;IAFtC,EAPJ,CADJ,eAaI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,iBADd;MAEI,QAAQ,EAAE,KAAKmE;IAFnB,gBAII;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,yBADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,EAAE,EAAC,aADP;MAEI,IAAI,EAAC,MAFT;MAGI,SAAS,EAAC,IAHd;MAII,SAAS,EAAC,cAJd;MAKI,KAAK,EAAE,KAAKrP,KAAL,CAAWmF,WALtB;MAMI,QAAQ,EAAE,KAAKsK;IANnB,EADJ,eASI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,8BADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CATJ,CAVJ,CAJJ,eA+BI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,yBADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,EAAE,EAAC,aADP;MAEI,IAAI,EAAC,MAFT;MAGI,SAAS,EAAC,KAHd;MAII,SAAS,EAAC,cAJd;MAKI,KAAK,EAAE,KAAKzP,KAAL,CAAWkF,WALtB;MAMI,QAAQ,EAAE,KAAKwK;IANnB,EADJ,eASI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,8BADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CATJ,CAVJ,CA/BJ,eA0DI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,qBADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,8BAAD;MACI,EAAE,EAAC,SADP;MAEI,IAAI,EAAC,MAFT;MAGI,SAAS,EAAE5H,qEAHf;MAII,SAAS,EAAC,cAJd;MAKI,KAAK,EAAE,KAAK9H,KAAL,CAAWmmB,OALtB;MAMI,QAAQ,EAAE,KAAK4B,aANnB;MAOI,WAAW,EAAE;QAACpiB,EAAE,EAAEoF,UAAC,CAAC,iCAAD,CAAN;QAA2CG,cAAc,EAAE;MAA3D;IAPjB,EADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,0BADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CAVJ,eAgBI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,kCADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CAhBJ,eAsBI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,kCADP;MAEI,cAAc,EAAC,kBAFnB;MAGI,MAAM,EAAE;QACJ4F,IAAI,eACA;UACI,IAAI,EAAC,iGADT;UAEI,MAAM,EAAC,QAFX;UAGI,GAAG,EAAC;QAHR,gBAKI,oBAAC,sBAAD;UACI,EAAE,EAAC,0CADP;UAEI,cAAc,EAAC;QAFnB,EALJ;MAFA;IAHZ,EADJ,CAtBJ,CAVJ,CA1DJ,eAgHI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,iBADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,8BAAD;MACI,EAAE,EAAC,KADP;MAEI,IAAI,EAAC,MAFT;MAGI,SAAS,EAAC,MAHd;MAII,SAAS,EAAC,cAJd;MAKI,KAAK,EAAE,KAAK9Q,KAAL,CAAWmb,GALtB;MAMI,QAAQ,EAAE,KAAK6M,SANnB;MAOI,WAAW,EAAE;QAACriB,EAAE,EAAEoF,UAAC,CAAC,6BAAD,CAAN;QAAuCG,cAAc,EAAE;MAAvD;IAPjB,EADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,sBADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CAVJ,CAVJ,CAhHJ,eA4II;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,oBADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,EAAE,EAAC,QADP;MAEI,SAAS,EAAC,cAFd;MAGI,KAAK,EAAE,KAAKlL,KAAL,CAAWgnB,MAHtB;MAII,QAAQ,EAAE,KAAKiB;IAJnB,gBAMI;MAAQ,KAAK,EAAEpB;IAAf,GACKzkB,6BAAA,CAAsB,yBAAtB,EAAiD,MAAjD,CADL,CANJ,eASI;MAAQ,KAAK,EAAE0kB;IAAf,GACK1kB,6BAAA,CAAsB,wBAAtB,EAAgD,KAAhD,CADL,CATJ,CADJ,eAcI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,yBADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CAdJ,CAVJ,CA5IJ,eA4KI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,sBADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,8BAAD;MACI,EAAE,EAAC,UADP;MAEI,IAAI,EAAC,MAFT;MAGI,SAAS,EAAC,IAHd;MAII,SAAS,EAAC,cAJd;MAKI,KAAK,EAAE,KAAKpC,KAAL,CAAWiF,QALtB;MAMI,QAAQ,EAAE,KAAKqK,cANnB;MAOI,WAAW,EAAE;QAAC3J,EAAE,EAAEoF,UAAC,CAAC,kCAAD,CAAN;QAA4CG,cAAc,EAAE;MAA5D;IAPjB,EADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,2BADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CAVJ,CAVJ,CA5KJ,eAwMI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,qBADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,8BAAD;MACI,EAAE,EAAC,SADP;MAEI,IAAI,EAAC,MAFT;MAGI,SAAS,EAAC,MAHd;MAII,SAAS,EAAC,cAJd;MAKI,KAAK,EAAE,KAAKlL,KAAL,CAAWinB,OALtB;MAMI,QAAQ,EAAE,KAAK1B,aANnB;MAOI,WAAW,EAAE;QAAC5f,EAAE,EAAEoF,UAAC,CAAC,iCAAD,CAAN;QAA2CG,cAAc,EAAE;MAA3D;IAPjB,EADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,0BADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CAVJ,CAVJ,CAxMJ,eAoOI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,wBADd;MAEI,OAAO,EAAC;IAFZ,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,0BADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,EAAE,EAAC,cADP;MAEI,IAAI,EAAC,UAFT;MAGI,OAAO,EAAE,KAAKlL,KAAL,CAAWknB,YAHxB;MAII,QAAQ,EAAE,KAAKgB;IAJnB,EADJ,eAOI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,sBAAD;MACI,EAAE,EAAC,+BADP;MAEI,cAAc,EAAC;IAFnB,EADJ,CAPJ,CAVJ,CApOJ,EA6PKf,gBA7PL,EA8PKC,uBA9PL,eA+PI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,yBAAD;MACI,IAAI,EAAC,WADT;MAEI,MAAM,EAAE,CAAC,KAAK5nB,KAAL,CAAWme,WAAZ,EAAyB,KAAK3d,KAAL,CAAW4d,WAApC;IAFZ,EADJ,eAKI,oBAAC,qBAAD;MACI,SAAS,EAAC,qBADd;MAEI,EAAE,EAAE,MAAM,KAAKpe,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB,GAA6B;IAFrC,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,oBADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CALJ,eAcI,oBAAC,6BAAD;MACI,SAAS,EAAC,iBADd;MAEI,IAAI,EAAC,QAFT;MAGI,QAAQ,EAAE,KAAKK,KAAL,CAAW4X,MAHzB;MAII,YAAY,EAAExV,6BAAA,CAAsB,KAAK5C,KAAL,CAAWuD,OAAX,CAAmB4C,EAAzC,EAA6C,KAAKnG,KAAL,CAAWuD,OAAX,CAAmBmI,cAAhE,CAJlB;MAKI,OAAO,EAAE,KAAKmE,YALlB;MAMI,EAAE,EAAC;IANP,gBAQI,oBAAC,sBAAD;MACI,EAAE,EAAE,KAAK7P,KAAL,CAAW0e,MAAX,CAAkBvY,EAD1B;MAEI,cAAc,EAAE,KAAKnG,KAAL,CAAW0e,MAAX,CAAkBhT;IAFtC,EARJ,CAdJ,EA2BK,KAAK1L,KAAL,CAAWiiB,WA3BhB,CA/PJ,CADJ,CAbJ,CADJ;EA+SH;;AAjmB4D;;gCAA5CsF,8BACE;EAEf;AACR;AACA;EACQ5nB,IAAI,EAAER,wCALS;;EAOf;AACR;AACA;EACQiF,MAAM,EAAEjF,wCAVO;;EAYf;AACR;AACA;EACQuf,MAAM,EAAEvf,wCAfO;;EAiBf;AACR;AACA;EACQoE,OAAO,EAAEpE,wCApBM;;EAsBf;AACR;AACA;EACQ8iB,WAAW,EAAE9iB,sCAzBE;;EA2Bf;AACR;AACA;EACQgf,WAAW,EAAEhf,wCA9BE;;EAgCf;AACR;AACA;EACQipB,cAAc,EAAEjpB,6BAnCD;;EAqCf;AACR;AACA;EACQkf,MAAM,EAAElf,sCAAyB0F;AAxClB;;;;;;ACrBvB;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA,MAAMma,kBAAM,GAAG;EAAC7Y,EAAE,EAAEoF,UAAC,CAAC,kBAAD,CAAN;EAA4BG,cAAc,EAAE;AAA5C,CAAf;AACA,MAAMuT,kBAAM,GAAG;EAAC9Y,EAAE,EAAEoF,UAAC,CAAC,kBAAD,CAAN;EAA4BG,cAAc,EAAE;AAA5C,CAAf;AACA,MAAMwT,mBAAO,GAAG;EAAC/Y,EAAE,EAAEoF,UAAC,CAAC,oBAAD,CAAN;EAA8BG,cAAc,EAAE;AAA9C,CAAhB;AAEe,MAAMid,UAAN,SAAyBvpB,mBAAzB,CAA6C;EAiBxD4D,WAAW,CAAChD,KAAD,EAAQ;IACf,MAAMA,KAAN;;IADe,+CAQN,MAAOqC,OAAP,IAAmB;MAC5B,KAAKa,QAAL,CAAc;QAACib,WAAW,EAAE;MAAd,CAAd;MAEA,MAAM;QAACrX,IAAD;QAAOD;MAAP,IAAgB,MAAM,KAAK7G,KAAL,CAAW+F,OAAX,CAAmB6iB,UAAnB,CAA8BvmB,OAA9B,CAA5B;;MACA,IAAIyE,IAAJ,EAAU;QACNiF,+CAAA,YAAwB,KAAK/L,KAAL,CAAWL,IAAX,CAAgBQ,IAAxC,6DAA+F2G,IAAI,CAACX,EAApG;QACA;MACH;;MAED,IAAIU,KAAJ,EAAW;QACP,KAAK3D,QAAL,CAAc;UAACib,WAAW,EAAEtX,KAAK,CAACG;QAApB,CAAd;MACH;IACJ,CApBkB;;IAGf,KAAKxG,KAAL,GAAa;MACT2d,WAAW,EAAE;IADJ,CAAb;EAGH;;EAgBDpe,MAAM,GAAG;IACL,oBACI,oBAAC,eAAD;MACI,IAAI,EAAE,KAAKC,KAAL,CAAWL,IADrB;MAEI,MAAM,EAAEqf,kBAFZ;MAGI,MAAM,EAAEC,kBAHZ;MAII,OAAO,EAAEC,mBAJb;MAKI,WAAW,EAAE,EALjB;MAMI,MAAM,EAAE,KAAK0J,UANjB;MAOI,WAAW,EAAE,KAAKpoB,KAAL,CAAW2d;IAP5B,EADJ;EAWH;;AAnDuD;;2BAAvCwK,yBACE;EAEf;AACR;AACA;EACQhpB,IAAI,EAAER,6BALS;EAOf4G,OAAO,EAAE5G,0BAAA,CAAgB;IAErB;AACZ;AACA;IACYypB,UAAU,EAAEzpB,sCAAyB0F;EALhB,CAAhB,EAMNA;AAbY;;ACfvB;AACA;AAEA;AACA;AAEA;AAEA;;AAEA,SAASuG,8BAAT,CAA4BC,QAA5B,EAAsC;EAClC,OAAO;IACHtF,OAAO,EAAE0E,4BAAkB,CAAC;MACxBme,UAAUA,EAAAA,+BAAAA;IADc,CAAD,EAExBvd,QAFwB;EADxB,CAAP;AAKH;;AAED,kDAAeb,cAAO,CAAC,IAAD,EAAOY,8BAAP,CAAP,CAAkCud,UAAlC,CAAf;;;;;;;AClBA;AACA;AAEA;AACA;AAMA;AACA;AACA;AACA;AACA;AAEA,MAAM3J,mBAAM,GAAG;EAAC7Y,EAAE,EAAEoF,UAAC,CAAC,mBAAD,CAAN;EAA6BG,cAAc,EAAE;AAA7C,CAAf;AACA,MAAMuT,mBAAM,GAAG;EAAC9Y,EAAE,EAAEoF,UAAC,CAAC,qBAAD,CAAN;EAA+BG,cAAc,EAAE;AAA/C,CAAf;AACA,MAAMwT,oBAAO,GAAG;EAAC/Y,EAAE,EAAEoF,UAAC,CAAC,uBAAD,CAAN;EAAiCG,cAAc,EAAE;AAAjD,CAAhB;AA4Ce,MAAMmd,WAAN,SAA0BzpB,mBAA1B,CAA4D;EAGhE4D,WAAW,CAAChD,KAAD,EAAe;IAC7B,MAAMA,KAAN;;IAD6B;;IAAA,iDAuBZ,MAAOqC,OAAP,IAA2C;MAAA;;MAC5D,KAAKymB,UAAL,GAAkBzmB,OAAlB;;MAEA,6BAAI,KAAK7B,KAAL,CAAWuoB,eAAf,kDAAI,sBAA4B5iB,EAAhC,EAAoC;QAChC9D,OAAO,CAAC8D,EAAR,GAAa,KAAK3F,KAAL,CAAWuoB,eAAX,CAA2B5iB,EAAxC;MACH;;MAED,IAAI,gCAAK3F,KAAL,CAAWuoB,eAAX,kFAA4BpN,GAA5B,MAAoC,KAAKmN,UAAL,CAAgBnN,GAApD,IACA,gCAAKnb,KAAL,CAAWuoB,eAAX,kFAA4BpC,OAA5B,MAAwC,KAAKmC,UAAL,CAAgBnC,OADxD,IAEA,gCAAKnmB,KAAL,CAAWuoB,eAAX,kFAA4BvB,MAA5B,MAAuC,KAAKsB,UAAL,CAAgBtB,MAF3D,EAEmE;QAC/D,KAAK1E,kBAAL;MACH,CAJD,MAIO;QACH,MAAM,KAAKkG,aAAL,EAAN;MACH;IACJ,CArCgC;;IAAA,wDAuCL,MAAY;MACpC,KAAK9lB,QAAL,CAAc;QAAC0c,gBAAgB,EAAE;MAAnB,CAAd;IACH,CAzCgC;;IAAA,2DA2CF,MAAY;MACvC,KAAK1c,QAAL,CAAc;QAAC0c,gBAAgB,EAAE;MAAnB,CAAd;IACH,CA7CgC;;IAAA,mDA+CV,YAA2B;MAC9C,KAAK1c,QAAL,CAAc;QAACib,WAAW,EAAE;MAAd,CAAd;MAEA,MAAM;QAACrX,IAAD;QAAOD;MAAP,IAAgB,MAAM,KAAK7G,KAAL,CAAW+F,OAAX,CAAmBkjB,WAAnB,CAA+B,KAAKH,UAApC,CAA5B;;MAEA,IAAIhiB,IAAJ,EAAU;QACNiF,+CAAA,YAAwB,KAAK/L,KAAL,CAAWL,IAAX,CAAgBQ,IAAxC;QACA;MACH;;MAED,KAAK+C,QAAL,CAAc;QAAC0c,gBAAgB,EAAE;MAAnB,CAAd;;MAEA,IAAI/Y,KAAJ,EAAW;QACP,KAAK3D,QAAL,CAAc;UAACib,WAAW,EAAEtX,KAAK,CAACG;QAApB,CAAd;MACH;IACJ,CA9DgC;;IAAA,iDAgEZ,MAAmB;MACpC,MAAMgc,aAAa,gBACf,oBAAC,sBAAD;QACI,EAAE,EAAC,uBADP;QAEI,cAAc,EAAC;MAFnB,EADJ;MAOA,MAAMC,YAAY,gBACd,oBAAC,sBAAD;QACI,EAAE,EAAC,wBADP;QAEI,cAAc,EAAC;MAFnB,EADJ;MAOA,MAAMC,cAAc,gBAChB,oBAAC,sBAAD;QACI,EAAE,EAAC,yBADP;QAEI,cAAc,EAAC;MAFnB,EADJ;MAOA,oBACI,oBAAC,4BAAD;QACI,KAAK,EAAED,YADX;QAEI,OAAO,EAAEC,cAFb;QAGI,iBAAiB,EAAEF,aAHvB;QAII,IAAI,EAAE,KAAKxiB,KAAL,CAAWof,gBAJrB;QAKI,SAAS,EAAE,KAAKoJ,aALpB;QAMI,QAAQ,EAAE,KAAK7F;MANnB,EADJ;IAUH,CAhGgC;;IAE7B,KAAK2F,UAAL,GAAkBI,SAAlB;IAEA,KAAK1oB,KAAL,GAAa;MACTuoB,eAAe,EAAE,IADR;MAETnJ,gBAAgB,EAAE,KAFT;MAGTzB,WAAW,EAAE;IAHJ,CAAb;EAKH;;EAEMjV,iBAAiB,GAAS;IAC7B,IAAI,KAAKlJ,KAAL,CAAWkS,cAAf,EAA+B;MAC3B,KAAKlS,KAAL,CAAW+F,OAAX,CAAmB2U,qBAAnB,CAAyC,KAAK1a,KAAL,CAAWL,IAAX,CAAgBwG,EAAzD,EAA6DqD,IAA7D,CACI,MAAM;QACF,KAAKtG,QAAL,CAAc;UACV6lB,eAAe,EAAElnB,MAAM,CAACC,MAAP,CAAc,KAAK9B,KAAL,CAAWe,QAAzB,EAAmCgB,MAAnC,CAA2CM,OAAD,IAAaA,OAAO,CAAC8D,EAAR,KAAe,KAAKnG,KAAL,CAAWmpB,SAAjF,EAA4F,CAA5F;QADP,CAAd;MAGH,CALL;IAOH;EACJ;;EA6EMppB,MAAM,GAAgB;IACzB,IAAI,CAAC,KAAKS,KAAL,CAAWuoB,eAAhB,EAAiC;MAC7B,oBAAO,oBAAC,6BAAD,OAAP;IACH;;IAED,oBACI,oBAAC,eAAD;MACI,IAAI,EAAE,KAAK/oB,KAAL,CAAWL,IADrB;MAEI,MAAM,EAAEqf,mBAFZ;MAGI,MAAM,EAAEC,mBAHZ;MAII,OAAO,EAAEC,oBAJb;MAKI,WAAW,EAAE,KAAK+C,WAAL,EALjB;MAMI,MAAM,EAAE,KAAKgH,WANjB;MAOI,WAAW,EAAE,KAAKzoB,KAAL,CAAW2d,WAP5B;MAQI,cAAc,EAAE,KAAK3d,KAAL,CAAWuoB;IAR/B,EADJ;EAYH;;AAtHsE;;4BAAtDF;EAhCjBM;EAMApjB;IAKI2U;IAKAuO;;EAMJ/W;;;;;;;ACpDJ;AACA;AAEA;AACA;AAEA;AACA;AACA;AAKA;;AAWA,SAASrH,4BAAT,CAAyBrK,KAAzB,EAA6CoQ,QAA7C,EAA8D;EAC1D,MAAM9F,MAAM,GAAGH,6BAAS,CAACnK,KAAD,CAAxB;EACA,MAAM2oB,SAAS,GAAI,IAAIrY,eAAJ,CAAoBF,QAAQ,CAACG,QAAT,CAAkBvM,MAAtC,CAAD,CAAgDwM,GAAhD,CAAoD,IAApD,CAAlB;EACA,MAAMkB,cAAc,GAAGpH,MAAM,CAAC+H,cAAP,KAA0B,MAAjD;EAEA,OAAO;IACHsW,SADG;IAEHpoB,QAAQ,EAAED,WAAW,CAACN,KAAD,CAFlB;IAGH0R;EAHG,CAAP;AAKH;;AAED,SAAS9G,+BAAT,CAA4BC,QAA5B,EAA+D;EAC3D,OAAO;IACHtF,OAAO,EAAE0E,4BAAkB,CAA+C;MACtEiQ,qBADsE;MAEtEuO,WAAWA,EAAAA,gCAAAA;IAF2D,CAA/C,EAGxB5d,QAHwB;EADxB,CAAP;AAMH;;AAED,mDAAeb,cAAO,CAACK,4BAAD,EAAkBO,+BAAlB,CAAP,CAA6Cyd,WAA7C,CAAf;;;;;;;;;;;;AC7CA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEe,MAAMQ,kBAAN,SAAiCjqB,mBAAjC,CAAqD;EAC5C,WAATM,SAAS,GAAG;IACnB,OAAO;MACHC,IAAI,EAAER,6BADH;MAEH4R,QAAQ,EAAE5R,6BAFP;MAGH4B,QAAQ,EAAE5B,6BAHP;MAIH8B,SAAS,EAAE9B,6BAJR;MAKHwB,aAAa,EAAExB,6BALZ;MAMH0B,aAAa,EAAE1B,6BANZ;MAOHyJ,IAAI,EAAEzJ,6BAAgBS;IAPnB,CAAP;EASH;;EAEDoD,WAAW,CAAChD,KAAD,EAAQ;IACf,MAAMA,KAAN;;IADe,2DAgBDiD,CAAD,IAAO;MACpB,IAAIA,CAAC,CAAC4Z,GAAF,KAAU,OAAd,EAAuB;QACnB9Q,+CAAA,CAAoB,MAAM,KAAK/L,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB,GAA6B,gBAA7B,GAAgD,KAAKK,KAAL,CAAW4N,IAA/E;MACH;IACJ,CApBkB;;IAEf,KAAK5N,KAAL,GAAa;MACT4N,IAAI,EAAG,IAAI0C,eAAJ,CAAoB,KAAK9Q,KAAL,CAAW+Q,QAAX,CAAoBvM,MAAxC,CAAD,CAAkDwM,GAAlD,CAAsD,MAAtD,CADG;MAET7K,EAAE,EAAG,IAAI2K,eAAJ,CAAoB,KAAK9Q,KAAL,CAAW+Q,QAAX,CAAoBvM,MAAxC,CAAD,CAAkDwM,GAAlD,CAAsD,IAAtD;IAFK,CAAb;EAIH;;EAED9H,iBAAiB,GAAG;IAChBogB,MAAM,CAACC,gBAAP,CAAwB,UAAxB,EAAoC,KAAKC,cAAzC;EACH;;EAEDC,oBAAoB,GAAG;IACnBH,MAAM,CAACI,mBAAP,CAA2B,UAA3B,EAAuC,KAAKF,cAA5C;EACH;;EAQDzpB,MAAM,GAAG;IACL,IAAI4pB,UAAU,GAAG,IAAjB;IACA,IAAIllB,QAAQ,GAAG,IAAf;IACA,IAAImlB,SAAS,GAAG,IAAhB;IAEA,MAAMvnB,OAAO,GAAG,KAAKrC,KAAL,CAAWe,QAAX,CAAoB,KAAKP,KAAL,CAAW2F,EAA/B,CAAhB;IACA,MAAM0jB,YAAY,GAAG,KAAK7pB,KAAL,CAAWW,aAAX,CAAyB,KAAKH,KAAL,CAAW2F,EAApC,CAArB;IACA,MAAM2jB,YAAY,GAAG,KAAK9pB,KAAL,CAAWa,aAAX,CAAyB,KAAKL,KAAL,CAAW2F,EAApC,CAArB;IACA,MAAMod,QAAQ,GAAG,KAAKvjB,KAAL,CAAWiB,SAAX,CAAqB,KAAKT,KAAL,CAAW2F,EAAhC,CAAjB;IACA,MAAMZ,GAAG,GAAG,KAAKvF,KAAL,CAAW4I,IAAX,CAAgB,KAAKpI,KAAL,CAAW2F,EAA3B,CAAZ;;IAEA,IAAI,KAAK3F,KAAL,CAAW4N,IAAX,KAAoB9F,2EAApB,IAAsDjG,OAA1D,EAAmE;MAC/D,MAAMykB,YAAY,GAAGzkB,OAAO,CAACqE,KAA7B;MAEAijB,UAAU,gBACN,oBAAC,sBAAD;QACI,EAAE,EAAE,2BADR;QAEI,cAAc,EAAC;MAFnB,EADJ;MAMAllB,QAAQ,gBACJ,4CACI,oBAAC,sBAAD;QACI,EAAE,EAAC,sBADP;QAEI,cAAc,EAAC,sMAFnB;QAGI,MAAM,EAAE;UACJ6M,IAAI,EAAG0Y,GAAD,iBACF;YACI,IAAI,EAAC,+EADT;YAEI,QAAQ,EAAC,YAFb;YAGI,MAAM,EAAC,QAHX;YAII,GAAG,EAAC;UAJR,GAMKA,GANL;QAFA;MAHZ,EADJ,CADJ;MAoBAJ,SAAS,gBACL;QAAG,SAAS,EAAC;MAAb,gBACI,oBAAC,yCAAD;QACI,EAAE,EAAC,mBADP;QAEI,cAAc,EAAC,oBAFnB;QAGI,MAAM,EAAE;UACJljB,KAAK,EAAEogB;QADH;MAHZ,EADJ,eAQI,oBAAC,QAAD;QACI,KAAK,EAAEA;MADX,EARJ,CADJ;IAcH,CA3CD,MA2CO,IAAI,KAAKtmB,KAAL,CAAW4N,IAAX,KAAoB9F,6FAApB,IAA+DuhB,YAAnE,EAAiF;MACpF,MAAMK,iBAAiB,GAAG7hB,0BAAU,KAAK,SAAf,GAA2BwhB,YAAY,CAAC1jB,EAAlE;MAEAwjB,UAAU,gBACN,oBAAC,sBAAD;QACI,EAAE,EAAE,oCADR;QAEI,cAAc,EAAC;MAFnB,EADJ;MAMAllB,QAAQ,gBACJ,4CACI,oBAAC,sBAAD;QACI,EAAE,EAAC,+BADP;QAEI,cAAc,EAAC,qHAFnB;QAGI,MAAM,EAAE;UACJ6M,IAAI,EAAG0Y,GAAD,iBACF;YACI,IAAI,EAAC,kFADT;YAEI,QAAQ,EAAC,YAFb;YAGI,MAAM,EAAC,QAHX;YAII,GAAG,EAAC;UAJR,GAMKA,GANL;QAFA;MAHZ,EADJ,CADJ;MAoBAJ,SAAS,gBACL;QAAG,SAAS,EAAC;MAAb,gBACI,oBAAC,yCAAD;QACI,EAAE,EAAC,0BADP;QAEI,cAAc,EAAC,gBAFnB;QAGI,MAAM,EAAE;UACJjO,GAAG,EAAE,MAAMuO,iBAAN,GAA0B;QAD3B;MAHZ,EADJ,eAQI,oBAAC,QAAD;QACI,KAAK,EAAEA;MADX,EARJ,CADJ;IAcH,CA3CM,MA2CA,IAAI,KAAK1pB,KAAL,CAAW4N,IAAX,KAAoB9F,6FAApB,IAA+DwhB,YAAnE,EAAiF;MACpF,MAAMM,iBAAiB,GAAGN,YAAY,CAACpjB,KAAvC;MAEAijB,UAAU,gBACN,oBAAC,sBAAD;QACI,EAAE,EAAE,oCADR;QAEI,cAAc,EAAC;MAFnB,EADJ;MAMAllB,QAAQ,gBACJ,4CACI,oBAAC,sBAAD;QACI,EAAE,EAAC,+BADP;QAEI,cAAc,EAAC,iNAFnB;QAGI,MAAM,EAAE;UACJ6M,IAAI,EAAG0Y,GAAD,iBACF;YACI,IAAI,EAAC,kFADT;YAEI,QAAQ,EAAC,YAFb;YAGI,MAAM,EAAC,QAHX;YAII,GAAG,EAAC;UAJR,GAMKA,GANL;QAFA;MAHZ,EADJ,CADJ;MAoBAJ,SAAS,gBACL;QAAG,SAAS,EAAC;MAAb,gBACI,oBAAC,yCAAD;QACI,EAAE,EAAC,4BADP;QAEI,cAAc,EAAC,oBAFnB;QAGI,MAAM,EAAE;UACJljB,KAAK,EAAE0jB;QADH;MAHZ,EADJ,eAQI,oBAAC,QAAD;QACI,KAAK,EAAEA;MADX,EARJ,CADJ;IAcH,CA3CM,MA2CA,IAAI,KAAK5pB,KAAL,CAAW4N,IAAX,KAAoB9F,+EAApB,IAAwDib,QAA5D,EAAsE;MACzE,MAAM+G,aAAa,GAAG/G,QAAQ,CAACpd,EAA/B;MACA,MAAMokB,cAAc,GAAGhH,QAAQ,CAACG,aAAhC;MAEAiG,UAAU,gBACN,oBAAC,sBAAD;QACI,EAAE,EAAE,6BADR;QAEI,cAAc,EAAC;MAFnB,EADJ;MAOAllB,QAAQ,GAAG,EAAX;MACAA,QAAQ,CAACgD,IAAT,eACI;QAAG,GAAG,EAAC;MAAP,gBACI,oBAAC,sBAAD;QACI,EAAE,EAAC,wBADP;QAEI,cAAc,EAAC,+LAFnB;QAGI,MAAM,EAAE;UACJ6J,IAAI,EAAG0Y,GAAD,iBACF;YACI,IAAI,EAAC,uEADT;YAEI,QAAQ,EAAC,YAFb;YAGI,MAAM,EAAC,QAHX;YAII,GAAG,EAAC;UAJR,GAMKA,GANL;QAFA;MAHZ,EADJ,CADJ;MAoBAvlB,QAAQ,CAACgD,IAAT,eACI;QAAG,GAAG,EAAC;MAAP,gBACI,oBAAC,yCAAD;QACI,EAAE,EAAC,wBADP;QAEI,cAAc,EAAC,qBAFnB;QAGI,MAAM,EAAE;UACJtB,EAAE,EAAEmkB;QADA;MAHZ,EADJ,eAQI,oBAAC,QAAD;QACI,SAAS,EAAC,6BADd;QAEI,cAAc,EAAC,gBAFnB;QAGI,KAAK,EAAEA;MAHX,EARJ,eAaI,+BAbJ,eAcI,oBAAC,yCAAD;QACI,EAAE,EAAC,4BADP;QAEI,cAAc,EAAC,6BAFnB;QAGI,MAAM,EAAE;UACJE,MAAM,EAAED;QADJ;MAHZ,EAdJ,eAqBI,oBAAC,QAAD;QACI,SAAS,EAAC,iCADd;QAEI,cAAc,EAAC,oBAFnB;QAGI,KAAK,EAAEA;MAHX,EArBJ,CADJ;MA8BA9lB,QAAQ,CAACgD,IAAT,eACI;QAAG,GAAG,EAAC;MAAP,gBACI,oBAAC,sBAAD;QACI,EAAE,EAAC,2BADP;QAEI,cAAc,EAAC;MAFnB,EADJ,CADJ;MASAmiB,SAAS,gBACL;QAAG,SAAS,EAAC;MAAb,gBACI,oBAAC,yCAAD;QACI,EAAE,EAAC,mBADP;QAEI,cAAc,EAAC,mBAFnB;QAGI,MAAM,EAAE;UACJjO,GAAG,EAAE4H,QAAQ,CAAC5C,aAAT,CAAuBF,IAAvB,CAA4B,IAA5B;QADD;MAHZ,EADJ,CADJ;IAWH,CAlFM,MAkFA,IAAI,KAAKjgB,KAAL,CAAW4N,IAAX,KAAoB9F,mEAApB,IAAkD/C,GAAtD,EAA2D;MAC9D,MAAMmlB,QAAQ,GAAI,IAAI5Z,eAAJ,CAAoB,KAAK9Q,KAAL,CAAW+Q,QAAX,CAAoBvM,MAAxC,CAAD,CAAkDwM,GAAlD,CAAsD,OAAtD,CAAjB;MAEA2Y,UAAU,gBACN,oBAAC,sBAAD;QACI,EAAE,EAAC,oBADP;QAEI,cAAc,EAAC;MAFnB,EADJ;MAMAllB,QAAQ,gBACJ,4CACI,oBAAC,yCAAD;QACI,EAAE,EAAC,0BADP;QAEI,cAAc,EAAC,sNAFnB;QAGI,MAAM,EAAE;UACJkmB,OAAO,EAAEplB,GAAG,CAAC7C,YAAJ,IAAoB6C,GAAG,CAACE;QAD7B;MAHZ,EADJ,CADJ;MAWAmkB,SAAS,gBACL;QAAG,SAAS,EAAC;MAAb,gBACI,oBAAC,yCAAD;QACI,EAAE,EAAC,4BADP;QAEI,cAAc,EAAC,oBAFnB;QAGI,MAAM,EAAE;UACJljB,KAAK,EAAEgkB;QADH;MAHZ,EADJ,eAQI,oBAAC,QAAD;QACI,KAAK,EAAEA;MADX,EARJ,eAWI,+BAXJ,eAYI,+BAZJ,eAaI,oBAAC,sBAAD;QACI,EAAE,EAAC,oCADP;QAEI,cAAc,EAAC,mIAFnB;QAGI,MAAM,EAAE;UACJpZ,IAAI,EAAG0Y,GAAD,iBACF;YACI,IAAI,EAAC,gDADT;YAEI,QAAQ,EAAC,YAFb;YAGI,MAAM,EAAC,QAHX;YAII,GAAG,EAAC;UAJR,GAMKA,GANL;QAFA;MAHZ,EAbJ,CADJ;IAgCH,CApDM,MAoDA;MACHje,qDAAA,uBAAsCqd,oEAAtC;MACA,OAAO,EAAP;IACH;;IAED,oBACI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,eAAD,qBACI,oBAAC,qBAAD;MAAM,EAAE,EAAE,MAAM,KAAKppB,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB,GAA6B,gBAA7B,GAAgD,KAAKK,KAAL,CAAW4N;IAArE,GACKub,UADL,CADJ,eAII,oBAAC,sBAAD;MACI,EAAE,EAAC,kBADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,eAUI;MAAK,SAAS,EAAC;IAAf,gBACI;MACI,SAAS,EAAC,uBADd;MAEI,EAAE,EAAC;IAFP,gBAII,oBAAC,sBAAD;MACI,EAAE,EAAC,yBADP;MAEI,cAAc,EAAC;IAFnB,EAJJ,CADJ,EAUKllB,QAVL,EAWKmlB,SAXL,eAYI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,qBAAD;MACI,SAAS,EAAC,iBADd;MAEI,IAAI,EAAC,QAFT;MAGI,EAAE,EAAE,MAAM,KAAK5pB,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB,GAA6B,gBAA7B,GAAgD,KAAKK,KAAL,CAAW4N,IAHnE;MAII,EAAE,EAAC;IAJP,gBAMI,oBAAC,sBAAD;MACI,EAAE,EAAC,mBADP;MAEI,cAAc,EAAC;IAFnB,EANJ,CADJ,CAZJ,CAVJ,CADJ;EAuCH;;AAjW+D;;ACfpE;AACA;AAEA;AAEA;AACA;AAEA;;AAEA,SAASvD,mCAAT,CAAyBrK,KAAzB,EAAgC;EAC5B,OAAO;IACHO,QAAQ,EAAED,WAAW,CAACN,KAAD,CADlB;IAEHS,SAAS,EAAED,YAAY,CAACR,KAAD,CAFpB;IAGHG,aAAa,EAAEJ,gBAAgB,CAACC,KAAD,CAH5B;IAIHK,aAAa,EAAED,gBAAgB,CAACJ,KAAD,CAJ5B;IAKHoI,IAAI,EAAE6H,wCAAc,CAACjQ,KAAD;EALjB,CAAP;AAOH;;AAED,0DAAegK,cAAO,CAACK,mCAAD,CAAP,CAAyBwe,kBAAzB,CAAf;;;;;;;;;;;;;;;ACpBA;AACA;AAEA;AACA;AAUA;AACA;AACA;AACA;;AAcA,MAAM4B,YAAY,GAAG;EAAA,IAAC;IAACC,SAAS,EAAEC,SAAZ;IAAuBC;EAAvB,CAAD;EAAA,IAAuCC,IAAvC;;EAAA,oBACjB,oBAAC,0BAAD,oBACQA,IADR;IAEI,MAAM,EAAGrrB,KAAD,iBACJ,oBAAC,SAAD,oBACQorB,UADR,EAEQprB,KAFR;EAHR,GADiB;AAAA,CAArB;;;EAXIkrB;EACAE;IACI7nB;IACAxC;;EAKJuqB;;AA8DW,MAAMC,iBAAN,SAAgCnsB,mBAAhC,CAAkE;EAC7E4D,WAAW,CAAChD,KAAD,EAAe;IACtB,MAAMA,KAAN;IACA,KAAKQ,KAAL,GAAa;MACT+C,OAAO,EAAE;IADA,CAAb;EAGH;;EAED2F,iBAAiB,GAAG;IAChB,IAAI,KAAKlJ,KAAL,CAAWkS,cAAf,EAA+B;MAAA;;MAC3B,KAAKlS,KAAL,CAAW+F,OAAX,CAAmB0U,8BAAnB,qBAAkD,KAAKza,KAAL,CAAWL,IAA7D,qDAAkD,iBAAiBwG,EAAnE,EAAuEqD,IAAvE,CACI,MAAM,KAAKtG,QAAL,CAAc;QAACK,OAAO,EAAE;MAAV,CAAd,CADV;IAGH;EACJ;;EAEDxD,MAAM,GAAG;IACL,MAAMqrB,UAAU,GAAG;MACf7nB,OAAO,EAAE,KAAK/C,KAAL,CAAW+C,OADL;MAEfxC,QAAQ,EAAE,KAAKf,KAAL,CAAWe,QAAX,IAAuB,EAFlB;MAGf2H,KAAK,EAAE,KAAK1I,KAAL,CAAW0I,KAHH;MAIf/I,IAAI,EAAE,KAAKK,KAAL,CAAWL,IAJF;MAKfuI,IAAI,EAAE,KAAKlI,KAAL,CAAWkI;IALF,CAAnB;IAOA,oBACI,8CACI,oBAAC,2BAAD,qBACI,oBAAC,0BAAD;MACI,KAAK,EAAE,IADX;MAEI,IAAI,YAAK,KAAKlI,KAAL,CAAW6I,KAAX,CAAiB8S,GAAtB,MAFR;MAGI,MAAM,EAAE,mBAAO,oBAAC,6BAAD;QAAU,EAAE,YAAK,KAAK3b,KAAL,CAAW6I,KAAX,CAAiB8S,GAAtB;MAAZ;IAHnB,EADJ,eAMI,oBAAC,YAAD;MACI,UAAU,EAAEyP,UADhB;MAEI,IAAI,YAAK,KAAKprB,KAAL,CAAW6I,KAAX,CAAiB8S,GAAtB,eAFR;MAGI,SAAS,EAAEoL,kBAAiBA;IAHhC,EANJ,eAWI,oBAAC,YAAD;MACI,UAAU,EAAEqE,UADhB;MAEI,IAAI,YAAK,KAAKprB,KAAL,CAAW6I,KAAX,CAAiB8S,GAAtB,SAFR;MAGI,SAAS,EAAEgN,WAAUA;IAHzB,EAXJ,eAgBI,oBAAC,YAAD;MACI,UAAU,EAAEyC,UADhB;MAEI,IAAI,YAAK,KAAKprB,KAAL,CAAW6I,KAAX,CAAiB8S,GAAtB,UAFR;MAGI,SAAS,EAAEkN,YAAWA;IAH1B,EAhBJ,eAqBI,oBAAC,YAAD;MACI,UAAU,EAAEuC,UADhB;MAEI,IAAI,YAAK,KAAKprB,KAAL,CAAW6I,KAAX,CAAiB8S,GAAtB,aAFR;MAGI,SAAS,EAAE0N,mBAAkBA;IAHjC,EArBJ,CADJ,CADJ;EA+BH;;AAvD4E;;kCAA5DkC;EA3BjBxqB;EAKA8H;IACI8S;;EAGJ5V;IAKI0U;;EAMJvI;;;ACnFJ;AACA;AAEA;AACA;AAEA;AACA;AACA;AAIA;AAEA;;AAEA,SAASrH,kCAAT,CAAyBrK,KAAzB,EAA6C;EACzC,MAAMsK,MAAM,GAAGH,6BAAS,CAACnK,KAAD,CAAxB;EACA,MAAM0R,cAAc,GAAGpH,MAAM,CAAC+H,cAAP,KAA0B,MAAjD;EAEA,OAAO;IACH9R,QAAQ,EAAEc,MAAM,CAACC,MAAP,CAAchB,WAAW,CAACN,KAAD,CAAzB,CADP;IAEHkI,KAAK,EAAEgU,mCAAQ,CAAClc,KAAD,CAFZ;IAGH0R;EAHG,CAAP;AAKH;;AAED,SAAS9G,qCAAT,CAA4BC,QAA5B,EAA2D;EACvD,OAAO;IACHtF,OAAO,EAAE0E,4BAAkB,CAAC;MACxBgQ,8BAA8BA,EAAAA,8BAAAA;IADN,CAAD,EAExBpP,QAFwB;EADxB,CAAP;AAKH;;AAED,yDAAeb,cAAO,CAACK,kCAAD,EAAkBO,qCAAlB,CAAP,CAA6CmgB,iBAA7C,CAAf;;ACnCA;AACA;AAEA;AACA;AACA;AAEe,MAAME,iBAAN,SAAgCrsB,mBAAhC,CAAoD;EAC3C,WAATM,SAAS,GAAG;IACnB,OAAO;MACHS,IAAI,EAAEhB,wCADH;MAEHkS,KAAK,EAAElS,sCAFJ;MAGHilB,IAAI,EAAEjlB,wCAHH;MAIHusB,UAAU,EAAEvsB,6BAJT;MAKHmE,QAAQ,EAAEnE,4BAAA,CAAkBA,8BAAlB;IALP,CAAP;EAOH;;EAEsB,WAAZ0sB,YAAY,GAAG;IACtB,OAAO;MACHH,UAAU,EAAE,EADT;MAEHpoB,QAAQ,EAAE;IAFP,CAAP;EAIH;;EAEDvD,MAAM,GAAG;IACL,MAAM;MAACI,IAAD;MAAOkR,KAAP;MAAc+S,IAAd;MAAoBsH,UAApB;MAAgCpoB;IAAhC,IAA4C,KAAKtD,KAAvD;IAEA,MAAMsR,IAAI,GAAGoa,UAAU,GAAG,GAAb,GAAmBvrB,IAAhC;IAEA,oBACI;MAAI,SAAS,EAAC;IAAd,gBACI,oBAAC,wBAAD;MACI,EAAE,EAAEmR,IADR;MAEI,SAAS,EAAC,gBAFd;MAGI,eAAe,EAAC;IAHpB,gBAKI;MAAG,SAAS,EAAE,QAAQ8S;IAAtB,EALJ,eAMI;MAAM,SAAS,EAAC;IAAhB,GACK/S,KADL,CANJ,CADJ,EAYQ/N,QAAQ,IAAIA,QAAQ,CAACO,MAAT,GAAkB,CAA9B,iBACA,oBAAC,0BAAD;MACI,IAAI,EAAEyN,IADV;MAEI,MAAM,EAAE,mBACJ;QAAI,SAAS,EAAC;MAAd,GAEQlS,kBAAA,CAAmBkE,QAAnB,EAA8BK,KAAD,IAAW;QACpC,IAAI,CAACA,KAAL,EAAY;UACR,OAAOA,KAAP;QACH;;QAED,oBAAOvE,kBAAA,CAAmBuE,KAAnB,EAA0B;UAC7B+nB,UAAU,EAAEpa;QADiB,CAA1B,CAAP;MAGH,CARD,CAFR;IAHR,EAbR,CADJ;EAmCH;;AA1D8D;;ACPnE;AACA;AAEA;AACA;AACA;AAEe,MAAMwa,gBAAN,SAA+B1sB,mBAA/B,CAAmD;EAC1C,WAATM,SAAS,GAAG;IACnB,OAAO;MACHS,IAAI,EAAEhB,wCADH;MAEHkS,KAAK,EAAElS,sCAFJ;MAGHusB,UAAU,EAAEvsB,6BAHT;MAIH4sB,UAAU,EAAE5sB,2BAJT;MAKHmE,QAAQ,EAAEnE,4BAAA,CAAkBA,8BAAlB,CALP;MAMHgH,EAAE,EAAEhH,6BAAgBW;IANjB,CAAP;EAQH;;EAEsB,WAAZ+rB,YAAY,GAAG;IACtB,OAAO;MACHH,UAAU,EAAE,EADT;MAEHK,UAAU,EAAE,KAFT;MAGHzoB,QAAQ,EAAE;IAHP,CAAP;EAKH;;EAED0oB,OAAO,GAAG;IACN,OAAO,KAAKhsB,KAAL,CAAW0rB,UAAX,GAAwB,GAAxB,GAA8B,KAAK1rB,KAAL,CAAWG,IAAhD;EACH;;EAEDJ,MAAM,GAAG;IACL,MAAM;MAACsR,KAAD;MAAQ0a,UAAR;MAAoBzoB;IAApB,IAAgC,KAAKtD,KAA3C;IAEA,MAAMsR,IAAI,GAAG,KAAK0a,OAAL,EAAb;IAEA,IAAIC,cAAc,GAAG,IAArB;;IACA,IAAI3oB,QAAQ,CAACO,MAAT,GAAkB,CAAtB,EAAyB;MACrBooB,cAAc,gBACV;QAAI,SAAS,EAAC;MAAd,GAEQ7sB,kBAAA,CAAmBkE,QAAnB,EAA8BK,KAAD,IAAW;QACpC,oBAAOvE,kBAAA,CAAmBuE,KAAnB,EAA0B;UAC7B+nB,UAAU,EAAEpa,IADiB;UAE7Bya,UAAU,EAAE;QAFiB,CAA1B,CAAP;MAIH,CALD,CAFR,CADJ;IAYH;;IAED,IAAIG,SAAS,GAAG,SAAhB;;IACA,IAAIH,UAAJ,EAAgB;MACZG,SAAS,GAAG,YAAZ;IACH;;IAED,oBACI;MACI,SAAS,EAAEA,SADf;MAEI,EAAE,EAAE,KAAKlsB,KAAL,CAAWmG;IAFnB,gBAII,oBAAC,wBAAD;MACI,SAAS,YAAK+lB,SAAL,WADb;MAEI,eAAe,YAAKA,SAAL,mBAFnB;MAGI,EAAE,EAAE5a;IAHR,gBAKI;MAAM,SAAS,YAAK4a,SAAL;IAAf,GACK7a,KADL,CALJ,CAJJ,EAaK4a,cAbL,CADJ;EAiBH;;AAnE6D;;ACPlE;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEe,MAAME,gBAAN,SAA+B/sB,mBAA/B,CAAmD;EAC1C,WAATM,SAAS,GAAG;IACnB,OAAO;MACHC,IAAI,EAAER,wCADH;MAEH+I,IAAI,EAAE/I,wCAFH;MAGHitB,iBAAiB,EAAEjtB,sCAHhB;MAIH6S,sBAAsB,EAAE7S,sCAJrB;MAKH8S,sBAAsB,EAAE9S,sCALrB;MAMH+S,cAAc,EAAE/S,sCANb;MAOHgT,0BAA0B,EAAEhT,sCAPzB;MAQHktB,4BAA4B,EAAEltB,sCAR3B;MASHmtB,qBAAqB,EAAEntB,sCAAyB0F;IAT7C,CAAP;EAWH;;EAED0nB,iBAAiB,GAAG;IAChB,IAAI,CAAC,KAAKvsB,KAAL,CAAWosB,iBAAZ,IAAiC,CAAC,KAAKpsB,KAAL,CAAWqsB,4BAAjD,EAA+E;MAC3E,OAAO,IAAP;IACH;;IAED,oBACI,oBAAC,iBAAD;MACI,IAAI,EAAC,OADT;MAEI,UAAU,EAAE,MAAM,KAAKrsB,KAAL,CAAWL,IAAX,CAAgBQ,IAFtC;MAGI,IAAI,EAAC,YAHT;MAII,KAAK,eACD,oBAAC,sBAAD;QACI,EAAE,EAAC,yBADP;QAEI,cAAc,EAAC;MAFnB;IALR,EADJ;EAaH;;EAEDqsB,kBAAkB,GAAG;IACjB,IAAI,CAAC,KAAKxsB,KAAL,CAAWssB,qBAAhB,EAAuC;MACnC,OAAO,IAAP;IACH;;IAED,IAAIlQ,gBAAgB,GAAG,IAAvB;;IACA,IAAI,KAAKpc,KAAL,CAAWgS,sBAAf,EAAuC;MACnCoK,gBAAgB,gBACZ,oBAAC,mCAAD;QACI,WAAW,EAAE,CAACzL,+EAAD,CADjB;QAEI,MAAM,EAAE,KAAK3Q,KAAL,CAAWL,IAAX,CAAgBwG;MAF5B,gBAII,oBAAC,gBAAD;QACI,IAAI,EAAC,mBADT;QAEI,UAAU,EAAE,MAAM,KAAKnG,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB,GAA6B,eAF7C;QAGI,KAAK,eACD,oBAAC,sBAAD;UACI,EAAE,EAAC,kDADP;UAEI,cAAc,EAAC;QAFnB,EAJR;QASI,EAAE,EAAC;MATP,EAJJ,CADJ;IAkBH;;IAED,IAAIkhB,gBAAgB,GAAG,IAAvB;;IACA,IAAI,KAAKrhB,KAAL,CAAWiS,sBAAf,EAAuC;MACnCoP,gBAAgB,gBACZ,oBAAC,mCAAD;QACI,WAAW,EAAE,CAAC1Q,+EAAD,CADjB;QAEI,MAAM,EAAE,KAAK3Q,KAAL,CAAWL,IAAX,CAAgBwG;MAF5B,gBAII,oBAAC,gBAAD;QACI,IAAI,EAAC,mBADT;QAEI,UAAU,EAAE,MAAM,KAAKnG,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB,GAA6B,eAF7C;QAGI,KAAK,eACD,oBAAC,sBAAD;UACI,EAAE,EAAC,kDADP;UAEI,cAAc,EAAC;QAFnB,EAJR;QASI,EAAE,EAAC;MATP,EAJJ,CADJ;IAkBH;;IAED,IAAIY,QAAQ,GAAG,IAAf;;IACA,IAAI,KAAKf,KAAL,CAAWkS,cAAf,EAA+B;MAC3BnR,QAAQ,gBACJ,oBAAC,mCAAD;QACI,WAAW,EAAE,CAAC4P,yEAAD,CADjB;QAEI,MAAM,EAAE,KAAK3Q,KAAL,CAAWL,IAAX,CAAgBwG;MAF5B,gBAII,oBAAC,gBAAD;QACI,IAAI,EAAC,UADT;QAEI,UAAU,EAAE,MAAM,KAAKnG,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB,GAA6B,eAF7C;QAGI,KAAK,eACD,oBAAC,sBAAD;UACI,EAAE,EAAC,yCADP;UAEI,cAAc,EAAC;QAFnB,EAJR;QASI,EAAE,EAAC;MATP,EAJJ,CADJ;IAkBH;;IAED,IAAIc,SAAS,GAAG,IAAhB;;IACA,IAAI,KAAKjB,KAAL,CAAWmS,0BAAf,EAA2C;MACvClR,SAAS,gBACL,oBAAC,qCAAD;QAAsB,WAAW,EAAE,CAAC0P,uDAAD;MAAnC,gBACI,oBAAC,gBAAD;QACI,IAAI,EAAC,aADT;QAEI,UAAU,EAAE,MAAM,KAAK3Q,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB,GAA6B,eAF7C;QAGI,KAAK,eACD,oBAAC,sBAAD;UACI,EAAE,EAAC,0CADP;UAEI,cAAc,EAAC;QAFnB,EAJR;QASI,EAAE,EAAC;MATP,EADJ,CADJ;IAeH,CAxFgB,CA0FjB;IACA;;;IACA,MAAMmK,WAAW,gBACb,oBAAC,qCAAD;MAAsB,WAAW,EAAE,CAAC,aAAD,EAAgB,oBAAhB;IAAnC,gBACI,oBAAC,gBAAD;MACI,IAAI,EAAC,MADT;MAEI,UAAU,EAAE,MAAM,KAAKtK,KAAL,CAAWL,IAAX,CAAgBQ,IAAtB,GAA6B,eAF7C;MAGI,KAAK,eACD,oBAAC,sBAAD;QACI,EAAE,EAAC,wBADP;QAEI,cAAc,EAAC;MAFnB,EAJR;MASI,EAAE,EAAC;IATP,EADJ,CADJ;IAgBA,oBACI,oBAAC,iBAAD;MACI,IAAI,EAAC,cADT;MAEI,IAAI,EAAC,SAFT;MAGI,UAAU,EAAE,MAAM,KAAKH,KAAL,CAAWL,IAAX,CAAgBQ,IAHtC;MAII,KAAK,eACD,oBAAC,sBAAD;QACI,EAAE,EAAC,gCADP;QAEI,cAAc,EAAC;MAFnB;IALR,GAWKic,gBAXL,EAYKiF,gBAZL,EAaKtgB,QAbL,EAcKE,SAdL,EAeKqJ,WAfL,CADJ;EAmBH;;EAEDvK,MAAM,GAAG;IACL,oBACI;MAAK,SAAS,EAAC;IAAf,gBACI,gCACK,KAAKwsB,iBAAL,EADL,EAEK,KAAKC,kBAAL,EAFL,CADJ,CADJ;EAQH;;AA7K6D;;;;;;;;;;;;;;;;;ACflE;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,MAAMQ,cAAc,GAAG;EAAA,IAAC;IAAC9B,SAAS,EAAEC,SAAZ;IAAuBC;EAAvB,CAAD;EAAA,IAAuCC,IAAvC;;EAAA;IAAA;IAAmD;IACtE,oBAAC,0BAAD,oBACQA,IADR;MAEI,MAAM,EAAGrrB,KAAD,iBACJ,oBAAC,SAAD,oBACQorB,UADR,EAEQprB,KAFR;IAHR;EADmB;AAAA,CAAvB;;AAYe,MAAMitB,mBAAN,SAAkC7tB,mBAAlC,CAAsD;EAAA;IAAA;;IAAA,yDA8BnD,MAAM;MAChB,IAAI,KAAK8tB,OAAT,EAAkB;QACd,KAAKA,OAAL,CAAaC,SAAb,GAAyB,CAAzB;MACH;IACJ,CAlCgE;;IAAA,wDAoCnDC,GAAD,IAAS;MAClB,KAAKF,OAAL,GAAeE,GAAf;IACH,CAtCgE;EAAA;;EAwCjErtB,MAAM,GAAG;IACL,IAAI,KAAKC,KAAL,CAAWL,IAAX,IAAmB,IAAnB,IAA2B,KAAKK,KAAL,CAAWkI,IAAX,IAAmB,IAAlD,EAAwD;MACpD,oBAAO,gCAAP;IACH;;IACD,MAAMkjB,UAAU,GAAG;MACfzrB,IAAI,EAAE,KAAKK,KAAL,CAAWL,IADF;MAEfuI,IAAI,EAAE,KAAKlI,KAAL,CAAWkI,IAFF;MAGfiO,WAAW,EAAE,KAAKA;IAHH,CAAnB;IAKA,oBACI;MAAK,SAAS,EAAC;IAAf,gBACI,oBAAC,+BAAD,OADJ,eAEI,oBAAC,4BAAD,OAFJ,eAGI,oBAAC,+BAAD;MACI,IAAI,EAAE,KAAKnW,KAAL,CAAWL,IADrB;MAEI,QAAQ,EAAE,KAAKK,KAAL,CAAWH;IAFzB,EAHJ,eAOI,oBAAC,wBAAD;MAAW,aAAa,EAAC;IAAzB,EAPJ,eAQI;MACI,SAAS,EAAC,gBADd;MAEI,GAAG,EAAE,KAAKwtB;IAFd,gBAII,oBAAC,gBAAD;MACI,IAAI,EAAE,KAAKrtB,KAAL,CAAWL,IADrB;MAEI,IAAI,EAAE,KAAKK,KAAL,CAAWkI,IAFrB;MAGI,iBAAiB,EAAE,KAAKlI,KAAL,CAAWosB,iBAHlC;MAII,sBAAsB,EAAE,KAAKpsB,KAAL,CAAWgS,sBAJvC;MAKI,sBAAsB,EAAE,KAAKhS,KAAL,CAAWiS,sBALvC;MAMI,cAAc,EAAE,KAAKjS,KAAL,CAAWkS,cAN/B;MAOI,0BAA0B,EAAE,KAAKlS,KAAL,CAAWmS,0BAP3C;MAQI,4BAA4B,EAAE,KAAKnS,KAAL,CAAWqsB,4BAR7C;MASI,qBAAqB,EAAE,KAAKrsB,KAAL,CAAWssB;IATtC,EAJJ,eAeI,oBAAC,2BAAD,qBACI,oBAAC,cAAD;MACI,UAAU,EAAElB,UADhB;MAEI,KAAK,EAAE,IAFX;MAGI,IAAI,EAAE,qBAHV;MAII,SAAS,EAAEhiB,uBAAYA;IAJ3B,EADJ,eAOI,oBAAC,cAAD;MACI,UAAU,EAAEgiB,UADhB;MAEI,KAAK,EAAE,IAFX;MAGI,IAAI,YAAK,KAAKprB,KAAL,CAAW6I,KAAX,CAAiB8S,GAAtB,uBAHR;MAII,SAAS,EAAEG,2BAAyBA;IAJxC,EAPJ,eAaI,oBAAC,cAAD;MACI,UAAU,EAAEsP,UADhB;MAEI,IAAI,YAAK,KAAKprB,KAAL,CAAW6I,KAAX,CAAiB8S,GAAtB,2BAFR;MAGI,SAAS,EAAEiR,oBAAiBA;IAHhC,EAbJ,eAkBI,oBAAC,cAAD;MACI,UAAU,EAAExB,UADhB;MAEI,IAAI,YAAK,KAAKprB,KAAL,CAAW6I,KAAX,CAAiB8S,GAAtB,4BAFR;MAGI,SAAS,EAAE6D,qBAAmBA;IAHlC,EAlBJ,eAuBI,oBAAC,cAAD;MACI,UAAU,EAAE4L,UADhB;MAEI,KAAK,EAAE,IAFX;MAGI,IAAI,YAAK,KAAKprB,KAAL,CAAW6I,KAAX,CAAiB8S,GAAtB,uBAHR;MAII,SAAS,EAAEsF,2BAAyBA;IAJxC,EAvBJ,eA6BI,oBAAC,cAAD;MACI,UAAU,EAAEmK,UADhB;MAEI,IAAI,YAAK,KAAKprB,KAAL,CAAW6I,KAAX,CAAiB8S,GAAtB,2BAFR;MAGI,SAAS,EAAE2G,oBAAkBA;IAHjC,EA7BJ,eAkCI,oBAAC,cAAD;MACI,UAAU,EAAE8I,UADhB;MAEI,IAAI,YAAK,KAAKprB,KAAL,CAAW6I,KAAX,CAAiB8S,GAAtB,4BAFR;MAGI,SAAS,EAAE8G,qBAAmBA;IAHlC,EAlCJ,eAuCI,oBAAC,cAAD;MACI,UAAU,EAAE2I,UADhB;MAEI,IAAI,YAAK,KAAKprB,KAAL,CAAW6I,KAAX,CAAiB8S,GAAtB,cAFR;MAGI,SAAS,EAAE4P,kBAAiBA;IAHhC,EAvCJ,eA4CI,oBAAC,cAAD;MACI,UAAU,EAAEH,UADhB;MAEI,KAAK,EAAE,IAFX;MAGI,IAAI,YAAK,KAAKprB,KAAL,CAAW6I,KAAX,CAAiB8S,GAAtB,iBAHR;MAII,SAAS,EAAEkR,oBAAkBA;IAJjC,EA5CJ,eAkDI,oBAAC,cAAD;MACI,UAAU,EAAEzB,UADhB;MAEI,IAAI,YAAK,KAAKprB,KAAL,CAAW6I,KAAX,CAAiB8S,GAAtB,qBAFR;MAGI,SAAS,EAAEmR,aAAWA;IAH1B,EAlDJ,eAuDI,oBAAC,cAAD;MACI,UAAU,EAAE1B,UADhB;MAEI,IAAI,YAAK,KAAKprB,KAAL,CAAW6I,KAAX,CAAiB8S,GAAtB,sBAFR;MAGI,SAAS,EAAEoR,cAAYA;IAH3B,EAvDJ,eA4DI,oBAAC,cAAD;MACI,UAAU,EAAE3B,UADhB;MAEI,IAAI,YAAK,KAAKprB,KAAL,CAAW6I,KAAX,CAAiB8S,GAAtB,aAFR;MAGI,SAAS,EAAE0N,mBAAkBA;IAHjC,EA5DJ,eAiEI,oBAAC,cAAD;MACI,UAAU,EAAE+B,UADhB;MAEI,KAAK,EAAE,IAFX;MAGI,IAAI,EAAE,cAHV;MAII,SAAS,EAAE9V,KAAKA;IAJpB,EAjEJ,eAuEI,oBAAC,cAAD;MACI,UAAU,EAAE8V,UADhB;MAEI,IAAI,YAAK,KAAKprB,KAAL,CAAW6I,KAAX,CAAiB8S,GAAtB,SAFR;MAGI,SAAS,EAAEzD,SAAQA;IAHvB,EAvEJ,eA4EI,oBAAC,cAAD;MACI,UAAU,EAAEkT,UADhB;MAEI,IAAI,YAAK,KAAKprB,KAAL,CAAW6I,KAAX,CAAiB8S,GAAtB,cAFR;MAGI,SAAS,EAAEnP,OAAMA;IAHrB,EA5EJ,eAiFI,oBAAC,cAAD;MACI,UAAU,EAAE4e,UADhB;MAEI,IAAI,YAAK,KAAKprB,KAAL,CAAW6I,KAAX,CAAiB8S,GAAtB,eAFR;MAGI,SAAS,EAAEnP,OAAMA;IAHrB,EAjFJ,eAsFI,oBAAC,cAAD;MACI,UAAU,EAAE4e,UADhB;MAEI,IAAI,YAAK,KAAKprB,KAAL,CAAW6I,KAAX,CAAiB8S,GAAtB,UAFR;MAGI,SAAS,EAAEnT,iBAAIA;IAHnB,EAtFJ,CAfJ,CARJ,CADJ;EAuHH;;AAxKgE;;oCAAhDykB,kCACE;EAEf;AACR;AACA;EACQ/kB,IAAI,EAAE/I,6BALS;;EAOf;AACR;AACA;EACQQ,IAAI,EAAER,6BAVS;;EAYf;AACR;AACA;EACQ0J,KAAK,EAAE1J,0BAAA,CAAgB;IACnBwc,GAAG,EAAExc,wCAA2B0F;EADb,CAAhB,EAEJA,UAjBY;EAmBfhF,QAAQ,EAAEV,6BAnBK;EAoBfitB,iBAAiB,EAAEjtB,sCApBJ;EAqBf6S,sBAAsB,EAAE7S,sCArBT;EAsBf8S,sBAAsB,EAAE9S,sCAtBT;EAuBf+S,cAAc,EAAE/S,sCAvBD;EAwBfgT,0BAA0B,EAAEhT,sCAxBb;EAyBfktB,4BAA4B,EAAEltB,sCAzBf;EA0BfmtB,qBAAqB,EAAEntB,sCAAyB0F;AA1BjC;;;AC5CvB;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA,SAASgG,yBAAT,CAAyBrK,KAAzB,EAAgC;EAC5B,MAAM0H,IAAI,GAAGqlB,yCAAc,CAAC/sB,KAAD,CAA3B;EACA,MAAMb,IAAI,GAAGqV,gCAAc,CAACxU,KAAD,CAA3B;EAEA,MAAMsK,MAAM,GAAGH,6BAAS,CAACnK,KAAD,CAAxB;EAEA,MAAMX,QAAQ,GAAGiL,MAAM,CAAC4H,QAAxB;EACA,MAAM0Z,iBAAiB,GAAGthB,MAAM,CAAC2iB,iBAAP,KAA6B,MAAvD;EACA,MAAMzb,sBAAsB,GAAGlH,MAAM,CAAC6H,sBAAP,KAAkC,MAAjE;EACA,MAAMV,sBAAsB,GAAGnH,MAAM,CAAC8H,sBAAP,KAAkC,MAAjE;EACA,MAAMV,cAAc,GAAGpH,MAAM,CAAC+H,cAAP,KAA0B,MAAjD;EACA,MAAMV,0BAA0B,GAAGrH,MAAM,CAACgI,0BAAP,KAAsC,MAAzE;EAEA,IAAIuZ,4BAA4B,GAAI3b,gDAAqB,CAAClQ,KAAD,EAAQ;IAAC0Q,UAAU,EAAEP,yDAAyBoH;EAAtC,CAAR,CAArB,IAAyErH,gDAAqB,CAAClQ,KAAD,EAAQ;IAAC0Q,UAAU,EAAEP,yDAAyB+D;EAAtC,CAAR,CAAlI;;EACA,IAAI,CAAC2X,4BAAL,EAAmC;IAC/B,KAAK,MAAM9gB,CAAX,IAAgBiiB,4BAAU,CAAChtB,KAAD,CAA1B,EAAmC;MAC/B,IAAImc,8CAAmB,CAACnc,KAAD,EAAQ+K,CAAC,CAACpF,EAAV,EAAcwK,yDAAd,CAAnB,IAA+DgM,8CAAmB,CAACnc,KAAD,EAAQ+K,CAAC,CAACpF,EAAV,EAAcwK,yDAAd,CAAtF,EAAgI;QAC5H0b,4BAA4B,GAAG,IAA/B;QACA;MACH;IACJ;EACJ;;EAED,MAAMqB,yBAAyB,GAAI/Q,8CAAmB,CAACnc,KAAD,EAAQ,EAAR,EAAYmQ,yEAAZ,CAAnB,IAAqEgM,8CAAmB,CAACnc,KAAD,EAAQ,EAAR,EAAYmQ,uDAAZ,CAAxF,IAAiIgM,8CAAmB,CAACnc,KAAD,EAAQ,EAAR,EAAYmQ,+EAAZ,CAApJ,IAAyMgM,8CAAmB,CAACnc,KAAD,EAAQ,EAAR,EAAYmQ,+EAAZ,CAA/P;EACA,MAAMgd,mBAAmB,GAAIjd,gDAAqB,CAAClQ,KAAD,EAAQ;IAAC0Q,UAAU,EAAEP,qDAAuBid;EAApC,CAAR,CAArB,IAAuEld,gDAAqB,CAAClQ,KAAD,EAAQ;IAAC0Q,UAAU,EAAEP,mEAA8Bkd;EAA3C,CAAR,CAAzH;EACA,MAAMvB,qBAAqB,GAAGoB,yBAAyB,IAAIC,mBAA3D;EAEA,OAAO;IACHzlB,IADG;IAEHvI,IAFG;IAGHE,QAHG;IAIHusB,iBAJG;IAKHpa,sBALG;IAMHC,sBANG;IAOHC,cAPG;IAQHC,0BARG;IASHka,4BATG;IAUHC;EAVG,CAAP;AAYH;;AAED,gDAAegB,mCAAU,CAAC9iB,cAAO,CAACK,yBAAD,CAAP,CAAyBoiB,mBAAzB,CAAD,CAAzB;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AAEA;AAEA;AAEA;AAMe,MAAM5nB,WAAN,SAA0BjG,gDAA1B,CAAqD;EAKzDW,MAAM,GAAgB;IACzB,MAAMmsB,SAAS,GAAG,mBAAmB,KAAKlsB,KAAL,CAAW8tB,mBAAX,GAAiC,MAAM,KAAK9tB,KAAL,CAAW8tB,mBAAlD,GAAwE,EAA3F,CAAlB;IACA,oBACI,iDAAC,0EAAD;MACI,SAAS,EAAE5B,SADf;MAEI,KAAK,EAAE;QAAC/lB,EAAE,EAAEoF,6CAAC,CAAC,uBAAD,CAAN;QAAiCG,cAAc,EAAE;MAAjD;IAFX,EADJ;EAMH;;AAb+D;;gBAA/CrG;EAHjByoB;;;gBAGiBzoB,6BACmB;EAChCyoB,mBAAmB,EAAE;AADW;;;;;;;;;;;;;;;;;;ACdxC;AACA;AAEA;AACA;AAKA;AAEA,MAAMG,qBAAqB,GAAG,EAA9B;AAEO,SAAShf,SAAT,CAAmB1J,GAAnB,EAAyC;EAC5C,OAAOyoB,kEAAc,CAAC;IAClBE,UAAU,EAAEna,0FADM;IAElBoa,SAAS,EAAEJ,uHAFO;IAGlBM,MAAM,EAAE,CACJ9oB,GADI;EAHU,CAAD,CAArB;AAOH;AAEM,SAASiJ,QAAT,CAAkB8f,SAAlB,EAAqCC,QAArC,EAAqE;EACxE,OAAOP,kEAAc,CAAC;IAClBE,UAAU,EAAEna,wFADM;IAElBoa,SAAS,EAAEJ,uHAFO;IAGlBM,MAAM,EAAE,CACJC,SADI,EAEJC,QAFI;EAHU,CAAD,CAArB;AAQH;AAEM,SAASC,OAAT,CAAiBF,SAAjB,EAAgD;EACnD,OAAON,cAAc,CAAC;IAClBE,UAAU,EAAEna,OAAO,CAAC0a,MADF;IAElBN,SAAS,EAAEJ,QAAQ,CAACK,oBAFF;IAGlBC,MAAM,EAAE,CACJC,SADI;EAHU,CAAD,CAArB;AAOH;AAEM,SAASnlB,QAAT,GAAyE;EAAA,IAAvD2M,IAAuD,uEAAhD,CAAgD;EAAA,IAA7CiE,OAA6C,uEAAnCkU,qBAAmC;EAC5E,OAAOD,kEAAc,CAAC;IAClBE,UAAU,EAAEna,kHADM;IAElBoa,SAAS,EAAEJ,yHAFO;IAGlBM,MAAM,EAAE,CACJvY,IADI,EAEJiE,OAFI;EAHU,CAAD,CAArB;AAQH;AAEM,SAAS7T,UAAT,CAAoBooB,SAApB,EAAmD;EACtD,OAAON,kEAAc,CAAC;IAClBE,UAAU,EAAEna,4FADM;IAElBoa,SAAS,EAAEJ,uHAFO;IAGlBM,MAAM,EAAE,CACJC,SADI;EAHU,CAAD,CAArB;AAOH;AAEM,SAAStoB,SAAT,CAAmBsoB,SAAnB,EAAkD;EACrD,OAAON,kEAAc,CAAC;IAClBE,UAAU,EAAEna,0FADM;IAElBoa,SAAS,EAAEJ,uHAFO;IAGlBM,MAAM,EAAE,CACJC,SADI;EAHU,CAAD,CAArB;AAOH;AAEM,SAASM,SAAT,CAAmBN,SAAnB,EAAsCO,UAAtC,EAAsE;EACzE,OAAOb,cAAc,CAAC;IAClBE,UAAU,EAAEna,OAAO,CAAC6a,SADF;IAElBT,SAAS,EAAEJ,QAAQ,CAACK,oBAFF;IAGlBC,MAAM,EAAE,CACJC,SADI,EAEJO,UAFI;EAHU,CAAD,CAArB;AAQH;;;;;;;;;;;;;;ACpFD;AACA;AAEA;AAIA;AAEO,MAAMC,uBAAiC,GAAG,CAAC,oBAAD,CAA1C;AAEA,SAASre,cAAT,CAAwBjQ,KAAxB,EAA4C;EAC/C,OAAOA,KAAK,CAACC,QAAN,CAAemI,IAAf,CAAoBmmB,QAA3B;AACH;AAEM,MAAMrkB,sBAAmE,GAAGtK,kEAAc,CAC7F,wBAD6F,EAE7FqQ,cAF6F,EAG7FiM,0FAH6F,EAI7F,CAACpS,WAAD,EAAc0kB,YAAd,KAA+B;EAC3B,MAAMC,SAA8B,GAAG,EAAvC;EACAptB,MAAM,CAACC,MAAP,CAAcwI,WAAd,EAA2BlD,OAA3B,CAAoC8nB,UAAD,IAAgB;IAC/C,MAAMC,OAAO,GAAGH,YAAY,CAACE,UAAU,CAACjpB,OAAZ,CAA5B;;IACA,IAAIkpB,OAAO,IAAI,CAACL,uBAAuB,CAACnmB,QAAxB,CAAiCwmB,OAAO,CAAC1pB,QAAzC,CAAhB,EAAoE;MAChEwpB,SAAS,CAACC,UAAU,CAACjpB,OAAZ,CAAT,GAAgCipB,UAAhC;IACH;EACJ,CALD;EAOA,OAAOD,SAAP;AACH,CAd4F,CAA1F","sources":["webpack://@mattermost/webapp/./components/backstage/components/backstage_navbar.jsx","webpack://@mattermost/webapp/./packages/mattermost-redux/src/selectors/entities/integrations.ts","webpack://@mattermost/webapp/./components/backstage/components/backstage_list.jsx","webpack://@mattermost/webapp/./components/integrations/bots/bot.tsx","webpack://@mattermost/webapp/./components/integrations/bots/bots.tsx","webpack://@mattermost/webapp/./components/integrations/bots/index.ts","webpack://@mattermost/webapp/./images/bot_default_icon.png","webpack://@mattermost/webapp/./components/backstage/components/backstage_header.jsx","webpack://@mattermost/webapp/./components/integrations/bots/add_bot/add_bot.jsx","webpack://@mattermost/webapp/./components/integrations/bots/add_bot/index.js","webpack://@mattermost/webapp/./images/incoming_webhook.jpg","webpack://@mattermost/webapp/./images/oauth_icon.png","webpack://@mattermost/webapp/./images/outgoing_webhook.jpg","webpack://@mattermost/webapp/./images/slash_command_icon.jpg","webpack://@mattermost/webapp/./components/integrations/integration_option.jsx","webpack://@mattermost/webapp/./components/integrations/integrations.jsx","webpack://@mattermost/webapp/./components/integrations/index.js","webpack://@mattermost/webapp/./components/integrations/delete_integration_link/delete_integration_link.tsx","webpack://@mattermost/webapp/./components/integrations/delete_integration_link/index.ts","webpack://@mattermost/webapp/./components/emoji/emoji_list_item/delete_emoji_button.tsx","webpack://@mattermost/webapp/./components/emoji/emoji_list_item/emoji_list_item.tsx","webpack://@mattermost/webapp/./components/emoji/emoji_list_item/index.ts","webpack://@mattermost/webapp/./components/emoji/emoji_list/emoji_list.tsx","webpack://@mattermost/webapp/./components/emoji/emoji_list/index.ts","webpack://@mattermost/webapp/./components/emoji/emoji_page.tsx","webpack://@mattermost/webapp/./components/emoji/index.ts","webpack://@mattermost/webapp/./components/emoji/add_emoji/add_emoji.tsx","webpack://@mattermost/webapp/./components/emoji/add_emoji/index.ts","webpack://@mattermost/webapp/./actions/integration_actions.jsx","webpack://@mattermost/webapp/./components/copy_text.tsx","webpack://@mattermost/webapp/./components/integrations/installed_incoming_webhook.jsx","webpack://@mattermost/webapp/./components/integrations/installed_incoming_webhooks/installed_incoming_webhooks.tsx","webpack://@mattermost/webapp/./components/integrations/installed_incoming_webhooks/index.ts","webpack://@mattermost/webapp/./components/channel_select/channel_select.tsx","webpack://@mattermost/webapp/./components/channel_select/index.ts","webpack://@mattermost/webapp/./components/integrations/abstract_incoming_webhook.jsx","webpack://@mattermost/webapp/./components/integrations/add_incoming_webhook/add_incoming_webhook.tsx","webpack://@mattermost/webapp/./components/integrations/add_incoming_webhook/index.ts","webpack://@mattermost/webapp/./components/integrations/edit_incoming_webhook/edit_incoming_webhook.tsx","webpack://@mattermost/webapp/./components/integrations/edit_incoming_webhook/index.ts","webpack://@mattermost/webapp/./components/integrations/installed_outgoing_webhook.jsx","webpack://@mattermost/webapp/./components/integrations/installed_outgoing_webhooks/installed_outgoing_webhooks.jsx","webpack://@mattermost/webapp/./components/integrations/installed_outgoing_webhooks/index.js","webpack://@mattermost/webapp/./components/integrations/abstract_outgoing_webhook.jsx","webpack://@mattermost/webapp/./components/integrations/add_outgoing_webhook/add_outgoing_webhook.jsx","webpack://@mattermost/webapp/./components/integrations/add_outgoing_webhook/index.js","webpack://@mattermost/webapp/./components/integrations/edit_outgoing_webhook/edit_outgoing_webhook.tsx","webpack://@mattermost/webapp/./components/integrations/edit_outgoing_webhook/index.ts","webpack://@mattermost/webapp/./components/integrations/installed_oauth_app/installed_oauth_app.tsx","webpack://@mattermost/webapp/./components/integrations/installed_oauth_app/index.ts","webpack://@mattermost/webapp/./components/integrations/installed_oauth_apps/installed_oauth_apps.tsx","webpack://@mattermost/webapp/./components/integrations/installed_oauth_apps/index.ts","webpack://@mattermost/webapp/./components/integrations/abstract_oauth_app.jsx","webpack://@mattermost/webapp/./components/integrations/add_oauth_app/add_oauth_app.jsx","webpack://@mattermost/webapp/./components/integrations/add_oauth_app/index.js","webpack://@mattermost/webapp/./components/integrations/edit_oauth_app/edit_oauth_app.tsx","webpack://@mattermost/webapp/./components/integrations/edit_oauth_app/index.ts","webpack://@mattermost/webapp/./components/integrations/installed_command.jsx","webpack://@mattermost/webapp/./components/integrations/installed_commands/installed_commands.tsx","webpack://@mattermost/webapp/./components/integrations/installed_commands/index.ts","webpack://@mattermost/webapp/./components/integrations/abstract_command.jsx","webpack://@mattermost/webapp/./components/integrations/add_command/add_command.jsx","webpack://@mattermost/webapp/./components/integrations/add_command/index.js","webpack://@mattermost/webapp/./components/integrations/edit_command/edit_command.tsx","webpack://@mattermost/webapp/./components/integrations/edit_command/index.ts","webpack://@mattermost/webapp/./components/integrations/confirm_integration/confirm_integration.jsx","webpack://@mattermost/webapp/./components/integrations/confirm_integration/index.js","webpack://@mattermost/webapp/./components/integrations/commands_container/commands_container.tsx","webpack://@mattermost/webapp/./components/integrations/commands_container/index.ts","webpack://@mattermost/webapp/./components/backstage/components/backstage_category.jsx","webpack://@mattermost/webapp/./components/backstage/components/backstage_section.jsx","webpack://@mattermost/webapp/./components/backstage/components/backstage_sidebar.jsx","webpack://@mattermost/webapp/./components/backstage/backstage_controller.jsx","webpack://@mattermost/webapp/./components/backstage/index.js","webpack://@mattermost/webapp/./components/widgets/icons/fa_warning_icon.tsx","webpack://@mattermost/webapp/./packages/mattermost-redux/src/actions/bots.ts","webpack://@mattermost/webapp/./packages/mattermost-redux/src/selectors/entities/bots.ts"],"sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport BackIcon from 'components/widgets/icons/fa_back_icon';\n\nexport default class BackstageNavbar extends React.PureComponent {\n    static get propTypes() {\n        return {\n            team: PropTypes.object,\n            siteName: PropTypes.string,\n        };\n    }\n\n    render() {\n        const {team} = this.props;\n        const teamExists = team?.delete_at === 0;\n\n        return (\n            <div className='backstage-navbar'>\n                <Link\n                    className='backstage-navbar__back'\n                    to={`/${teamExists ? this.props.team.name : ''}`}\n                >\n                    <BackIcon/>\n                    <span>\n                        {teamExists ? (\n                            <FormattedMessage\n                                id='backstage_navbar.backToMattermost'\n                                defaultMessage='Back to {siteName}'\n                                values={{\n                                    siteName: this.props.siteName ? this.props.siteName : this.props.team.name,\n                                }}\n                            />\n                        ) : (\n                            <FormattedMessage\n                                id='backstage_navbar.back'\n                                defaultMessage='Back'\n                            />\n                        )}\n                    </span>\n                </Link>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {createSelector} from 'reselect';\n\nimport {getCurrentTeamId} from 'mattermost-redux/selectors/entities/teams';\n\nimport {OutgoingWebhook, Command} from '@mattermost/types/integrations';\nimport {GlobalState} from '@mattermost/types/store';\nimport {IDMappedObjects} from '@mattermost/types/utilities';\n\nimport {appsEnabled} from './apps';\n\nexport function getIncomingHooks(state: GlobalState) {\n    return state.entities.integrations.incomingHooks;\n}\n\nexport function getOutgoingHooks(state: GlobalState) {\n    return state.entities.integrations.outgoingHooks;\n}\n\nexport function getCommands(state: GlobalState) {\n    return state.entities.integrations.commands;\n}\n\nexport function getOAuthApps(state: GlobalState) {\n    return state.entities.integrations.oauthApps;\n}\n\nexport const getAppsOAuthAppIDs: (state: GlobalState) => string[] = createSelector(\n    'getAppsOAuthAppIDs',\n    appsEnabled,\n    (state: GlobalState) => state.entities.integrations.appsOAuthAppIDs,\n    (apps, ids) => {\n        return apps ? ids : [];\n    },\n);\n\nexport const getAppsBotIDs: (state: GlobalState) => string[] = createSelector(\n    'getAppsBotIDs',\n    appsEnabled,\n    (state: GlobalState) => state.entities.integrations.appsBotIDs,\n    (apps, ids) => {\n        return apps ? ids : [];\n    },\n);\n\nexport function getSystemCommands(state: GlobalState) {\n    return state.entities.integrations.systemCommands;\n}\n\n/**\n * get outgoing hooks in current team\n */\nexport const getOutgoingHooksInCurrentTeam: (state: GlobalState) => OutgoingWebhook[] = createSelector(\n    'getOutgoingHooksInCurrentTeam',\n    getCurrentTeamId,\n    getOutgoingHooks,\n    (teamId, hooks) => {\n        return Object.values(hooks).filter((o) => o.team_id === teamId);\n    },\n);\n\nexport const getAllCommands: (state: GlobalState) => IDMappedObjects<Command> = createSelector(\n    'getAllCommands',\n    getCommands,\n    getSystemCommands,\n    (commands, systemCommands) => {\n        return {\n            ...commands,\n            ...systemCommands,\n        };\n    },\n);\n\nexport const getAutocompleteCommandsList: (state: GlobalState) => Command[] = createSelector(\n    'getAutocompleteCommandsList',\n    getAllCommands,\n    getCurrentTeamId,\n    (commands, currentTeamId) => {\n        return Object.values(commands).filter((command) => {\n            return command && (!command.team_id || command.team_id === currentTeamId) && command.auto_complete;\n        }).sort((a, b) => a.display_name.localeCompare(b.display_name));\n    },\n);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport * as Utils from 'utils/utils';\nimport LoadingScreen from 'components/loading_screen';\nimport SearchIcon from 'components/widgets/icons/fa_search_icon';\n\nexport default class BackstageList extends React.PureComponent {\n    static propTypes = {\n        children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n        header: PropTypes.node.isRequired,\n        addLink: PropTypes.string,\n        addText: PropTypes.node,\n        addButtonId: PropTypes.string,\n        emptyText: PropTypes.node,\n        emptyTextSearch: PropTypes.node,\n        helpText: PropTypes.node,\n        loading: PropTypes.bool.isRequired,\n        searchPlaceholder: PropTypes.string,\n    }\n\n    static defaultProps = {\n        searchPlaceholder: Utils.localizeMessage('backstage_list.search', 'Search'),\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            filter: '',\n        };\n    }\n\n    updateFilter = (e) => {\n        this.setState({\n            filter: e.target.value,\n        });\n    }\n\n    render() {\n        const filter = this.state.filter.toLowerCase();\n\n        let children;\n        if (this.props.loading) {\n            children = <LoadingScreen/>;\n        } else {\n            children = this.props.children;\n            let hasChildren = true;\n            if (typeof children === 'function') {\n                [children, hasChildren] = children(filter);\n            }\n            children = React.Children.map(children, (child) => {\n                return React.cloneElement(child, {filter});\n            });\n            if (children.length === 0 || !hasChildren) {\n                if (!filter) {\n                    if (this.props.emptyText) {\n                        children = (\n                            <div className='backstage-list__item backstage-list__empty'>\n                                {this.props.emptyText}\n                            </div>\n                        );\n                    }\n                } else if (this.props.emptyTextSearch) {\n                    children = (\n                        <div\n                            className='backstage-list__item backstage-list__empty'\n                            id='emptySearchResultsMessage'\n                        >\n                            {React.cloneElement(this.props.emptyTextSearch, {values: {searchTerm: filter}})}\n                        </div>\n                    );\n                }\n            }\n        }\n\n        let addLink = null;\n\n        if (this.props.addLink && this.props.addText) {\n            addLink = (\n                <Link\n                    className='add-link'\n                    to={this.props.addLink}\n                >\n                    <button\n                        type='button'\n                        className='btn btn-primary'\n                        id={this.props.addButtonId}\n                    >\n                        <span>\n                            {this.props.addText}\n                        </span>\n                    </button>\n                </Link>\n            );\n        }\n\n        return (\n            <div className='backstage-content'>\n                <div className='backstage-header'>\n                    <h1>\n                        {this.props.header}\n                    </h1>\n                    {addLink}\n                </div>\n                <div className='backstage-filters'>\n                    <div className='backstage-filter__search'>\n                        <SearchIcon/>\n                        <input\n                            type='search'\n                            className='form-control'\n                            placeholder={this.props.searchPlaceholder}\n                            value={this.state.filter}\n                            onChange={this.updateFilter}\n                            style={style.search}\n                            id='searchInput'\n                        />\n                    </div>\n                </div>\n                <span className='backstage-list__help'>\n                    {this.props.helpText}\n                </span>\n                <div className='backstage-list'>\n                    {children}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst style = {\n    search: {flexGrow: 0, flexShrink: 0},\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {ChangeEvent, SyntheticEvent, ReactNode} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {FormattedMessage} from 'react-intl';\n\nimport {ActionResult} from 'mattermost-redux/types/actions';\nimport {Bot as BotType} from '@mattermost/types/bots';\nimport {UserProfile, UserAccessToken} from '@mattermost/types/users';\nimport {Team} from '@mattermost/types/teams';\n\nimport ConfirmModal from 'components/confirm_modal';\nimport Markdown from 'components/markdown';\nimport SaveButton from 'components/save_button';\nimport WarningIcon from 'components/widgets/icons/fa_warning_icon';\nimport * as Utils from 'utils/utils';\n\nexport function matchesFilter(bot: BotType, filter?: string, owner?: UserProfile): boolean {\n    if (!filter) {\n        return true;\n    }\n    const username = bot.username || '';\n    const description = bot.description || '';\n    const displayName = bot.display_name || '';\n\n    let ownerUsername = 'plugin';\n    if (owner && owner.username) {\n        ownerUsername = owner.username;\n    }\n    return !(username.toLowerCase().indexOf(filter) === -1 &&\n        displayName.toLowerCase().indexOf(filter) === -1 &&\n        description.toLowerCase().indexOf(filter) === -1 &&\n        ownerUsername.toLowerCase().indexOf(filter) === -1);\n}\n\ntype Props = {\n\n    /**\n    *  Bot that we are displaying\n    */\n    bot: BotType;\n\n    /**\n    * Owner of the bot we are displaying\n    */\n    owner?: UserProfile;\n\n    /**\n    * User of the bot we are displaying\n    */\n    user: UserProfile;\n\n    /**\n    * The access tokens of the bot user\n    */\n    accessTokens: Record<string, UserAccessToken>;\n\n    /**\n    * String used for filtering bot items\n    */\n    filter?: string;\n\n    /**\n     * Determine whether this bot is managed by the app framework\n     */\n    fromApp: boolean;\n\n    actions: {\n\n        /**\n        * Disable a bot\n        */\n        disableBot: (userId: string) => Promise<ActionResult>;\n\n        /**\n        * Enable a bot\n        */\n        enableBot: (userId: string) => Promise<ActionResult>;\n\n        /**\n        * Access token managment\n        */\n        createUserAccessToken: (userId: string, description: string) => Promise<{\n            data: {token: string; description: string; id: string; is_active: boolean} | null;\n            error?: Error;\n        }>;\n\n        revokeUserAccessToken: (tokenId: string) => Promise<{data: string; error?: Error}>;\n        enableUserAccessToken: (tokenId: string) => Promise<{data: string; error?: Error}>;\n        disableUserAccessToken: (tokenId: string) => Promise<{data: string; error?: Error}>;\n    };\n\n    /**\n    *  Only used for routing since backstage is team based.\n    */\n    team: Team;\n}\n\ntype State = {\n    confirmingId: string;\n    creatingTokenState: string;\n    token: UserAccessToken | Record<string, any>;\n    error: ReactNode;\n}\n\nexport default class Bot extends React.PureComponent<Props, State> {\n    public constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            confirmingId: '',\n            creatingTokenState: 'CLOSED',\n            token: {},\n            error: '',\n        };\n    }\n\n    enableBot = (): void => {\n        this.props.actions.enableBot(this.props.bot.user_id);\n    }\n\n    disableBot = (): void => {\n        this.props.actions.disableBot(this.props.bot.user_id);\n    }\n\n    enableUserAccessToken = (id: string): void => {\n        this.props.actions.enableUserAccessToken(id);\n    }\n\n    disableUserAccessToken = (id: string): void => {\n        this.props.actions.disableUserAccessToken(id);\n    }\n\n    confirmRevokeToken = (id: string): void => {\n        this.setState({confirmingId: id});\n    }\n\n    revokeTokenConfirmed = (): void => {\n        this.props.actions.revokeUserAccessToken(this.state.confirmingId);\n        this.closeConfirm();\n    }\n\n    closeConfirm = (): void => {\n        this.setState({confirmingId: ''});\n    }\n\n    openCreateToken = (): void => {\n        this.setState({\n            creatingTokenState: 'OPEN',\n            token: {\n                description: '',\n            },\n        });\n    }\n\n    closeCreateToken = (): void => {\n        this.setState({\n            creatingTokenState: 'CLOSED',\n            token: {\n                description: '',\n            },\n        });\n    }\n\n    handleUpdateDescription = (e: ChangeEvent<HTMLInputElement>): void => {\n        const target = e.target as HTMLInputElement;\n        this.setState({\n            token: Object.assign({}, this.state.token, {description: target.value}),\n        });\n    }\n\n    handleCreateToken = async (e: SyntheticEvent): Promise<void> => {\n        e.preventDefault();\n\n        if (this.state.token.description === '') {\n            this.setState({error: (\n                <FormattedMessage\n                    id='bot.token.error.description'\n                    defaultMessage='Please enter a description.'\n                />\n            )});\n            return;\n        }\n\n        const {data, error} = await this.props.actions.createUserAccessToken(this.props.bot.user_id, this.state.token.description);\n        if (data) {\n            this.setState({creatingTokenState: 'CREATED', token: data});\n        } else if (error) {\n            this.setState({error: error.message});\n        }\n    }\n\n    public render(): JSX.Element | null {\n        const username = this.props.bot.username || '';\n        const description = this.props.bot.description || '';\n        const displayName = this.props.bot.display_name || '';\n\n        let ownerUsername = 'plugin';\n        if (this.props.fromApp) {\n            ownerUsername = 'Apps Framework';\n        } else if (this.props.owner && this.props.owner.username) {\n            ownerUsername = this.props.owner.username;\n        }\n        const filter = this.props.filter ? this.props.filter.toLowerCase() : '';\n        if (!matchesFilter(this.props.bot, filter, this.props.owner)) {\n            return null;\n        }\n\n        const tokenList = [];\n        Object.values(this.props.accessTokens).forEach((token) => {\n            let activeLink;\n            let disableClass = '';\n            let disabledText;\n\n            if (token.is_active) {\n                activeLink = (\n                    <a\n                        id={token.id + '_deactivate'}\n                        href='#'\n                        onClick={(e) => {\n                            e.preventDefault();\n                            this.disableUserAccessToken(token.id);\n                        }}\n                    >\n                        <FormattedMessage\n                            id='user.settings.tokens.deactivate'\n                            defaultMessage='Disable'\n                        />\n                    </a>);\n            } else {\n                disableClass = 'light';\n                disabledText = (\n                    <span className='mr-2 light'>\n                        <FormattedMessage\n                            id='user.settings.tokens.deactivatedWarning'\n                            defaultMessage='(Disabled)'\n                        />\n                    </span>\n                );\n                activeLink = (\n                    <a\n                        id={token.id + '_activate'}\n                        href='#'\n                        onClick={(e) => {\n                            e.preventDefault();\n                            this.enableUserAccessToken(token.id);\n                        }}\n                    >\n                        <FormattedMessage\n                            id='user.settings.tokens.activate'\n                            defaultMessage='Enable'\n                        />\n                    </a>\n                );\n            }\n\n            tokenList.push(\n                <div\n                    key={token.id}\n                    className='bot-list__item'\n                >\n                    <div className='item-details__row d-flex justify-content-between'>\n                        <div className={disableClass}>\n                            <div className='whitespace--nowrap overflow--ellipsis'>\n                                <b>\n                                    <FormattedMessage\n                                        id='user.settings.tokens.tokenDesc'\n                                        defaultMessage='Token Description: '\n                                    />\n                                </b>\n                                {token.description}\n                            </div>\n                            <div className='setting-box__token-id whitespace--nowrap overflow--ellipsis'>\n                                <b>\n                                    <FormattedMessage\n                                        id='user.settings.tokens.tokenId'\n                                        defaultMessage='Token ID: '\n                                    />\n                                </b>\n                                {token.id}\n                            </div>\n                        </div>\n                        <div>\n                            {disabledText}\n                            {activeLink}\n                            {' - '}\n                            <a\n                                id={token.id + '_delete'}\n                                href='#'\n                                onClick={(e) => {\n                                    e.preventDefault();\n                                    this.confirmRevokeToken(token.id);\n                                }}\n                            >\n                                <FormattedMessage\n                                    id='user.settings.tokens.delete'\n                                    defaultMessage='Delete'\n                                />\n                            </a>\n                        </div>\n                    </div>\n                </div>,\n            );\n        });\n\n        let options;\n        if (ownerUsername !== 'plugin') {\n            options = (\n                <div className='item-actions'>\n                    <button\n                        id='createToken'\n                        className='style--none color--link'\n                        onClick={this.openCreateToken}\n                    >\n                        <FormattedMessage\n                            id='bot.manage.create_token'\n                            defaultMessage='Create New Token'\n                        />\n                    </button>\n                    {' - '}\n                    <Link to={`/${this.props.team.name}/integrations/bots/edit?id=${this.props.bot.user_id}`}>\n                        <FormattedMessage\n                            id='bots.manage.edit'\n                            defaultMessage='Edit'\n                        />\n                    </Link>\n                    {' - '}\n                    <button\n                        className='style--none color--link'\n                        onClick={this.disableBot}\n                    >\n                        <FormattedMessage\n                            id='bot.manage.disable'\n                            defaultMessage='Disable'\n                        />\n                    </button>\n                </div>\n            );\n        }\n        if (this.props.bot.delete_at !== 0) {\n            options = (\n                <div className='item-actions'>\n                    <button\n                        className='style--none color--link'\n                        onClick={this.enableBot}\n                    >\n                        <FormattedMessage\n                            id='bot.manage.enable'\n                            defaultMessage='Enable'\n                        />\n                    </button>\n                </div>\n            );\n        }\n\n        if (this.state.creatingTokenState === 'OPEN') {\n            tokenList.push(\n                <div\n                    key={'create'}\n                    className='bot-list__item'\n                >\n                    <div key={'create'}>\n                        <form\n                            className='form-horizontal'\n                            onSubmit={this.handleCreateToken}\n                        >\n                            <div className='row'>\n                                <label className='col-sm-auto control-label'>\n                                    <FormattedMessage\n                                        id='user.settings.tokens.name'\n                                        defaultMessage='Token Description: '\n                                    />\n                                </label>\n                                <div className='col-sm-4'>\n                                    <input\n                                        autoFocus={true}\n                                        className='form-control form-sm'\n                                        type='text'\n                                        maxLength={64}\n                                        value={this.state.token.description}\n                                        onChange={this.handleUpdateDescription}\n                                    />\n                                </div>\n                            </div>\n                            <div>\n                                <div className='pt-2 pb-2'>\n                                    <FormattedMessage\n                                        id='user.settings.tokens.nameHelp'\n                                        defaultMessage='Enter a description for your token to remember what it does.'\n                                    />\n                                </div>\n                                <label\n                                    id='clientError'\n                                    className='has-error is-empty'\n                                >\n                                    {this.state.error}\n                                </label>\n                                <div className='mt-2'>\n                                    <SaveButton\n                                        btnClass='btn-sm btn-primary'\n                                        savingMessage={\n                                            <FormattedMessage\n                                                id='user.settings.tokens.save'\n                                                defaultMessage='Save'\n                                            />\n                                        }\n                                        saving={false}\n                                    />\n                                    <button\n                                        className='btn btn-sm btn-link'\n                                        onClick={this.closeCreateToken}\n                                    >\n                                        <FormattedMessage\n                                            id='user.settings.tokens.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>,\n            );\n        } else if (this.state.creatingTokenState === 'CREATED') {\n            tokenList.push(\n                <div\n                    key={'created'}\n                    className='bot-list__item alert alert-warning'\n                >\n                    <div className='mb-2'>\n                        <WarningIcon additionalClassName='mr-2'/>\n                        <FormattedMessage\n                            id='user.settings.tokens.copy'\n                            defaultMessage=\"Please copy the access token below. You won't be able to see it again!\"\n                        />\n                    </div>\n                    <div className='whitespace--nowrap overflow--ellipsis'>\n                        <FormattedMessage\n                            id='user.settings.tokens.name'\n                            defaultMessage='Token Description: '\n                        />\n                        {this.state.token.description}\n                    </div>\n                    <div className='whitespace--nowrap overflow--ellipsis'>\n                        <FormattedMessage\n                            id='user.settings.tokens.id'\n                            defaultMessage='Token ID: '\n                        />\n                        {this.state.token.id}\n                    </div>\n                    <strong className='word-break--all'>\n                        <FormattedMessage\n                            id='user.settings.tokens.token'\n                            defaultMessage='Access Token: '\n                        />\n                        {this.state.token.token}\n                    </strong>\n                    <div className='mt-2'>\n                        <button\n                            className='btn btn-sm btn-primary'\n                            onClick={this.closeCreateToken}\n                        >\n                            <FormattedMessage\n                                id='bot.create_token.close'\n                                defaultMessage='Close'\n                            />\n                        </button>\n                    </div>\n                </div>,\n            );\n        }\n\n        const imageURL = Utils.imageURLForUser(this.props.user.id, this.props.user.last_picture_update);\n\n        return (\n            <div className='backstage-list__item'>\n                <div className={'bot-list-img-container'}>\n                    <img\n                        className={'bot-list-img'}\n                        alt={'bot image'}\n                        src={imageURL}\n                    />\n                </div>\n                <div className='item-details'>\n                    <div className='item-details__row d-flex flex-column flex-md-row justify-content-between'>\n                        <strong className='item-details__name'>\n                            {displayName + ' (@' + username + ')'}\n                        </strong>\n                        {options}\n                    </div>\n                    <div className='bot-details__description'>\n                        <Markdown message={description}/>\n                    </div>\n                    <div className='light small'>\n                        <FormattedMessage\n                            id='bots.managed_by'\n                            defaultMessage='Managed by '\n                        />\n                        {ownerUsername}\n                    </div>\n                    <div className='bot-list is-empty'>\n                        {tokenList}\n                    </div>\n                </div>\n                <ConfirmModal\n                    title={\n                        <FormattedMessage\n                            id='bots.token.delete'\n                            defaultMessage='Delete Token'\n                        />\n                    }\n                    message={\n                        <FormattedMessage\n                            id='bots.token.confirm_text'\n                            defaultMessage='Are you sure you want to delete the token?'\n                        />\n                    }\n                    confirmButtonText={\n                        <FormattedMessage\n                            id='bots.token.confirm'\n                            defaultMessage='Delete'\n                        />\n                    }\n                    show={this.state.confirmingId !== ''}\n                    onConfirm={this.revokeTokenConfirmed}\n                    onCancel={this.closeConfirm}\n                />\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Bot as BotType} from '@mattermost/types/bots';\nimport {RelationOneToOne} from '@mattermost/types/utilities';\nimport {UserProfile, UserAccessToken} from '@mattermost/types/users';\nimport {ActionResult} from 'mattermost-redux/types/actions';\nimport {Team} from '@mattermost/types/teams';\n\nimport {getSiteURL} from 'utils/url';\nimport * as Utils from 'utils/utils';\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\nimport Constants from 'utils/constants';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport Bot, {matchesFilter} from './bot';\n\ntype Props = {\n\n    /**\n    *  Map from botUserId to bot.\n    */\n    bots: Record<string, BotType>;\n\n    /**\n     * List of bot IDs managed by the app framework\n     */\n    appsBotIDs: string[];\n\n    /**\n     * Whether apps framework is enabled\n     */\n    appsEnabled: boolean;\n\n    /**\n    *  Map from botUserId to accessTokens.\n    */\n    accessTokens?: RelationOneToOne<UserProfile, Record<string, UserAccessToken>>;\n\n    /**\n    *  Map from botUserId to owner.\n    */\n    owners: Record<string, UserProfile>;\n\n    /**\n    *  Map from botUserId to user.\n    */\n    users: Record<string, UserProfile>;\n    createBots?: boolean;\n\n    actions: {\n\n        /**\n         * Ensure we have bot accounts\n         */\n        loadBots: (page?: number, perPage?: number) => Promise<{data: BotType[]; error?: Error}>;\n\n        /**\n        * Load access tokens for bot accounts\n        */\n        getUserAccessTokensForUser: (userId: string, page?: number, perPage?: number) => void;\n\n        /**\n        * Access token managment\n        */\n        createUserAccessToken: (userId: string, description: string) => Promise<{\n            data: {token: string; description: string; id: string; is_active: boolean} | null;\n            error?: Error;\n        }>;\n\n        revokeUserAccessToken: (tokenId: string) => Promise<{data: string; error?: Error}>;\n        enableUserAccessToken: (tokenId: string) => Promise<{data: string; error?: Error}>;\n        disableUserAccessToken: (tokenId: string) => Promise<{data: string; error?: Error}>;\n\n        /**\n        * Load owner of bot account\n        */\n        getUser: (userId: string) => void;\n\n        /**\n        * Disable a bot\n        */\n        disableBot: (userId: string) => Promise<ActionResult>;\n\n        /**\n        * Enable a bot\n        */\n        enableBot: (userId: string) => Promise<ActionResult>;\n\n        /**\n         * Load bot IDs managed by the apps\n         */\n        fetchAppsBotIDs: () => Promise<ActionResult>;\n    };\n\n    /**\n    *  Only used for routing since backstage is team based.\n    */\n    team: Team;\n}\n\ntype State = {\n    loading: boolean;\n}\n\nexport default class Bots extends React.PureComponent<Props, State> {\n    public constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            loading: true,\n        };\n    }\n\n    public componentDidMount(): void {\n        this.props.actions.loadBots(\n            Constants.Integrations.START_PAGE_NUM,\n            parseInt(Constants.Integrations.PAGE_SIZE, 10),\n        ).then(\n            (result) => {\n                if (result.data) {\n                    const promises = [];\n\n                    for (const bot of result.data) {\n                        // We don't need to wait for this and we need to accept failure in the case where bot.owner_id is a plugin id\n                        this.props.actions.getUser(bot.owner_id);\n\n                        // We want to wait for these.\n                        promises.push(this.props.actions.getUser(bot.user_id));\n                        promises.push(this.props.actions.getUserAccessTokensForUser(bot.user_id));\n                    }\n\n                    Promise.all(promises).then(() => {\n                        this.setState({loading: false});\n                    });\n                }\n            },\n        );\n        if (this.props.appsEnabled) {\n            this.props.actions.fetchAppsBotIDs();\n        }\n    }\n\n    DisabledSection(props: {hasDisabled: boolean; disabledBots: JSX.Element[]; filter?: string}): JSX.Element | null {\n        if (!props.hasDisabled) {\n            return null;\n        }\n        const botsToDisplay = React.Children.map(props.disabledBots, (child) => {\n            return React.cloneElement(child, {filter: props.filter});\n        });\n        return (\n            <React.Fragment>\n                <div className='bot-disabled'>\n                    <FormattedMessage\n                        id='bots.disabled'\n                        defaultMessage='Disabled'\n                    />\n                </div>\n                <div className='bot-list__disabled'>\n                    {botsToDisplay}\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    EnabledSection(props: {enabledBots: JSX.Element[]; filter?: string}): JSX.Element {\n        const botsToDisplay = React.Children.map(props.enabledBots, (child) => {\n            return React.cloneElement(child, {filter: props.filter});\n        });\n        return (\n            <div>\n                {botsToDisplay}\n            </div>\n        );\n    }\n\n    botToJSX = (bot: BotType): JSX.Element => {\n        return (\n            <Bot\n                key={bot.user_id}\n                bot={bot}\n                owner={this.props.owners[bot.user_id]}\n                user={this.props.users[bot.user_id]}\n                accessTokens={(this.props.accessTokens && this.props.accessTokens[bot.user_id]) || {}}\n                actions={this.props.actions}\n                team={this.props.team}\n                fromApp={this.props.appsBotIDs.includes(bot.user_id)}\n            />\n        );\n    };\n\n    bots = (filter?: string): Array<boolean | JSX.Element> => {\n        const bots = Object.values(this.props.bots).sort((a, b) => a.username.localeCompare(b.username));\n        const match = (bot: BotType) => matchesFilter(bot, filter, this.props.owners[bot.user_id]);\n        const enabledBots = bots.filter((bot) => bot.delete_at === 0).filter(match).map(this.botToJSX);\n        const disabledBots = bots.filter((bot) => bot.delete_at > 0).filter(match).map(this.botToJSX);\n        const sections = (\n            <div key='sections'>\n                <this.EnabledSection\n                    enabledBots={enabledBots}\n                />\n                <this.DisabledSection\n                    hasDisabled={disabledBots.length > 0}\n                    disabledBots={disabledBots}\n                />\n            </div>\n        );\n\n        return [sections, enabledBots.length > 0 || disabledBots.length > 0];\n    }\n\n    public render(): JSX.Element {\n        return (\n            <BackstageList\n                header={\n                    <FormattedMessage\n                        id='bots.manage.header'\n                        defaultMessage='Bot Accounts'\n                    />\n                }\n                addText={this.props.createBots &&\n                    <FormattedMessage\n                        id='bots.manage.add'\n                        defaultMessage='Add Bot Account'\n                    />\n                }\n                addLink={'/' + this.props.team.name + '/integrations/bots/add'}\n                addButtonId='addBotAccount'\n                emptyText={\n                    <FormattedMessage\n                        id='bots.manage.empty'\n                        defaultMessage='No bot accounts found'\n                    />\n                }\n                emptyTextSearch={\n                    <FormattedMarkdownMessage\n                        id='bots.manage.emptySearch'\n                        defaultMessage='No bot accounts match **{searchTerm}**'\n                    />\n                }\n                helpText={\n                    <React.Fragment>\n                        <FormattedMessage\n                            id='bots.manage.help1'\n                            defaultMessage='Use {botAccounts} to integrate with Mattermost through plugins or the API. Bot accounts are available to everyone on your server. '\n                            values={{\n                                botAccounts: (\n                                    <a\n                                        target='_blank'\n                                        rel='noopener noreferrer'\n                                        href='https://mattermost.com/pl/default-bot-accounts'\n                                    >\n                                        <FormattedMessage\n                                            id='bots.manage.bot_accounts'\n                                            defaultMessage='Bot Accounts'\n                                        />\n                                    </a>\n                                ),\n                            }}\n                        />\n                        <FormattedMarkdownMessage\n                            id='bots.manage.help2'\n                            defaultMessage={'Enable bot account creation in the [System Console]({siteURL}/admin_console/integrations/bot_accounts).'}\n                            values={{\n                                siteURL: getSiteURL(),\n                            }}\n                        />\n                    </React.Fragment>\n                }\n                searchPlaceholder={Utils.localizeMessage('bots.manage.search', 'Search Bot Accounts')}\n                loading={this.state.loading}\n            >\n                {this.bots}\n            </BackstageList>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch, ActionCreatorsMapObject} from 'redux';\n\nimport {getExternalBotAccounts} from 'mattermost-redux/selectors/entities/bots';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {loadBots, disableBot, enableBot} from 'mattermost-redux/actions/bots';\nimport {getAppsBotIDs as fetchAppsBotIDs} from 'mattermost-redux/actions/integrations';\nimport {getAppsBotIDs} from 'mattermost-redux/selectors/entities/integrations';\nimport {createUserAccessToken, revokeUserAccessToken, enableUserAccessToken, disableUserAccessToken, getUserAccessTokensForUser, getUser} from 'mattermost-redux/actions/users';\nimport * as UserSelectors from 'mattermost-redux/selectors/entities/users';\nimport {GlobalState} from '@mattermost/types/store';\nimport {GenericAction, ActionResult, ActionFunc} from 'mattermost-redux/types/actions';\nimport {Bot as BotType} from '@mattermost/types/bots';\nimport {UserProfile} from '@mattermost/types/users';\n\nimport {appsEnabled} from 'mattermost-redux/selectors/entities/apps';\n\nimport Bots from './bots';\n\nfunction mapStateToProps(state: GlobalState) {\n    const config = getConfig(state);\n    const createBots = config.EnableBotAccountCreation === 'true';\n    const bots = getExternalBotAccounts(state);\n    const botValues = Object.values(bots);\n    const owners = botValues.\n        reduce((result: Record<string, UserProfile>, bot: BotType) => {\n            result[bot.user_id] = UserSelectors.getUser(state, bot.owner_id);\n            return result;\n        }, {});\n    const users = botValues.\n        reduce((result: Record<string, UserProfile>, bot: BotType) => {\n            result[bot.user_id] = UserSelectors.getUser(state, bot.user_id);\n            return result;\n        }, {});\n\n    return {\n        createBots,\n        bots,\n        accessTokens: state.entities.admin.userAccessTokensByUser,\n        owners,\n        users,\n        appsBotIDs: getAppsBotIDs(state),\n        appsEnabled: appsEnabled(state),\n    };\n}\n\ntype Actions = {\n    fetchAppsBotIDs: () => Promise<{data: string[]}>;\n    loadBots: (page?: number, perPage?: number) => Promise<{data: BotType[]; error?: Error}>;\n    getUserAccessTokensForUser: (userId: string, page?: number, perPage?: number) => void;\n    createUserAccessToken: (userId: string, description: string) => Promise<{\n        data: {token: string; description: string; id: string; is_active: boolean} | null;\n        error?: Error;\n    }>;\n    revokeUserAccessToken: (tokenId: string) => Promise<{data: string; error?: Error}>;\n    enableUserAccessToken: (tokenId: string) => Promise<{data: string; error?: Error}>;\n    disableUserAccessToken: (tokenId: string) => Promise<{data: string; error?: Error}>;\n    getUser: (userId: string) => void;\n    disableBot: (userId: string) => Promise<ActionResult>;\n    enableBot: (userId: string) => Promise<ActionResult>;\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Actions>({\n            fetchAppsBotIDs,\n            loadBots,\n            getUserAccessTokensForUser,\n            createUserAccessToken,\n            revokeUserAccessToken,\n            enableUserAccessToken,\n            disableUserAccessToken,\n            getUser,\n            disableBot,\n            enableBot,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Bots);\n","export default __webpack_public_path__ + \"files/f6e98d6b5fccaa0c93bd8091b05295ad.png\";","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport LocalizedIcon from 'components/localized_icon';\n\nimport {t} from 'utils/i18n';\n\nexport default class BackstageHeader extends React.PureComponent {\n    static propTypes = {\n        children: PropTypes.node,\n    };\n\n    render() {\n        const children = [];\n\n        React.Children.forEach(this.props.children, (child, index) => {\n            if (index !== 0) {\n                children.push(\n                    <span\n                        key={'divider' + index}\n                        className='backstage-header__divider'\n                    >\n                        <LocalizedIcon\n                            className='fa fa-angle-right'\n                            title={{id: t('generic_icons.breadcrumb'), defaultMessage: 'Breadcrumb Icon'}}\n                        />\n                    </span>,\n                );\n            }\n\n            children.push(child);\n        });\n\n        return (\n            <div className='backstage-header'>\n                <h1>\n                    {children}\n                </h1>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as FileUtils from 'utils/file_utils';\n\nimport * as UserUtils from 'mattermost-redux/utils/user_utils';\nimport {General} from 'mattermost-redux/constants';\n\nimport BotDefaultIcon from 'images/bot_default_icon.png';\n\nimport {browserHistory} from 'utils/browser_history';\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport OverlayTrigger from 'components/overlay_trigger';\nimport Tooltip from 'components/tooltip';\nimport SpinnerButton from 'components/spinner_button';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport FormError from 'components/form_error';\nimport {AcceptedProfileImageTypes, Constants, ValidationErrors} from 'utils/constants';\nimport * as Utils from 'utils/utils';\n\nconst roleOptionSystemAdmin = 'System Admin';\nconst roleOptionMember = 'Member';\n\nexport default class AddBot extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        *  Only used for routing since backstage is team based.\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        *  Bot to edit (if editing)\n        */\n        bot: PropTypes.object,\n\n        /**\n        *  Bot user\n        */\n        user: PropTypes.object,\n\n        /**\n        *  Roles of the bot to edit (if editing)\n        */\n        roles: PropTypes.string,\n\n        /**\n        * Maximum upload file size (for bot account profile picture)\n        */\n        maxFileSize: PropTypes.number.isRequired,\n\n        /**\n         * Editing user has the MANAGE_SYSTEM permission\n        */\n        editingUserHasManageSystem: PropTypes.bool.isRequired,\n\n        /**\n        * Bot to edit\n        */\n        actions: PropTypes.shape({\n\n            /**\n            * Creates a new bot account.\n            */\n            createBot: PropTypes.func.isRequired,\n\n            /**\n            * Patches an existing bot account.\n            */\n            patchBot: PropTypes.func.isRequired,\n\n            /**\n            * Uploads a user profile image\n            */\n            uploadProfileImage: PropTypes.func.isRequired,\n\n            /**\n            * Set profile image to default\n            */\n            setDefaultProfileImage: PropTypes.func.isRequired,\n\n            /**\n            * For creating default access token\n            */\n            createUserAccessToken: PropTypes.func.isRequired,\n\n            /**\n            * For creating setting bot to system admin or special posting permissions\n            */\n            updateUserRoles: PropTypes.func.isRequired,\n        }),\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            error: '',\n            username: '',\n            displayName: '',\n            description: '',\n            adding: false,\n            image: BotDefaultIcon,\n            role: roleOptionMember,\n            postAll: false,\n            postChannels: false,\n        };\n\n        if (this.props.bot) {\n            this.state.username = this.props.bot.username;\n            this.state.displayName = this.props.bot.display_name;\n            this.state.description = this.props.bot.description;\n            this.state.role = UserUtils.isSystemAdmin(this.props.roles || '') ? roleOptionSystemAdmin : roleOptionMember;\n            this.state.postAll = UserUtils.hasPostAllRole(this.props.roles || '');\n            this.state.postChannels = UserUtils.hasPostAllPublicRole(this.props.roles || '');\n        }\n    }\n\n    updateUsername = (e) => {\n        this.setState({\n            username: e.target.value,\n        });\n    }\n\n    updateDisplayName = (e) => {\n        this.setState({\n            displayName: e.target.value,\n        });\n    }\n\n    updateDescription = (e) => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    updateRole = (e) => {\n        this.setState({\n            role: e.target.value,\n        });\n    }\n\n    updatePostAll = (e) => {\n        this.setState({\n            postAll: e.target.checked,\n        });\n    }\n\n    updatePostChannels = (e) => {\n        this.setState({\n            postChannels: e.target.checked,\n        });\n    }\n\n    updatePicture = (e) => {\n        if (e.target.files && e.target.files[0]) {\n            const pictureFile = e.target.files[0];\n            this.previewBlob = URL.createObjectURL(pictureFile);\n\n            var reader = new FileReader();\n            reader.onload = (e2) => {\n                const orientation = FileUtils.getExifOrientation(e2.target.result);\n                const orientationStyles = FileUtils.getOrientationStyles(orientation);\n\n                this.setState({\n                    image: this.previewBlob,\n                    orientationStyles,\n                });\n            };\n            reader.readAsArrayBuffer(pictureFile);\n            e.target.value = null;\n            this.setState({pictureFile});\n        } else {\n            this.setState({pictureFile: null, image: null});\n        }\n    }\n\n    setDefault = () => {\n        this.setState({pictureFile: 'default', image: BotDefaultIcon});\n    }\n\n    updateRoles = async (data) => {\n        let roles = General.SYSTEM_USER_ROLE;\n\n        if (this.state.role === roleOptionSystemAdmin) {\n            roles += ' ' + General.SYSTEM_ADMIN_ROLE;\n        } else if (this.state.postAll) {\n            roles += ' ' + General.SYSTEM_POST_ALL_ROLE;\n        } else if (this.state.postChannels) {\n            roles += ' ' + General.SYSTEM_POST_ALL_PUBLIC_ROLE;\n        }\n\n        const rolesResult = await this.props.actions.updateUserRoles(data.user_id, roles);\n        if (rolesResult) {\n            return rolesResult.error;\n        }\n\n        return null;\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (this.state.adding) {\n            return;\n        }\n\n        if (!this.state.username || this.state.username.length < 3) {\n            this.setState({\n                error: (\n                    <FormattedMessage\n                        id='bots.manage.add.invalid_username'\n                        defaultMessage='Usernames have to begin with a lowercase letter and be 3-22 characters long. You can use lowercase letters, numbers, periods, dashes, and underscores.'\n                    />\n                ),\n            });\n            return;\n        }\n\n        if (this.state.pictureFile) {\n            if (!AcceptedProfileImageTypes.includes(this.state.pictureFile.type)) {\n                this.setState({\n                    error: (\n                        <FormattedMessage\n                            id='user.settings.general.validImage'\n                            defaultMessage='Only BMP, JPG or PNG images may be used for profile pictures'\n                        />\n                    ),\n                });\n            } else if (this.state.pictureFile.size > this.props.maxFileSize) {\n                this.setState({\n                    error: (\n                        <FormattedMessage\n                            id='user.settings.general.imageTooLarge'\n                            defaultMessage='Unable to upload profile image. File is too large.'\n                        />\n                    ),\n                });\n            }\n        }\n\n        this.setState({\n            adding: true,\n            error: '',\n        });\n\n        const bot = {\n            username: this.state.username.toLowerCase().trim(),\n            display_name: this.state.displayName,\n            description: this.state.description,\n        };\n\n        let data;\n        let error;\n        if (this.props.bot) {\n            const result = await this.props.actions.patchBot(this.props.bot.user_id, bot);\n            if (result) {\n                data = result.data;\n                error = result.error;\n            } else {\n                error = Utils.localizeMessage('bot.edit_failed', 'Failed to edit bot');\n            }\n\n            if (!error) {\n                if (this.state.pictureFile && this.state.pictureFile !== 'default') {\n                    const imageResult = await this.props.actions.uploadProfileImage(data.user_id, this.state.pictureFile);\n                    error = imageResult.error;\n                } else if (this.state.pictureFile && this.state.pictureFile === 'default') {\n                    await this.props.actions.setDefaultProfileImage(data.user_id);\n                }\n            }\n\n            if (!error && data) {\n                error = this.updateRoles(data);\n            }\n\n            if (data) {\n                browserHistory.push(`/${this.props.team.name}/integrations/bots`);\n                return;\n            }\n        } else {\n            const usernameError = Utils.isValidBotUsername(bot.username);\n            if (usernameError) {\n                let errObj;\n                if (usernameError.id === ValidationErrors.INVALID_LAST_CHARACTER) {\n                    errObj = {\n                        adding: false,\n                        error: (\n                            <FormattedMessage\n                                id='bots.manage.add.invalid_last_char'\n                                defaultMessage='Bot usernames cannot have a period as the last character'\n                            />\n                        ),\n                    };\n                } else {\n                    errObj = {\n                        adding: false,\n                        error: (\n                            <FormattedMessage\n                                id='bots.manage.add.invalid_username'\n                                defaultMessage='Usernames must begin with a lowercase letter and be 3-22 characters long. You can use lowercase letters, numbers, periods, dashes, and underscores.'\n                            />\n                        ),\n                    };\n                }\n                this.setState(errObj);\n                return;\n            }\n\n            const result = await this.props.actions.createBot(bot);\n            if (result) {\n                data = result.data;\n                error = result.error;\n            } else {\n                error = Utils.localizeMessage('bot.create_failed', 'Failed to create bot');\n            }\n\n            let token = '';\n            if (!error) {\n                if (this.state.pictureFile && this.state.pictureFile !== 'default') {\n                    await this.props.actions.uploadProfileImage(data.user_id, this.state.pictureFile);\n                } else {\n                    await this.props.actions.setDefaultProfileImage(data.user_id);\n                }\n                const tokenResult = await this.props.actions.createUserAccessToken(data.user_id,\n                    Utils.localizeMessage('bot.token.default.description', 'Default Token'),\n                );\n\n                // On error just skip the confirmation because we have a bot without a token.\n                if (!tokenResult || tokenResult.error) {\n                    browserHistory.push(`/${this.props.team.name}/integrations/bots`);\n                    return;\n                }\n\n                token = tokenResult.data.token;\n            }\n\n            if (!error && data) {\n                error = this.updateRoles(data);\n            }\n\n            if (data) {\n                browserHistory.push(`/${this.props.team.name}/integrations/confirm?type=bots&id=${data.user_id}&token=${token}`);\n                return;\n            }\n        }\n\n        this.setState({\n            adding: false,\n        });\n\n        if (error) {\n            this.setState({\n                error: error.message,\n            });\n        }\n    }\n\n    render() {\n        let subtitle = (\n            <FormattedMessage\n                id='bots.manage.add'\n                defaultMessage='Add'\n            />\n        );\n        let buttonText = (\n            <FormattedMessage\n                id='bots.manage.add.create'\n                defaultMessage='Create Bot Account'\n            />\n        );\n        let buttonActiveText = (\n            <FormattedMessage\n                id='bots.manage.add.creating'\n                defaultMessage='Creating...'\n            />\n        );\n\n        // If we are editing\n        if (this.props.bot) {\n            subtitle = (\n                <FormattedMessage\n                    id='bots.manage.edit'\n                    defaultMessage='Edit'\n                />\n            );\n            buttonText = (\n                <FormattedMessage\n                    id='bots.manage.edit.title'\n                    defaultMessage='Update'\n                />\n            );\n            buttonActiveText = (\n                <FormattedMessage\n                    id='bots.manage.edit.editing'\n                    defaultMessage='Updating...'\n                />\n            );\n        }\n\n        let imageURL = '';\n        let removeImageIcon = (\n            <OverlayTrigger\n                delayShow={Constants.OVERLAY_TIME_DELAY}\n                placement='right'\n                overlay={(\n                    <Tooltip id='removeIcon'>\n                        <FormattedMessage\n                            id='bot.remove_profile_picture'\n                            defaultMessage='Remove Bot Icon'\n                        />\n                    </Tooltip>\n                )}\n            >\n                <a\n                    className={'bot-profile__remove'}\n                    onClick={this.setDefault}\n                >\n                    <span>{'×'}</span>\n                </a>\n            </OverlayTrigger>\n        );\n        let imageStyles = null;\n        if (this.props.bot && !this.state.pictureFile) {\n            if (this.props.user) {\n                imageURL = Utils.imageURLForUser(this.props.user.id, this.props.user.last_picture_update);\n            } else {\n                imageURL = Utils.imageURLForUser(this.props.bot.user_id);\n            }\n        } else {\n            imageURL = this.state.image;\n            imageStyles = this.state.orientationStyles;\n            if (this.state.image === BotDefaultIcon) {\n                removeImageIcon = null;\n            }\n        }\n\n        return (\n            <div className='backstage-content'>\n                <BackstageHeader>\n                    <Link to={`/${this.props.team.name}/integrations/bots`}>\n                        <FormattedMessage\n                            id='bots.manage.header'\n                            defaultMessage='Bot Accounts'\n                        />\n                    </Link>\n                    {subtitle}\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='username'\n                            >\n                                <FormattedMessage\n                                    id='bots.add.username'\n                                    defaultMessage='Username'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='username'\n                                    type='text'\n                                    maxLength='22'\n                                    className='form-control'\n                                    value={this.state.username}\n                                    onChange={this.updateUsername}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='bot.add.username.help'\n                                        defaultMessage='You can use lowercase letters, numbers, periods, dashes, and underscores.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='boticon'\n                            >\n                                <FormattedMessage\n                                    id='bots.add.icon'\n                                    defaultMessage='Bot Icon'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <div className={'bot-img-container'}>\n                                    <img\n                                        className={'bot-img'}\n                                        alt={'bot image'}\n                                        src={imageURL}\n                                        style={imageStyles}\n                                    />\n                                    {removeImageIcon}\n                                </div>\n                                <div\n                                    className='btn btn-sm btn-primary btn-file sel-btn'\n                                >\n                                    <FormattedMessage\n                                        id='bots.image.upload'\n                                        defaultMessage='Upload Image'\n                                    />\n                                    <input\n                                        accept={Constants.ACCEPT_STATIC_IMAGE}\n                                        type='file'\n                                        onChange={this.updatePicture}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='displayName'\n                            >\n                                <FormattedMessage\n                                    id='bots.add.displayName'\n                                    defaultMessage='Display Name'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='displayName'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.displayName}\n                                    onChange={this.updateDisplayName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='bot.add.display_name.help'\n                                        defaultMessage={'(Optional) You can choose to display your bot\\'s full name rather than its username.'}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='bot.add.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='1024'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='bot.add.description.help'\n                                        defaultMessage='(Optional) Let others know what this bot does.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='role'\n                            >\n                                <FormattedMessage\n                                    id='bot.add.role'\n                                    defaultMessage='Role'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <select\n                                    className='form-control'\n                                    value={this.state.role}\n                                    disabled={!this.props.editingUserHasManageSystem}\n                                    onChange={this.updateRole}\n                                >\n                                    <option\n                                        value={roleOptionMember}\n                                    >\n                                        {Utils.localizeMessage('bot.add.role.member', 'Member')}\n                                    </option>\n                                    <option\n                                        value={roleOptionSystemAdmin}\n                                    >\n                                        {Utils.localizeMessage('bot.add.role.admin', 'System Admin')}\n                                    </option>\n                                </select>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='bot.add.role.help'\n                                        defaultMessage='Choose what role the bot should have.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='row bot-profile__section'>\n                            <div className='col-md-5 col-sm-8 col-sm-offset-4'>\n                                <FormattedMarkdownMessage\n                                    id='admin.manage_roles.additionalRoles'\n                                    defaultMessage='Select additional permissions for the account. [Read more about roles and permissions](!https://developers.mattermost.com/integrate/admin-guide/admin-personal-access-token/).'\n                                />\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='postAll'\n                            >\n                                <FormattedMessage\n                                    id='bot.add.post_all'\n                                    defaultMessage='post:all'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8 checkbox'>\n                                <div className='checkbox no-padding'>\n                                    <label htmlFor='postAll'>\n                                        <input\n                                            id='postAll'\n                                            type='checkbox'\n                                            checked={this.state.postAll || this.state.role === roleOptionSystemAdmin}\n                                            onChange={this.updatePostAll}\n                                            disabled={!this.props.editingUserHasManageSystem || this.state.role === roleOptionSystemAdmin}\n                                        />\n                                        <FormattedMessage\n                                            id='bot.add.post_all.enabled'\n                                            defaultMessage='Enabled'\n                                        />\n                                    </label>\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='bot.add.post_all.help'\n                                        defaultMessage='Bot will have access to post to all Mattermost channels including direct messages.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='postChannels'\n                            >\n                                <FormattedMessage\n                                    id='bot.add.post_channels'\n                                    defaultMessage='post:channels'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8 checkbox'>\n                                <div className='checkbox no-padding'>\n                                    <label htmlFor='postChannels'>\n                                        <input\n                                            id='postChannels'\n                                            type='checkbox'\n                                            checked={this.state.postChannels || this.state.role === roleOptionSystemAdmin || this.state.postAll}\n                                            onChange={this.updatePostChannels}\n                                            disabled={!this.props.editingUserHasManageSystem || this.state.role === roleOptionSystemAdmin || this.state.postAll}\n                                        />\n                                        <FormattedMessage\n                                            id='bot.add.post_channels.enabled'\n                                            defaultMessage='Enabled'\n                                        />\n                                    </label>\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='bot.add.post_channels.help'\n                                        defaultMessage='Bot will have access to post to all Mattermost public channels.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.state.error]}\n                            />\n                            <Link\n                                className='btn btn-link btn-sm'\n                                to={`/${this.props.team.name}/integrations/bots`}\n                            >\n                                <FormattedMessage\n                                    id='bots.manage.add.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.adding}\n                                spinningText={buttonActiveText}\n                                onClick={this.handleSubmit}\n                                id='saveBot'\n                            >\n                                {buttonText}\n                            </SpinnerButton>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {updateUserRoles, uploadProfileImage, setDefaultProfileImage, createUserAccessToken} from 'mattermost-redux/actions/users';\nimport {createBot, patchBot} from 'mattermost-redux/actions/bots';\nimport {getBotAccounts} from 'mattermost-redux/selectors/entities/bots';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getUser} from 'mattermost-redux/selectors/entities/users';\nimport {haveISystemPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport AddBot from './add_bot.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const botId = (new URLSearchParams(ownProps.location.search)).get('id');\n    const bots = getBotAccounts(state);\n    const bot = bots ? bots[botId] : null;\n    const user = bot ? getUser(state, bot.user_id) : null;\n    const roles = user ? user.roles : null;\n    return {\n        maxFileSize: parseInt(config.MaxFileSize, 10),\n        bot,\n        roles,\n        editingUserHasManageSystem: haveISystemPermission(state, {permission: Permissions.MANAGE_SYSTEM}),\n        user,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            createBot,\n            patchBot,\n            uploadProfileImage,\n            setDefaultProfileImage,\n            createUserAccessToken,\n            updateUserRoles,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddBot);\n","export default __webpack_public_path__ + \"files/357ed0208b2f0eab27a2b67d4b5f129c.jpg\";","export default __webpack_public_path__ + \"files/445dd2ab20befc4a78c9e77bc9fd260f.png\";","export default __webpack_public_path__ + \"files/4651fd92bdc643485b9edc86e79e02e7.jpg\";","export default __webpack_public_path__ + \"files/8a9816ae9c0cd846ae780433ccb979f0.jpg\";","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nexport default class IntegrationOption extends React.PureComponent {\n    static get propTypes() {\n        return {\n            image: PropTypes.string.isRequired,\n            title: PropTypes.node.isRequired,\n            description: PropTypes.node.isRequired,\n            link: PropTypes.string.isRequired,\n        };\n    }\n\n    render() {\n        const {image, title, description, link} = this.props;\n\n        return (\n            <Link\n                to={link}\n                className='integration-option'\n            >\n                <img\n                    alt={'integration image'}\n                    className='integration-option__image'\n                    src={image}\n                />\n                <div className='integration-option__title'>\n                    {title}\n                </div>\n                <div className='integration-option__description'>\n                    {description}\n                </div>\n            </Link>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport BotAccountsIcon from 'images/bot_default_icon.png';\n\nimport * as Utils from 'utils/utils';\nimport IncomingWebhookIcon from 'images/incoming_webhook.jpg';\nimport OAuthIcon from 'images/oauth_icon.png';\nimport OutgoingWebhookIcon from 'images/outgoing_webhook.jpg';\nimport SlashCommandIcon from 'images/slash_command_icon.jpg';\n\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\nimport TeamPermissionGate from 'components/permissions_gates/team_permission_gate';\n\nimport IntegrationOption from './integration_option.jsx';\n\nexport default class Integrations extends React.PureComponent {\n    static get propTypes() {\n        return {\n            team: PropTypes.object,\n            user: PropTypes.object,\n            siteName: PropTypes.string,\n            enableIncomingWebhooks: PropTypes.bool,\n            enableOutgoingWebhooks: PropTypes.bool,\n            enableCommands: PropTypes.bool,\n            enableOAuthServiceProvider: PropTypes.bool,\n        };\n    }\n\n    componentDidMount() {\n        this.updateTitle();\n    }\n\n    updateTitle = () => {\n        const currentSiteName = this.props.siteName || '';\n        document.title = Utils.localizeMessage('admin.sidebar.integrations', 'Integrations') + ' - ' + this.props.team.display_name + ' ' + currentSiteName;\n    }\n\n    render() {\n        const options = [];\n\n        if (this.props.enableIncomingWebhooks) {\n            options.push(\n                <TeamPermissionGate\n                    teamId={this.props.team.id}\n                    permissions={[Permissions.MANAGE_INCOMING_WEBHOOKS]}\n                    key='incomingWebhookPermission'\n                >\n                    <IntegrationOption\n                        key='incomingWebhook'\n                        image={IncomingWebhookIcon}\n                        title={\n                            <FormattedMessage\n                                id='integrations.incomingWebhook.title'\n                                defaultMessage='Incoming Webhooks'\n                            />\n                        }\n                        description={\n                            <FormattedMessage\n                                id='integrations.incomingWebhook.description'\n                                defaultMessage='Incoming webhooks allow external integrations to send messages'\n                            />\n                        }\n                        link={'/' + this.props.team.name + '/integrations/incoming_webhooks'}\n                    />\n                </TeamPermissionGate>,\n            );\n        }\n\n        if (this.props.enableOutgoingWebhooks) {\n            options.push(\n                <TeamPermissionGate\n                    teamId={this.props.team.id}\n                    permissions={[Permissions.MANAGE_OUTGOING_WEBHOOKS]}\n                    key='outgoingWebhookPermission'\n                >\n                    <IntegrationOption\n                        key='outgoingWebhook'\n                        image={OutgoingWebhookIcon}\n                        title={\n                            <FormattedMessage\n                                id='integrations.outgoingWebhook.title'\n                                defaultMessage='Outgoing Webhooks'\n                            />\n                        }\n                        description={\n                            <FormattedMessage\n                                id='integrations.outgoingWebhook.description'\n                                defaultMessage='Outgoing webhooks allow external integrations to receive and respond to messages'\n                            />\n                        }\n                        link={'/' + this.props.team.name + '/integrations/outgoing_webhooks'}\n                    />\n                </TeamPermissionGate>,\n            );\n        }\n\n        if (this.props.enableCommands) {\n            options.push(\n                <TeamPermissionGate\n                    teamId={this.props.team.id}\n                    permissions={[Permissions.MANAGE_SLASH_COMMANDS]}\n                    key='commandPermission'\n                >\n                    <IntegrationOption\n                        key='command'\n                        image={SlashCommandIcon}\n                        title={\n                            <FormattedMessage\n                                id='integrations.command.title'\n                                defaultMessage='Slash Commands'\n                            />\n                        }\n                        description={\n                            <FormattedMessage\n                                id='integrations.command.description'\n                                defaultMessage='Slash commands send events to an external integration'\n                            />\n                        }\n                        link={'/' + this.props.team.name + '/integrations/commands'}\n                    />\n                </TeamPermissionGate>,\n            );\n        }\n\n        if (this.props.enableOAuthServiceProvider) {\n            options.push(\n                <SystemPermissionGate\n                    permissions={[Permissions.MANAGE_OAUTH]}\n                    key='oauth2AppsPermission'\n                >\n                    <IntegrationOption\n                        key='oauth2Apps'\n                        image={OAuthIcon}\n                        title={\n                            <FormattedMessage\n                                id='integrations.oauthApps.title'\n                                defaultMessage='OAuth 2.0 Applications'\n                            />\n                        }\n                        description={\n                            <FormattedMessage\n                                id='integrations.oauthApps.description'\n                                defaultMessage='Auth 2.0 allows external applications to make authorized requests to the Mattermost API'\n                            />\n                        }\n                        link={'/' + this.props.team.name + '/integrations/oauth2-apps'}\n                    />\n                </SystemPermissionGate>,\n            );\n        }\n\n        options.push(\n            <SystemPermissionGate\n                permissions={['manage_bots']}\n                key='botsPermissions'\n            >\n                <IntegrationOption\n                    image={BotAccountsIcon}\n                    title={\n                        <FormattedMessage\n                            id='bots.manage.header'\n                            defaultMessage='Bot Accounts'\n                        />\n                    }\n                    description={\n                        <FormattedMessage\n                            id='bots.manage.description'\n                            defaultMessage='Use bot accounts to integrate with Mattermost through plugins or the API'\n                        />\n                    }\n                    link={'/' + this.props.team.name + '/integrations/bots'}\n                />\n            </SystemPermissionGate>,\n        );\n\n        return (\n            <div className='backstage-content row'>\n                <div className='backstage-header'>\n                    <h1>\n                        <FormattedMessage\n                            id='integrations.header'\n                            defaultMessage='Integrations'\n                        />\n                    </h1>\n                </div>\n                <div className='backstage-list__help'>\n                    <FormattedMessage\n                        id='integrations.help'\n                        defaultMessage='Visit the {appDirectory} to find self-hosted, third-party apps and integrations for Mattermost.'\n                        values={{\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://mattermost.com/marketplace'\n                                >\n                                    <FormattedMessage\n                                        id='integrations.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                </div>\n                <div className='integrations-list d-flex flex-wrap'>\n                    {options}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport Integrations from './integrations.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const siteName = config.SiteName;\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\n    const enableCommands = config.EnableCommands === 'true';\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\n\n    return {\n        siteName,\n        enableIncomingWebhooks,\n        enableOutgoingWebhooks,\n        enableCommands,\n        enableOAuthServiceProvider,\n    };\n}\n\nexport default connect(mapStateToProps)(Integrations);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {useCallback} from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {openModal as openModalAction} from 'actions/views/modals';\n\nimport ConfirmModalRedux from 'components/confirm_modal_redux';\nimport WarningIcon from 'components/widgets/icons/fa_warning_icon';\n\nconst ModalId = 'delete_integration_confirm';\n\ntype Props = {\n    confirmButtonText?: React.ReactNode;\n    linkText?: React.ReactNode;\n    modalMessage?: React.ReactNode;\n    modalTitle?: React.ReactNode;\n    onDelete: () => void;\n    openModal: typeof openModalAction;\n};\n\nexport default function DeleteIntegrationLink(props: Props) {\n    const {\n        confirmButtonText = (\n            <FormattedMessage\n                id='integrations.delete.confirm.button'\n                defaultMessage='Delete'\n            />\n        ),\n        linkText = (\n            <FormattedMessage\n                id='installed_integrations.delete'\n                defaultMessage='Delete'\n            />\n        ),\n        modalMessage,\n        modalTitle = (\n            <FormattedMessage\n                id='integrations.delete.confirm.title'\n                defaultMessage='Delete Integration'\n            />\n        ),\n        onDelete,\n        openModal,\n    } = props;\n\n    const onClick = useCallback(() => {\n        openModal({\n            modalId: ModalId,\n            dialogProps: {\n                confirmButtonText,\n                message: (\n                    <div className='alert alert-warning'>\n                        <WarningIcon additionalClassName='mr-1'/>\n                        {props.modalMessage}\n                    </div>\n                ),\n                onConfirm: onDelete,\n                title: modalTitle,\n            },\n            dialogType: ConfirmModalRedux,\n        });\n    }, [confirmButtonText, modalMessage, modalTitle, onDelete, openModal]);\n\n    return (\n        <button\n            className='color--link style--none'\n            onClick={onClick}\n        >\n            {linkText}\n        </button>\n    );\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {openModal} from 'actions/views/modals';\n\nimport DeleteIntegrationLink from './delete_integration_link';\n\nconst mapDispatchToProps = {\n    openModal,\n};\n\nexport default connect(null, mapDispatchToProps)(DeleteIntegrationLink);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport DeleteIntegrationLink from 'components/integrations/delete_integration_link';\n\ntype Props = {\n    onDelete: () => void;\n}\n\nexport default function DeleteEmojiButton(props: Props) {\n    return (\n        <DeleteIntegrationLink\n            confirmButtonText={\n                <FormattedMessage\n                    id='emoji_list.delete.confirm.button'\n                    defaultMessage='Delete'\n                />\n            }\n            linkText={\n                <FormattedMessage\n                    id='emoji_list.delete'\n                    defaultMessage='Delete'\n                />\n            }\n            modalMessage={\n                <FormattedMessage\n                    id='emoji_list.delete.confirm.msg'\n                    defaultMessage='This action permanently deletes the custom emoji. Are you sure you want to delete it?'\n                />\n            }\n            modalTitle={\n                <FormattedMessage\n                    id='emoji_list.delete.confirm.title'\n                    defaultMessage='Delete Custom Emoji'\n                />\n            }\n            onDelete={props.onDelete}\n        />\n    );\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport Permissions from 'mattermost-redux/constants/permissions';\nimport {Client4} from 'mattermost-redux/client';\nimport {CustomEmoji} from '@mattermost/types/emojis';\nimport {ActionFunc} from 'mattermost-redux/types/actions';\n\nimport AnyTeamPermissionGate from 'components/permissions_gates/any_team_permission_gate';\n\nimport DeleteEmojiButton from './delete_emoji_button';\n\nexport type Props = {\n    emoji: CustomEmoji;\n    emojiId?: string;\n    currentUserId: string;\n    creatorDisplayName: string;\n    creatorUsername?: string;\n    onDelete?: (emojiId: string) => void;\n    actions: {\n        deleteCustomEmoji: (emojiId: string) => ActionFunc;\n    };\n}\n\nexport default class EmojiListItem extends React.PureComponent<Props> {\n    static defaultProps = {\n        emoji: {} as CustomEmoji,\n        currentUserId: '',\n        creatorDisplayName: '',\n    }\n\n    handleDelete = (): void => {\n        if (this.props.onDelete) {\n            this.props.onDelete(this.props.emoji.id);\n        }\n\n        this.props.actions.deleteCustomEmoji(this.props.emoji.id);\n    }\n\n    render(): JSX.Element {\n        const emoji = this.props.emoji;\n        const creatorUsername = this.props.creatorUsername;\n        let creatorDisplayName = this.props.creatorDisplayName;\n\n        if (creatorUsername && creatorUsername !== creatorDisplayName) {\n            creatorDisplayName += ' (@' + creatorUsername + ')';\n        }\n\n        let deleteButton = <DeleteEmojiButton onDelete={this.handleDelete}/>;\n\n        if (emoji.creator_id === this.props.currentUserId) {\n            deleteButton = (\n                <AnyTeamPermissionGate permissions={[Permissions.DELETE_EMOJIS]}>\n                    {deleteButton}\n                </AnyTeamPermissionGate>\n            );\n        } else {\n            deleteButton = (\n                <AnyTeamPermissionGate permissions={[Permissions.DELETE_EMOJIS]}>\n                    <AnyTeamPermissionGate permissions={[Permissions.DELETE_OTHERS_EMOJIS]}>\n                        {deleteButton}\n                    </AnyTeamPermissionGate>\n                </AnyTeamPermissionGate>\n            );\n        }\n\n        return (\n            <tr className='backstage-list__item'>\n                <td className='emoji-list__name'>\n                    {':' + emoji.name + ':'}\n                </td>\n                <td className='emoji-list__image'>\n                    <span\n                        className='emoticon'\n                        style={{backgroundImage: 'url(' + Client4.getCustomEmojiImageUrl(emoji.id) + ')'}}\n                    />\n                </td>\n                <td className='emoji-list__creator'>\n                    {creatorDisplayName}\n                </td>\n                <td className='emoji-list-item_actions'>\n                    {deleteButton}\n                </td>\n            </tr>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch} from 'redux';\n\nimport {getUser, getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport {deleteCustomEmoji} from 'mattermost-redux/actions/emojis';\n\nimport {GenericAction} from 'mattermost-redux/types/actions';\n\nimport {getDisplayNameByUser} from 'utils/utils';\n\nimport {GlobalState} from '../../../types/store';\n\nimport EmojiListItem, {Props} from './emoji_list_item';\n\nfunction mapStateToProps(state: GlobalState, ownProps: Props) {\n    const emoji = state.entities.emojis.customEmoji[ownProps.emojiId!];\n    const creator = getUser(state, emoji.creator_id);\n\n    return {\n        emoji,\n        creatorDisplayName: getDisplayNameByUser(state, creator),\n        creatorUsername: creator ? creator.username : '',\n        currentUserId: getCurrentUserId(state),\n        currentTeam: getCurrentTeam(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators({\n            deleteCustomEmoji,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmojiListItem);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {ChangeEvent, ChangeEventHandler} from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Emoji} from 'mattermost-redux/constants';\nimport {CustomEmoji} from '@mattermost/types/emojis';\nimport {ServerError} from '@mattermost/types/errors';\nimport {deleteCustomEmoji} from 'mattermost-redux/actions/emojis';\n\nimport LoadingScreen from 'components/loading_screen';\nimport SaveButton from 'components/save_button';\nimport EmojiListItem from 'components/emoji/emoji_list_item';\nimport NextIcon from 'components/widgets/icons/fa_next_icon';\nimport PreviousIcon from 'components/widgets/icons/fa_previous_icon';\nimport SearchIcon from 'components/widgets/icons/fa_search_icon';\nimport LocalizedInput from 'components/localized_input/localized_input';\n\nimport {t} from 'utils/i18n';\n\nconst EMOJI_PER_PAGE = 50;\nconst EMOJI_SEARCH_DELAY_MILLISECONDS = 200;\n\ninterface Props {\n\n    /**\n     * Custom emojis on the system.\n     */\n    emojiIds: string[];\n\n    /**\n     * Function to scroll list to top.\n     */\n    scrollToTop: () => void;\n    actions: {\n\n        /**\n         * Get pages of custom emojis.\n         */\n        getCustomEmojis: (page?: number, perPage?: number, sort?: string, loadUsers?: boolean) => Promise<{ data: CustomEmoji[]; error: ServerError }>;\n\n        /**\n         * Search custom emojis.\n         */\n        searchCustomEmojis: (term: string, options: any, loadUsers: boolean) => Promise<{ data: CustomEmoji[]; error: ServerError }>;\n    };\n\n}\n\ninterface State {\n    loading: boolean;\n    page: number;\n    nextLoading: boolean;\n    searchEmojis: string[] | null;\n    missingPages: boolean;\n}\n\nexport default class EmojiList extends React.PureComponent<Props, State> {\n    private searchTimeout: NodeJS.Timeout | null;\n\n    constructor(props: Props) {\n        super(props);\n        this.searchTimeout = null;\n        this.state = {\n            loading: true,\n            page: 0,\n            nextLoading: false,\n            searchEmojis: null,\n            missingPages: true,\n        };\n    }\n\n    async componentDidMount(): Promise<void> {\n        this.props.actions.getCustomEmojis(0, EMOJI_PER_PAGE + 1, Emoji.SORT_BY_NAME, true).\n            then(({data}: { data: CustomEmoji[] }) => {\n                this.setState({loading: false});\n                if (data && data.length < EMOJI_PER_PAGE) {\n                    this.setState({missingPages: false});\n                }\n            });\n    }\n\n    nextPage = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n        if (e) {\n            e.preventDefault();\n        }\n\n        const next = this.state.page + 1;\n        this.setState({nextLoading: true});\n        this.props.actions.getCustomEmojis(next, EMOJI_PER_PAGE, Emoji.SORT_BY_NAME, true).\n            then(({data}: { data: CustomEmoji[] }) => {\n                this.setState({page: next, nextLoading: false});\n                if (data && data.length < EMOJI_PER_PAGE) {\n                    this.setState({missingPages: false});\n                }\n\n                this.props.scrollToTop();\n            });\n    };\n    previousPage = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n        if (e) {\n            e.preventDefault();\n        }\n\n        this.setState({\n            page: this.state.page - 1,\n            nextLoading: false,\n            missingPages: true,\n        });\n\n        this.props.scrollToTop();\n    };\n\n    onSearchChange: ChangeEventHandler = (e: ChangeEvent): void => {\n        if (!e || !e.target) {\n            return;\n        }\n\n        const term = (e.target as HTMLInputElement).value || '';\n\n        clearTimeout(this.searchTimeout!);\n\n        this.searchTimeout = setTimeout(async () => {\n            if (term.trim() === '') {\n                this.setState({searchEmojis: null, page: 0});\n                return;\n            }\n\n            this.setState({loading: true});\n\n            const {data}: { data: CustomEmoji[] } = await this.props.actions.searchCustomEmojis(\n                term,\n                {},\n                true,\n            );\n\n            if (data) {\n                this.setState({\n                    searchEmojis: data.map((em: CustomEmoji) => em.id),\n                    loading: false,\n                });\n            } else {\n                this.setState({searchEmojis: [], loading: false});\n            }\n        }, EMOJI_SEARCH_DELAY_MILLISECONDS);\n    };\n\n    deleteFromSearch = (emojiId: string): void => {\n        if (!this.state.searchEmojis) {\n            return;\n        }\n\n        const index = this.state.searchEmojis.indexOf(emojiId);\n\n        if (index < 0) {\n            return;\n        }\n\n        const newSearchEmojis = [...this.state.searchEmojis];\n        newSearchEmojis.splice(index, 1);\n        this.setState({searchEmojis: newSearchEmojis});\n    };\n\n    render(): JSX.Element {\n        const searchEmojis = this.state.searchEmojis;\n        const emojis = [];\n        let nextButton;\n        let previousButton;\n\n        if (this.state.loading) {\n            emojis.push(\n                <tr\n                    key='loading'\n                    className='backstage-list__item backstage-list__empty'\n                >\n                    <td colSpan={4}>\n                        <LoadingScreen key='loading'/>\n                    </td>\n                </tr>,\n            );\n        } else if (\n            this.props.emojiIds.length === 0 ||\n            (searchEmojis && searchEmojis.length === 0)\n        ) {\n            emojis.push(\n                <tr\n                    key='empty'\n                    className='backstage-list__item backstage-list__empty'\n                >\n                    <td colSpan={4}>\n                        <FormattedMessage\n                            id='emoji_list.empty'\n                            defaultMessage='No custom emoji found'\n                        />\n                    </td>\n                </tr>,\n            );\n        } else if (searchEmojis) {\n            searchEmojis.forEach((emojiId: string) => {\n                emojis.push(\n                    <EmojiListItem\n                        key={'emoji_search_item' + emojiId}\n                        emojiId={emojiId}\n                        onDelete={this.deleteFromSearch}\n                        actions={{deleteCustomEmoji}}\n                    />,\n                );\n            });\n        } else {\n            const pageStart = this.state.page * EMOJI_PER_PAGE;\n            const pageEnd = pageStart + EMOJI_PER_PAGE;\n            const emojisToDisplay = this.props.emojiIds.slice(pageStart, pageEnd);\n\n            emojisToDisplay.forEach((emojiId: string) => {\n                emojis.push(\n                    <EmojiListItem\n                        key={'emoji_list_item' + emojiId}\n                        emojiId={emojiId}\n                        actions={{deleteCustomEmoji}}\n                    />,\n                );\n            });\n\n            if (this.state.missingPages) {\n                const buttonContents = (\n                    <span>\n                        <FormattedMessage\n                            id='filtered_user_list.next'\n                            defaultMessage='Next'\n                        />\n                        <NextIcon additionalClassName='ml-2'/>\n                    </span>\n                );\n\n                nextButton = (\n                    <SaveButton\n                        btnClass='btn-link'\n                        extraClasses='pull-right'\n                        onClick={this.nextPage}\n                        saving={this.state.nextLoading}\n                        disabled={this.state.nextLoading}\n                        defaultMessage={buttonContents}\n                        savingMessage={buttonContents}\n                    />\n                );\n            }\n\n            if (this.state.page > 0) {\n                previousButton = (\n                    <button\n                        className='btn btn-link'\n                        onClick={this.previousPage}\n                    >\n                        <PreviousIcon additionalClassName='mr-2'/>\n                        <FormattedMessage\n                            id='filtered_user_list.prev'\n                            defaultMessage='Previous'\n                        />\n                    </button>\n                );\n            }\n        }\n\n        return (\n            <div>\n                <div className='backstage-filters'>\n                    <div className='backstage-filter__search'>\n                        <SearchIcon/>\n                        <LocalizedInput\n                            type='search'\n                            className='form-control'\n                            placeholder={{\n                                id: t('emoji_list.search'),\n                                defaultMessage: 'Search Custom Emoji',\n                            }}\n                            onChange={this.onSearchChange}\n                            style={style.search}\n                        />\n                    </div>\n                </div>\n                <span className='backstage-list__help'>\n                    <p>\n                        <FormattedMessage\n                            id='emoji_list.help'\n                            defaultMessage=\"Custom emoji are available to everyone on your server. Type ':' followed by two characters in a message box to bring up the emoji selection menu.\"\n                        />\n                    </p>\n                    <p>\n                        <FormattedMessage\n                            id='emoji_list.help2'\n                            defaultMessage=\"Tip: If you add #, ##, or ### as the first character on a new line containing emoji, you can use larger sized emoji. To try it out, send a message such as: '# :smile:'.\"\n                        />\n                    </p>\n                </span>\n                <div className='backstage-list'>\n                    <table className='emoji-list__table'>\n                        <thead>\n                            <tr className='backstage-list__item emoji-list__table-header'>\n                                <th className='emoji-list__name'>\n                                    <FormattedMessage\n                                        id='emoji_list.name'\n                                        defaultMessage='Name'\n                                    />\n                                </th>\n                                <th className='emoji-list__image'>\n                                    <FormattedMessage\n                                        id='emoji_list.image'\n                                        defaultMessage='Image'\n                                    />\n                                </th>\n                                <th className='emoji-list__creator'>\n                                    <FormattedMessage\n                                        id='emoji_list.creator'\n                                        defaultMessage='Creator'\n                                    />\n                                </th>\n                                <th className='emoji-list_actions'>\n                                    <FormattedMessage\n                                        id='emoji_list.actions'\n                                        defaultMessage='Actions'\n                                    />\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>{emojis}</tbody>\n                    </table>\n                </div>\n                <div className='filter-controls pt-3'>\n                    {previousButton}\n                    {nextButton}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst style = {\n    search: {flexGrow: 0, flexShrink: 0},\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {ActionCreatorsMapObject, bindActionCreators, Dispatch} from 'redux';\n\nimport {getCustomEmojiIdsSortedByName} from 'mattermost-redux/selectors/entities/emojis';\nimport {ActionFunc, GenericAction} from 'mattermost-redux/types/actions';\nimport {getCustomEmojis, searchCustomEmojis} from 'mattermost-redux/actions/emojis';\nimport {GlobalState} from '@mattermost/types/store';\nimport {CustomEmoji} from '@mattermost/types/emojis';\nimport {ServerError} from '@mattermost/types/errors';\n\nimport EmojiList from './emoji_list';\n\ntype Actions = {\n    getCustomEmojis: (page?: number, perPage?: number, sort?: string, loadUsers?: boolean) => Promise<{ data: CustomEmoji[]; error: ServerError }>;\n    searchCustomEmojis: (term: string, options: any, loadUsers: boolean) => Promise<{ data: CustomEmoji[]; error: ServerError }>;\n}\n\nfunction mapStateToProps(state: GlobalState) {\n    return {\n        emojiIds: getCustomEmojiIdsSortedByName(state) || [],\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Actions>({\n            getCustomEmojis,\n            searchCustomEmojis,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmojiList);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport Permissions from 'mattermost-redux/constants/permissions';\n\nimport * as Utils from 'utils/utils';\nimport AnyTeamPermissionGate from 'components/permissions_gates/any_team_permission_gate';\n\nimport EmojiList from './emoji_list';\n\ntype Props = {\n    teamId: string;\n    teamName?: string;\n    teamDisplayName?: string;\n    siteName?: string;\n    scrollToTop(): void;\n    actions: {\n        loadRolesIfNeeded(roles: Iterable<string>): void;\n    };\n}\n\nexport default class EmojiPage extends React.PureComponent<Props> {\n    static defaultProps = {\n        teamName: '',\n        teamDisplayName: '',\n        siteName: '',\n    }\n\n    componentDidMount() {\n        this.updateTitle();\n        this.props.actions.loadRolesIfNeeded(['system_admin', 'team_admin', 'system_user', 'team_user']);\n    }\n\n    updateTitle = () => {\n        document.title = Utils.localizeMessage('custom_emoji.header', 'Custom Emoji') + ' - ' + this.props.teamDisplayName + ' ' + this.props.siteName;\n    }\n\n    componentDidUpdate(prevProps: Props) {\n        if (this.props.siteName !== prevProps.siteName) {\n            this.updateTitle();\n        }\n    }\n\n    render() {\n        return (\n            <div className='backstage-content emoji-list'>\n                <div className='backstage-header'>\n                    <h1>\n                        <FormattedMessage\n                            id='emoji_list.header'\n                            defaultMessage='Custom Emoji'\n                        />\n                    </h1>\n                    <AnyTeamPermissionGate permissions={[Permissions.CREATE_EMOJIS]}>\n                        <Link\n                            className='add-link'\n                            to={'/' + this.props.teamName + '/emoji/add'}\n                        >\n                            <button\n                                type='button'\n                                className='btn btn-primary'\n                            >\n                                <FormattedMessage\n                                    id='emoji_list.add'\n                                    defaultMessage='Add Custom Emoji'\n                                />\n                            </button>\n                        </Link>\n                    </AnyTeamPermissionGate>\n                </div>\n                <EmojiList scrollToTop={this.props.scrollToTop}/>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch} from 'redux';\n\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\nimport {loadRolesIfNeeded} from 'mattermost-redux/actions/roles';\n\nimport {GlobalState} from 'types/store';\n\nimport EmojiPage from 'components/emoji/emoji_page';\n\nfunction mapStateToProps(state: GlobalState) {\n    const team = getCurrentTeam(state) || {};\n\n    return {\n        teamId: team.id,\n        teamName: team.name,\n        teamDisplayName: team.display_name,\n        siteName: state.entities.general.config.SiteName,\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadRolesIfNeeded,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmojiPage);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {ChangeEvent, FormEvent, SyntheticEvent} from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {UserProfile} from '@mattermost/types/users';\nimport {CustomEmoji} from '@mattermost/types/emojis';\nimport {Team} from '@mattermost/types/teams';\n\nimport {ActionResult} from 'mattermost-redux/types/actions';\n\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport FormError from 'components/form_error';\nimport SpinnerButton from 'components/spinner_button';\nimport {browserHistory} from 'utils/browser_history';\nimport {localizeMessage} from 'utils/utils';\nimport {Constants} from 'utils/constants';\n\nimport EmojiMap from 'utils/emoji_map';\n\nexport interface AddEmojiProps {\n    actions: {\n        createCustomEmoji: (term: CustomEmoji, imageData: File) => Promise<ActionResult>;\n    };\n    emojiMap: EmojiMap;\n    user: UserProfile;\n    team: Team;\n}\n\ntype EmojiCreateArgs = {\n    creator_id: string;\n    name: string;\n};\n\ntype AddEmojiState = {\n    name: string;\n    image: File | null;\n    imageUrl: string | ArrayBuffer | null;\n    saving: boolean;\n    error: React.ReactNode;\n};\n\ninterface AddErrorResponse {\n    error: Error;\n}\n\ninterface AddEmojiResponse {\n    data: CustomEmoji;\n}\n\nexport default class AddEmoji extends React.PureComponent<AddEmojiProps, AddEmojiState> {\n    constructor(props: AddEmojiProps) {\n        super(props);\n\n        this.state = {\n            name: '',\n            image: null,\n            imageUrl: '',\n            saving: false,\n            error: null,\n        };\n    }\n\n    handleFormSubmit = async (e: FormEvent<HTMLFormElement>): Promise<void> => {\n        return this.handleSubmit(e);\n    }\n\n    handleSaveButtonClick = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): Promise<void> => {\n        return this.handleSubmit(e);\n    }\n\n    handleSubmit = async (e: SyntheticEvent<unknown>): Promise<void> => {\n        const {actions, emojiMap, user, team} = this.props;\n        const {image, name, saving} = this.state;\n\n        e.preventDefault();\n\n        if (saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            error: null,\n        });\n\n        const emoji: EmojiCreateArgs = {\n            creator_id: user.id,\n            name: name.trim().toLowerCase(),\n        };\n\n        // trim surrounding colons if the user accidentally included them in the name\n        if (emoji.name.startsWith(':') && emoji.name.endsWith(':')) {\n            emoji.name = emoji.name.substring(1, emoji.name.length - 1);\n        }\n\n        if (!emoji.name) {\n            this.setState({\n                saving: false,\n                error: (\n                    <FormattedMessage\n                        id='add_emoji.nameRequired'\n                        defaultMessage='A name is required for the emoji'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if ((/[^a-z0-9+_-]/).test(emoji.name)) {\n            this.setState({\n                saving: false,\n                error: (\n                    <FormattedMessage\n                        id='add_emoji.nameInvalid'\n                        defaultMessage=\"An emoji's name can only contain lowercase letters, numbers, and the symbols '-', '+' and '_'.\"\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (emojiMap.hasSystemEmoji(emoji.name)) {\n            this.setState({\n                saving: false,\n                error: (\n                    <FormattedMessage\n                        id='add_emoji.nameTaken'\n                        defaultMessage='This name is already in use by a system emoji. Please choose another name.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (emojiMap.has(emoji.name)) {\n            this.setState({\n                saving: false,\n                error: (\n                    <FormattedMessage\n                        id='add_emoji.customNameTaken'\n                        defaultMessage='This name is already in use by a custom emoji. Please choose another name.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (!image) {\n            this.setState({\n                saving: false,\n                error: (\n                    <FormattedMessage\n                        id='add_emoji.imageRequired'\n                        defaultMessage='An image is required for the emoji'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const maxFileSizeBytes = 1024 * 1024;\n        if (image.size > maxFileSizeBytes) {\n            this.setState({\n                saving: false,\n                error: (\n                    <FormattedMessage\n                        id='add_emoji.imageTooLarge'\n                        defaultMessage='Unable to create emoji. Image must be less than 1 MB in size.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const response = await actions.createCustomEmoji(emoji as CustomEmoji, image);\n\n        if ('data' in response) {\n            const savedEmoji = response as AddEmojiResponse;\n            if (savedEmoji && savedEmoji.data.name === emoji.name) {\n                browserHistory.push('/' + team.name + '/emoji');\n                return;\n            }\n        }\n\n        if ('error' in response) {\n            const responseError = response as AddErrorResponse;\n            if (responseError) {\n                this.setState({\n                    saving: false,\n                    error: responseError.error.message,\n                });\n\n                return;\n            }\n        }\n\n        const genericError = (\n            <FormattedMessage\n                id='add_emoji.failedToAdd'\n                defaultMessage='Something when wrong when adding the custom emoji.'\n            />\n        );\n\n        this.setState({\n            saving: false,\n            error: (genericError),\n        });\n    };\n\n    updateName = (e: ChangeEvent<HTMLInputElement>): void => {\n        this.setState({\n            name: e.target.value,\n        });\n    };\n\n    updateImage = (e: ChangeEvent<HTMLInputElement>): void => {\n        if (e.target.files == null || e.target.files.length === 0) {\n            this.setState({\n                image: null,\n                imageUrl: '',\n            });\n\n            return;\n        }\n\n        const image = e.target.files![0];\n\n        const reader = new FileReader();\n        reader.onload = () => {\n            this.setState({\n                image,\n                imageUrl: reader.result,\n            });\n        };\n        reader.readAsDataURL(image);\n    };\n\n    render(): JSX.Element {\n        let filename = null;\n        if (this.state.image) {\n            filename = (\n                <span className='add-emoji__filename'>\n                    {this.state.image.name}\n                </span>\n            );\n        }\n\n        let preview = null;\n        if (this.state.imageUrl) {\n            preview = (\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='preview'\n                    >\n                        <FormattedMessage\n                            id='add_emoji.preview'\n                            defaultMessage='Preview'\n                        />\n                    </label>\n                    <div className='col-md-5 col-sm-8 add-emoji__preview'>\n                        <FormattedMessage\n                            id='add_emoji.preview.sentence'\n                            defaultMessage='This is a sentence with {image} in it.'\n                            values={{\n                                image: (\n                                    <span\n                                        className='emoticon'\n                                        style={{backgroundImage: 'url(' + this.state.imageUrl + ')'}}\n                                    />\n                                ),\n                            }}\n                        />\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className='backstage-content row'>\n                <BackstageHeader>\n                    <Link to={'/' + this.props.team.name + '/emoji'}>\n                        <FormattedMessage\n                            id='emoji_list.header'\n                            defaultMessage='Custom Emoji'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id='add_emoji.header'\n                        defaultMessage='Add'\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleFormSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='name'\n                            >\n                                <FormattedMessage\n                                    id='add_emoji.name'\n                                    defaultMessage='Name'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='name'\n                                    type='text'\n                                    maxLength={64}\n                                    className='form-control'\n                                    value={this.state.name}\n                                    onChange={this.updateName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_emoji.name.help'\n                                        defaultMessage=\"Name your emoji. The name can be up to 64 characters, and can contain lowercase letters, numbers, and the symbols '-' and '_'.\"\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='image'\n                            >\n                                <FormattedMessage\n                                    id='add_emoji.image'\n                                    defaultMessage='Image'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <div>\n                                    <div className='add-emoji__upload'>\n                                        <button className='btn btn-primary'>\n                                            <FormattedMessage\n                                                id='add_emoji.image.button'\n                                                defaultMessage='Select'\n                                            />\n                                        </button>\n                                        <input\n                                            id='select-emoji'\n                                            type='file'\n                                            accept={Constants.ACCEPT_EMOJI_IMAGE}\n                                            multiple={false}\n                                            onChange={this.updateImage}\n                                        />\n                                    </div>\n                                    {filename}\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_emoji.image.help'\n                                            defaultMessage='Specify a .gif, .png, or .jpg file of up to 64 KB for your emoji. The dimensions can be up to 128 pixels by 128 pixels.'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {preview}\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                error={this.state.error}\n                            />\n                            <Link\n                                className='btn btn-link btn-sm'\n                                to={'/' + this.props.team.name + '/emoji'}\n                            >\n                                <FormattedMessage\n                                    id='add_emoji.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                spinningText={localizeMessage('add_emoji.saving', 'Saving...')}\n                                onClick={this.handleSaveButtonClick}\n                            >\n                                <FormattedMessage\n                                    id='add_emoji.save'\n                                    defaultMessage='Save'\n                                />\n                            </SpinnerButton>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {ActionCreatorsMapObject, bindActionCreators, Dispatch} from 'redux';\nimport {connect} from 'react-redux';\n\nimport {createCustomEmoji} from 'mattermost-redux/actions/emojis';\n\nimport {ActionFunc, ActionResult, GenericAction} from 'mattermost-redux/types/actions';\nimport {CustomEmoji} from '@mattermost/types/emojis';\n\nimport {getEmojiMap} from 'selectors/emojis';\n\nimport {GlobalState} from 'types/store';\n\nimport AddEmoji from './add_emoji';\n\ntype Actions = {\n    createCustomEmoji: (emoji: CustomEmoji, imageData: File) => Promise<ActionResult>;\n};\n\nfunction mapStateToProps(state: GlobalState) {\n    return {\n        emojiMap: getEmojiMap(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Actions>({\n            createCustomEmoji,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddEmoji);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport * as IntegrationActions from 'mattermost-redux/actions/integrations';\nimport {getProfilesByIds} from 'mattermost-redux/actions/users';\nimport {getUser} from 'mattermost-redux/selectors/entities/users';\nimport {appsEnabled} from 'mattermost-redux/selectors/entities/apps';\n\nconst DEFAULT_PAGE_SIZE = 100;\n\nexport function loadIncomingHooksAndProfilesForTeam(teamId, page = 0, perPage = DEFAULT_PAGE_SIZE) {\n    return async (dispatch) => {\n        const {data} = await dispatch(IntegrationActions.getIncomingHooks(teamId, page, perPage));\n        if (data) {\n            dispatch(loadProfilesForIncomingHooks(data));\n        }\n    };\n}\n\nexport function loadProfilesForIncomingHooks(hooks) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const profilesToLoad = {};\n        for (let i = 0; i < hooks.length; i++) {\n            const hook = hooks[i];\n            if (!getUser(state, hook.user_id)) {\n                profilesToLoad[hook.user_id] = true;\n            }\n        }\n\n        const list = Object.keys(profilesToLoad);\n        if (list.length === 0) {\n            return;\n        }\n\n        dispatch(getProfilesByIds(list));\n    };\n}\n\nexport function loadOutgoingHooksAndProfilesForTeam(teamId, page = 0, perPage = DEFAULT_PAGE_SIZE) {\n    return async (dispatch) => {\n        const {data} = await dispatch(IntegrationActions.getOutgoingHooks('', teamId, page, perPage));\n        if (data) {\n            dispatch(loadProfilesForOutgoingHooks(data));\n        }\n    };\n}\n\nexport function loadProfilesForOutgoingHooks(hooks) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const profilesToLoad = {};\n        for (let i = 0; i < hooks.length; i++) {\n            const hook = hooks[i];\n            if (!getUser(state, hook.creator_id)) {\n                profilesToLoad[hook.creator_id] = true;\n            }\n        }\n\n        const list = Object.keys(profilesToLoad);\n        if (list.length === 0) {\n            return;\n        }\n\n        dispatch(getProfilesByIds(list));\n    };\n}\n\nexport function loadCommandsAndProfilesForTeam(teamId) {\n    return async (dispatch) => {\n        const {data} = await dispatch(IntegrationActions.getCustomTeamCommands(teamId));\n        if (data) {\n            dispatch(loadProfilesForCommands(data));\n        }\n    };\n}\n\nexport function loadProfilesForCommands(commands) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const profilesToLoad = {};\n        for (let i = 0; i < commands.length; i++) {\n            const command = commands[i];\n            if (!getUser(state, command.creator_id)) {\n                profilesToLoad[command.creator_id] = true;\n            }\n        }\n\n        const list = Object.keys(profilesToLoad);\n        if (list.length === 0) {\n            return;\n        }\n\n        dispatch(getProfilesByIds(list));\n    };\n}\n\nexport function loadOAuthAppsAndProfiles(page = 0, perPage = DEFAULT_PAGE_SIZE) {\n    return async (dispatch, getState) => {\n        if (appsEnabled(getState())) {\n            dispatch(IntegrationActions.getAppsOAuthAppIDs());\n        }\n        const {data} = await dispatch(IntegrationActions.getOAuthApps(page, perPage));\n        if (data) {\n            dispatch(loadProfilesForOAuthApps(data));\n        }\n    };\n}\n\nexport function loadProfilesForOAuthApps(apps) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const profilesToLoad = {};\n        for (let i = 0; i < apps.length; i++) {\n            const app = apps[i];\n            if (!getUser(state, app.creator_id)) {\n                profilesToLoad[app.creator_id] = true;\n            }\n        }\n\n        const list = Object.keys(profilesToLoad);\n        if (list.length === 0) {\n            return;\n        }\n\n        dispatch(getProfilesByIds(list));\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport OverlayTrigger from 'components/overlay_trigger';\nimport Tooltip from 'components/tooltip';\n\nimport Constants from 'utils/constants';\nimport {copyToClipboard} from 'utils/utils';\n\ntype Props = {\n    value: string;\n    defaultMessage: string;\n    idMessage: string;\n};\n\nexport default class CopyText extends React.PureComponent<Props> {\n    public static defaultProps = {\n        defaultMessage: 'Copy',\n        idMessage: 'integrations.copy',\n    };\n\n    private copyText = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>): void => {\n        e.preventDefault();\n        copyToClipboard(this.props.value);\n    };\n\n    public render() {\n        if (!document.queryCommandSupported('copy')) {\n            return null;\n        }\n\n        const tooltip = (\n            <Tooltip id='copy'>\n                <FormattedMessage\n                    id={this.props.idMessage}\n                    defaultMessage={this.props.defaultMessage}\n                />\n            </Tooltip>\n        );\n\n        return (\n            <OverlayTrigger\n                delayShow={Constants.OVERLAY_TIME_DELAY}\n                placement='top'\n                overlay={tooltip}\n            >\n                <a\n                    href='#'\n                    data-testid='copyText'\n                    className='fa fa-copy ml-2'\n                    onClick={this.copyText}\n                />\n            </OverlayTrigger>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {getSiteURL} from 'utils/url';\n\nimport CopyText from 'components/copy_text';\n\nimport DeleteIntegrationLink from './delete_integration_link';\n\nexport function matchesFilter(incomingWebhook, channel, filter) {\n    if (!filter) {\n        return true;\n    }\n\n    if (incomingWebhook.display_name.toLowerCase().indexOf(filter) !== -1 ||\n        incomingWebhook.description.toLowerCase().indexOf(filter) !== -1) {\n        return true;\n    }\n\n    if (incomingWebhook.channel_id) {\n        if (channel && channel.name.toLowerCase().indexOf(filter) !== -1) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport default class InstalledIncomingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * Data used for showing webhook details\n        */\n        incomingWebhook: PropTypes.object.isRequired,\n\n        /**\n        * Function to call when webhook delete button is pressed\n        */\n        onDelete: PropTypes.func.isRequired,\n\n        /**\n        * String used for filtering webhook item\n        */\n        filter: PropTypes.string,\n\n        /**\n        * Data used for showing created by details\n        */\n        creator: PropTypes.object.isRequired,\n\n        /**\n        *  Set to show available actions on webhook\n        */\n        canChange: PropTypes.bool.isRequired,\n\n        /**\n        *  Data used in routing of webhook for modifications\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        *  Data used for filtering of webhook based on filter prop\n        */\n        channel: PropTypes.object,\n    }\n\n    handleDelete = () => {\n        this.props.onDelete(this.props.incomingWebhook);\n    }\n\n    render() {\n        const incomingWebhook = this.props.incomingWebhook;\n        const channel = this.props.channel;\n        const filter = this.props.filter ? this.props.filter.toLowerCase() : '';\n\n        if (!matchesFilter(incomingWebhook, channel, filter)) {\n            return null;\n        }\n\n        let displayName;\n        if (incomingWebhook.display_name) {\n            displayName = incomingWebhook.display_name;\n        } else if (channel) {\n            displayName = channel.display_name;\n        } else {\n            displayName = (\n                <FormattedMessage\n                    id='installed_incoming_webhooks.unknown_channel'\n                    defaultMessage='A Private Webhook'\n                />\n            );\n        }\n\n        let description = null;\n        if (incomingWebhook.description) {\n            description = (\n                <div className='item-details__row'>\n                    <span className='item-details__description'>\n                        {incomingWebhook.description}\n                    </span>\n                </div>\n            );\n        }\n\n        let actions = null;\n        if (this.props.canChange) {\n            actions = (\n                <div className='item-actions'>\n                    <Link to={`/${this.props.team.name}/integrations/incoming_webhooks/edit?id=${incomingWebhook.id}`}>\n                        <FormattedMessage\n                            id='installed_integrations.edit'\n                            defaultMessage='Edit'\n                        />\n                    </Link>\n                    {' - '}\n                    <DeleteIntegrationLink\n                        modalMessage={\n                            <FormattedMessage\n                                id='installed_incoming_webhooks.delete.confirm'\n                                defaultMessage='This action permanently deletes the incoming webhook and breaks any integrations using it. Are you sure you want to delete it?'\n                            />\n                        }\n                        onDelete={this.handleDelete}\n                    />\n                </div>\n            );\n        }\n\n        const incomingWebhookId = getSiteURL() + '/hooks/' + incomingWebhook.id;\n\n        return (\n            <div className='backstage-list__item'>\n                <div className='item-details'>\n                    <div className='item-details__row d-flex flex-column flex-md-row justify-content-between'>\n                        <strong className='item-details__name'>\n                            {displayName}\n                        </strong>\n                        {actions}\n                    </div>\n                    {description}\n                    <div className='item-details__row'>\n                        <span className='item-details__url word-break--all'>\n                            <FormattedMessage\n                                id='installed_integrations.url'\n                                defaultMessage='URL: {url}'\n                                values={{\n                                    url: incomingWebhookId,\n                                }}\n                            />\n                            <span>\n                                <CopyText\n                                    value={incomingWebhookId}\n                                />\n                            </span>\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__creation'>\n                            <FormattedMessage\n                                id='installed_integrations.creation'\n                                defaultMessage='Created by {creator} on {createAt, date, full}'\n                                values={{\n                                    creator: this.props.creator.username,\n                                    createAt: incomingWebhook.create_at,\n                                }}\n                            />\n                        </span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Team} from '@mattermost/types/teams';\nimport {Channel} from '@mattermost/types/channels';\nimport {IncomingWebhook} from '@mattermost/types/integrations';\nimport {ActionResult} from 'mattermost-redux/types/actions';\nimport {UserProfile} from '@mattermost/types/users';\nimport {IDMappedObjects} from '@mattermost/types/utilities';\n\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\nimport InstalledIncomingWebhook, {matchesFilter} from 'components/integrations/installed_incoming_webhook.jsx';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport Constants from 'utils/constants';\nimport * as Utils from 'utils/utils';\n\ntype Props = {\n    team: Team;\n    user: UserProfile;\n    canManageOthersWebhooks: boolean;\n    incomingWebhooks: IncomingWebhook[];\n    channels: IDMappedObjects<Channel>;\n    users: IDMappedObjects<UserProfile>;\n    enableIncomingWebhooks: boolean;\n    actions: {\n        removeIncomingHook: (hookId: string) => Promise<ActionResult>;\n        loadIncomingHooksAndProfilesForTeam: (teamId: string, startPageNumber: number,\n            pageSize: string) => Promise<ActionResult>;\n    };\n}\n\ntype State = {\n    loading: boolean;\n}\n\nexport default class InstalledIncomingWebhooks extends React.PureComponent<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableIncomingWebhooks) {\n            this.props.actions.loadIncomingHooksAndProfilesForTeam(\n                this.props.team.id,\n                Constants.Integrations.START_PAGE_NUM,\n                Constants.Integrations.PAGE_SIZE,\n            ).then(\n                () => this.setState({loading: false}),\n            );\n        }\n    }\n\n    deleteIncomingWebhook = (incomingWebhook: IncomingWebhook) => {\n        this.props.actions.removeIncomingHook(incomingWebhook.id);\n    }\n\n    incomingWebhookCompare = (a: IncomingWebhook, b: IncomingWebhook) => {\n        let displayNameA = a.display_name;\n        if (!displayNameA) {\n            const channelA = this.props.channels[a.channel_id];\n            if (channelA) {\n                displayNameA = channelA.display_name;\n            } else {\n                displayNameA = Utils.localizeMessage('installed_incoming_webhooks.unknown_channel', 'A Private Webhook');\n            }\n        }\n\n        const displayNameB = b.display_name;\n\n        return displayNameA.localeCompare(displayNameB);\n    }\n\n    incomingWebhooks = (filter: string) => this.props.incomingWebhooks.\n        sort(this.incomingWebhookCompare).\n        filter((incomingWebhook: IncomingWebhook) => matchesFilter(incomingWebhook, this.props.channels[incomingWebhook.channel_id], filter)).\n        map((incomingWebhook: IncomingWebhook) => {\n            const canChange = this.props.canManageOthersWebhooks || this.props.user.id === incomingWebhook.user_id;\n            const channel = this.props.channels[incomingWebhook.channel_id];\n            return (\n                <InstalledIncomingWebhook\n                    key={incomingWebhook.id}\n                    incomingWebhook={incomingWebhook}\n                    onDelete={this.deleteIncomingWebhook}\n                    creator={this.props.users[incomingWebhook.user_id] || {}}\n                    canChange={canChange}\n                    team={this.props.team}\n                    channel={channel}\n                />\n            );\n        });\n\n    render() {\n        return (\n            <BackstageList\n                header={\n                    <FormattedMessage\n                        id='installed_incoming_webhooks.header'\n                        defaultMessage='Installed Incoming Webhooks'\n                    />\n                }\n                addText={\n                    <FormattedMessage\n                        id='installed_incoming_webhooks.add'\n                        defaultMessage='Add Incoming Webhook'\n                    />\n                }\n                addLink={'/' + this.props.team.name + '/integrations/incoming_webhooks/add'}\n                addButtonId='addIncomingWebhook'\n                emptyText={\n                    <FormattedMessage\n                        id='installed_incoming_webhooks.empty'\n                        defaultMessage='No incoming webhooks found'\n                    />\n                }\n                emptyTextSearch={\n                    <FormattedMarkdownMessage\n                        id='installed_incoming_webhooks.emptySearch'\n                        defaultMessage='No incoming webhooks match {searchTerm}'\n                    />\n                }\n                helpText={\n                    <FormattedMessage\n                        id='installed_incoming_webhooks.help'\n                        defaultMessage='Use incoming webhooks to connect external tools to Mattermost. {buildYourOwn} or visit the {appDirectory} to find self-hosted, third-party apps and integrations.'\n                        values={{\n                            buildYourOwn: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://developers.mattermost.com/integrate/admin-guide/admin-webhooks-incoming/'\n                                >\n                                    <FormattedMessage\n                                        id='installed_incoming_webhooks.help.buildYourOwn'\n                                        defaultMessage='Build Your Own'\n                                    />\n                                </a>\n                            ),\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://mattermost.com/marketplace'\n                                >\n                                    <FormattedMessage\n                                        id='installed_incoming_webhooks.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                }\n                searchPlaceholder={Utils.localizeMessage('installed_incoming_webhooks.search', 'Search Incoming Webhooks')}\n                loading={this.state.loading}\n            >\n                {(filter: string) => {\n                    const children = this.incomingWebhooks(filter);\n                    return [children, children.length > 0];\n                }}\n            </BackstageList>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {ActionCreatorsMapObject, bindActionCreators, Dispatch} from 'redux';\n\nimport {removeIncomingHook} from 'mattermost-redux/actions/integrations';\n\nimport {getAllChannels} from 'mattermost-redux/selectors/entities/channels';\nimport {getIncomingHooks} from 'mattermost-redux/selectors/entities/integrations';\nimport {getCurrentTeamId} from 'mattermost-redux/selectors/entities/teams';\nimport {getUsers} from 'mattermost-redux/selectors/entities/users';\nimport {GlobalState} from '@mattermost/types/store';\nimport {haveITeamPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {ActionResult, GenericAction} from 'mattermost-redux/types/actions';\n\nimport {loadIncomingHooksAndProfilesForTeam} from 'actions/integration_actions.jsx';\n\nimport InstalledIncomingWebhooks from './installed_incoming_webhooks';\n\ntype Actions = {\n    removeIncomingHook: (hookId: string) => Promise<ActionResult>;\n    loadIncomingHooksAndProfilesForTeam: (teamId: string, startPageNumber: number, pageSize: string) => Promise<ActionResult>;\n}\n\nfunction mapStateToProps(state: GlobalState) {\n    const config = getConfig(state);\n    const teamId = getCurrentTeamId(state);\n    const canManageOthersWebhooks = haveITeamPermission(state, teamId, Permissions.MANAGE_OTHERS_INCOMING_WEBHOOKS);\n    const incomingHooks = getIncomingHooks(state);\n    const incomingWebhooks = Object.keys(incomingHooks).\n        map((key) => incomingHooks[key]).\n        filter((incomingWebhook) => incomingWebhook.team_id === teamId);\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\n\n    return {\n        incomingWebhooks,\n        channels: getAllChannels(state),\n        users: getUsers(state),\n        canManageOthersWebhooks,\n        enableIncomingWebhooks,\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<any>, Actions>({\n            loadIncomingHooksAndProfilesForTeam,\n            removeIncomingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstalledIncomingWebhooks);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {Channel} from '@mattermost/types/channels';\n\nimport Constants from 'utils/constants';\nimport * as Utils from 'utils/utils';\n\ntype Props = {\n    channels: Channel[];\n    onChange?: () => void;\n    value?: string;\n    selectOpen: boolean;\n    selectPrivate: boolean;\n    selectDm: boolean;\n};\n\nexport default class ChannelSelect extends React.PureComponent<Props> {\n    render(): JSX.Element {\n        const options = [\n            <option\n                key=''\n                value=''\n            >\n                {Utils.localizeMessage('channel_select.placeholder', '--- Select a channel ---')}\n            </option>,\n        ];\n\n        this.props.channels.forEach((channel: Channel) => {\n            const channelName = channel.display_name || channel.name;\n            if (channel.type === Constants.OPEN_CHANNEL && this.props.selectOpen) {\n                options.push(\n                    <option\n                        key={channel.id}\n                        value={channel.id}\n                    >\n                        {channelName}\n                    </option>,\n                );\n            } else if (channel.type === Constants.PRIVATE_CHANNEL && this.props.selectPrivate) {\n                options.push(\n                    <option\n                        key={channel.id}\n                        value={channel.id}\n                    >\n                        {channelName}\n                    </option>,\n                );\n            } else if (channel.type === Constants.DM_CHANNEL && this.props.selectDm) {\n                options.push(\n                    <option\n                        key={channel.id}\n                        value={channel.id}\n                    >\n                        {channelName}\n                    </option>,\n                );\n            }\n        });\n\n        return (\n            <select\n                className='form-control'\n                value={this.props.value}\n                onChange={this.props.onChange}\n                id='channelSelect'\n            >\n                {options}\n            </select>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {createSelector} from 'reselect';\n\nimport {getMyChannels} from 'mattermost-redux/selectors/entities/channels';\nimport {getCurrentUserLocale} from 'mattermost-redux/selectors/entities/i18n';\nimport {sortChannelsByTypeAndDisplayName} from 'mattermost-redux/utils/channel_utils';\n\nimport {GlobalState} from '@mattermost/types/store';\n\nimport ChannelSelect from './channel_select';\n\nconst getMyChannelsSorted = createSelector(\n    'getMyChannelsSorted',\n    getMyChannels,\n    getCurrentUserLocale,\n    (channels, locale) => {\n        return [...channels].sort(sortChannelsByTypeAndDisplayName.bind(null, locale));\n    },\n);\n\nfunction mapStateToProps(state: GlobalState) {\n    return {\n        channels: getMyChannelsSorted(state),\n    };\n}\n\nexport default connect(mapStateToProps)(ChannelSelect);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport ChannelSelect from 'components/channel_select';\nimport FormError from 'components/form_error';\nimport SpinnerButton from 'components/spinner_button';\nimport {localizeMessage} from 'utils/utils';\n\nexport default class AbstractIncomingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The header text to render, has id and defaultMessage\n        */\n        header: PropTypes.object.isRequired,\n\n        /**\n        * The footer text to render, has id and defaultMessage\n        */\n        footer: PropTypes.object.isRequired,\n\n        /**\n        * The spinner loading text to render, has id and defaultMessage\n        */\n        loading: PropTypes.object.isRequired,\n\n        /**\n        * The server error text after a failed action\n        */\n        serverError: PropTypes.string.isRequired,\n\n        /**\n        * The hook used to set the initial state\n        */\n        initialHook: PropTypes.object,\n\n        /**\n        * Whether to allow configuration of the default post username.\n        */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n        * Whether to allow configuration of the default post icon.\n        */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n\n        /**\n        * The async function to run when the action button is pressed\n        */\n        action: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = this.getStateFromHook(this.props.initialHook || {});\n    }\n\n    getStateFromHook = (hook) => {\n        return {\n            displayName: hook.display_name || '',\n            description: hook.description || '',\n            channelId: hook.channel_id || '',\n            channelLocked: hook.channel_locked || false,\n            username: hook.username || '',\n            iconURL: hook.icon_url || '',\n            saving: false,\n            serverError: '',\n            clientError: null,\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            serverError: '',\n            clientError: '',\n        });\n\n        if (!this.state.channelId) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_incoming_webhook.channelRequired'\n                        defaultMessage='A valid channel is required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const hook = {\n            channel_id: this.state.channelId,\n            channel_locked: this.state.channelLocked,\n            display_name: this.state.displayName,\n            description: this.state.description,\n            username: this.state.username,\n            icon_url: this.state.iconURL,\n        };\n\n        this.props.action(hook).then(() => this.setState({saving: false}));\n    }\n\n    updateDisplayName = (e) => {\n        this.setState({\n            displayName: e.target.value,\n        });\n    }\n\n    updateDescription = (e) => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    updateChannelId = (e) => {\n        this.setState({\n            channelId: e.target.value,\n        });\n    }\n\n    updateChannelLocked = (e) => {\n        this.setState({\n            channelLocked: e.target.checked,\n        });\n    }\n\n    updateUsername = (e) => {\n        this.setState({\n            username: e.target.value,\n        });\n    }\n\n    updateIconURL = (e) => {\n        this.setState({\n            iconURL: e.target.value,\n        });\n    }\n\n    render() {\n        var headerToRender = this.props.header;\n        var footerToRender = this.props.footer;\n\n        return (\n            <div className='backstage-content'>\n                <BackstageHeader>\n                    <Link to={`/${this.props.team.name}/integrations/incoming_webhooks`}>\n                        <FormattedMessage\n                            id='installed_incoming_webhooks.header'\n                            defaultMessage='Incoming Webhooks'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id={headerToRender.id}\n                        defaultMessage={headerToRender.defaultMessage}\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='displayName'\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.displayName'\n                                    defaultMessage='Title'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='displayName'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.displayName}\n                                    onChange={this.updateDisplayName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.displayName.help'\n                                        defaultMessage='Specify a title, of up to 64 characters, for the webhook settings page.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='500'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.description.help'\n                                        defaultMessage='Describe your incoming webhook.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='channelId'\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.channel'\n                                    defaultMessage='Channel'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <ChannelSelect\n                                    id='channelId'\n                                    value={this.state.channelId}\n                                    onChange={this.updateChannelId}\n                                    selectOpen={true}\n                                    selectPrivate={true}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.channel.help'\n                                        defaultMessage='This is the default public or private channel that receives the webhook payloads.  When setting up the webhook, you must belong to the private channel.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='channelLocked'\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.channelLocked'\n                                    defaultMessage='Lock to this channel'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8 checkbox'>\n                                <input\n                                    id='channelLocked'\n                                    type='checkbox'\n                                    checked={this.state.channelLocked}\n                                    onChange={this.updateChannelLocked}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.channelLocked.help'\n                                        defaultMessage='If set, the incoming webhook can post only to the selected channel.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        { this.props.enablePostUsernameOverride &&\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                    htmlFor='username'\n                                >\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.username'\n                                        defaultMessage='Username'\n                                    />\n                                </label>\n                                <div className='col-md-5 col-sm-8'>\n                                    <input\n                                        id='username'\n                                        type='text'\n                                        maxLength='22'\n                                        className='form-control'\n                                        value={this.state.username}\n                                        onChange={this.updateUsername}\n                                    />\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_incoming_webhook.username.help'\n                                            defaultMessage='Specify the username this integration will post as. Usernames can be up to 22 characters, and can contain lowercase letters, numbers and the symbols \\\"-\\\", \\\"_\\\", and \\\".\\\". If left blank, the name specified by the webhook creator is used.'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        { this.props.enablePostIconOverride &&\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                    htmlFor='iconURL'\n                                >\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.icon_url'\n                                        defaultMessage='Profile Picture'\n                                    />\n                                </label>\n                                <div className='col-md-5 col-sm-8'>\n                                    <input\n                                        id='iconURL'\n                                        type='text'\n                                        maxLength='1024'\n                                        className='form-control'\n                                        value={this.state.iconURL}\n                                        onChange={this.updateIconURL}\n                                    />\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_incoming_webhook.icon_url.help'\n                                            defaultMessage='Enter the URL of a .png or .jpg file for the profile picture of this integration when posting. The file should be at least 128 pixels by 128 pixels. If left blank, the profile picture specified by the webhook creator is used.'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.props.serverError, this.state.clientError]}\n                            />\n                            <Link\n                                className='btn btn-link btn-sm'\n                                to={`/${this.props.team.name}/integrations/incoming_webhooks`}\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                spinningText={localizeMessage(this.props.loading.id, this.props.loading.defaultMessage)}\n                                onClick={this.handleSubmit}\n                                id='saveWebhook'\n                            >\n                                <FormattedMessage\n                                    id={footerToRender.id}\n                                    defaultMessage={footerToRender.defaultMessage}\n                                />\n                            </SpinnerButton>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport AbstractIncomingWebhook from 'components/integrations/abstract_incoming_webhook';\nimport {Team} from '@mattermost/types/teams';\nimport {IncomingWebhook} from '@mattermost/types/integrations';\n\nconst HEADER = {id: t('integrations.add'), defaultMessage: 'Add'};\nconst FOOTER = {id: t('add_incoming_webhook.save'), defaultMessage: 'Save'};\nconst LOADING = {id: t('add_incoming_webhook.saving'), defaultMessage: 'Saving...'};\n\ntype Props = {\n\n    /**\n    * The current team\n    */\n    team: Team;\n\n    /**\n    * Whether to allow configuration of the default post username.\n    */\n    enablePostUsernameOverride: boolean;\n\n    /**\n    * Whether to allow configuration of the default post icon.\n    */\n    enablePostIconOverride: boolean;\n\n    actions: {\n\n        /**\n        * The function to call to add a new incoming webhook\n        */\n        createIncomingHook: (hook: IncomingWebhook) => Promise<{ data?: IncomingWebhook; error?: Error }>;\n    };\n};\n\ntype State = {\n    serverError: string;\n};\n\nexport default class AddIncomingWebhook extends React.PureComponent<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            serverError: '',\n        };\n    }\n\n    addIncomingHook = async (hook: IncomingWebhook) => {\n        this.setState({serverError: ''});\n\n        const {data, error} = await this.props.actions.createIncomingHook(hook);\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/confirm?type=incoming_webhooks&id=${data.id}`);\n            return;\n        }\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    render() {\n        return (\n            <AbstractIncomingWebhook\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                loading={LOADING}\n                enablePostUsernameOverride={this.props.enablePostUsernameOverride}\n                enablePostIconOverride={this.props.enablePostIconOverride}\n                action={this.addIncomingHook}\n                serverError={this.state.serverError}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {ActionCreatorsMapObject, bindActionCreators, Dispatch} from 'redux';\n\nimport {createIncomingHook} from 'mattermost-redux/actions/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {GlobalState} from '@mattermost/types/store';\nimport {Action, GenericAction} from 'mattermost-redux/types/actions';\nimport {IncomingWebhook} from '@mattermost/types/integrations';\n\nimport AddIncomingWebhook from './add_incoming_webhook';\n\nfunction mapStateToProps(state: GlobalState) {\n    const config = getConfig(state);\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\n    const enablePostIconOverride = config.EnablePostIconOverride === 'true';\n\n    return {\n        enablePostUsernameOverride,\n        enablePostIconOverride,\n    };\n}\n\ntype Actions = {\n    createIncomingHook: (hook: IncomingWebhook) => Promise<{ data?: IncomingWebhook; error?: Error }>;\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<Action>, Actions>({\n            createIncomingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddIncomingWebhook);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {Team} from '@mattermost/types/teams';\nimport {IncomingWebhook} from '@mattermost/types/integrations';\nimport {ActionResult} from 'mattermost-redux/types/actions';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport AbstractIncomingWebhook from 'components/integrations/abstract_incoming_webhook';\nimport LoadingScreen from 'components/loading_screen';\n\nconst HEADER = {id: t('integrations.edit'), defaultMessage: 'Edit'};\nconst FOOTER = {id: t('update_incoming_webhook.update'), defaultMessage: 'Update'};\nconst LOADING = {id: t('update_incoming_webhook.updating'), defaultMessage: 'Updating...'};\n\ntype Props = {\n\n    /**\n     * The current team\n     */\n    team: Team;\n\n    /**\n     * The incoming webhook to edit\n     */\n    hook?: IncomingWebhook;\n\n    /**\n     * The id of the incoming webhook to edit\n     */\n    hookId: string;\n\n    /**\n     * Whether or not incoming webhooks are enabled.\n     */\n    enableIncomingWebhooks: boolean;\n\n    /**\n     * Whether to allow configuration of the default post username.\n     */\n    enablePostUsernameOverride: boolean;\n\n    /**\n     * Whether to allow configuration of the default post icon.\n     */\n    enablePostIconOverride: boolean;\n\n    actions: {\n\n        /**\n         * The function to call to update an incoming webhook\n         */\n        updateIncomingHook: (hook: IncomingWebhook) => Promise<ActionResult>;\n\n        /**\n         * The function to call to get an incoming webhook\n         */\n        getIncomingHook: (hookId: string) => Promise<ActionResult>;\n    };\n};\n\ntype State = {\n    showConfirmModal: boolean;\n    serverError: string;\n};\n\nexport default class EditIncomingWebhook extends React.PureComponent<Props, State> {\n    private newHook?: IncomingWebhook;\n\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            showConfirmModal: false,\n            serverError: '',\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableIncomingWebhooks) {\n            this.props.actions.getIncomingHook(this.props.hookId);\n        }\n    }\n\n    editIncomingHook = async (hook: IncomingWebhook) => {\n        this.newHook = hook;\n\n        if (this.props.hook?.id) {\n            hook.id = this.props.hook.id;\n        }\n\n        await this.submitHook();\n    };\n\n    submitHook = async () => {\n        this.setState({serverError: ''});\n\n        if (!this.newHook) {\n            return;\n        }\n\n        const result = await this.props.actions.updateIncomingHook(this.newHook);\n\n        if ('data' in result) {\n            browserHistory.push(`/${this.props.team.name}/integrations/incoming_webhooks`);\n            return;\n        }\n\n        if ('error' in result) {\n            const {error} = result;\n            this.setState({serverError: error.message});\n        }\n    };\n\n    render() {\n        if (!this.props.hook) {\n            return <LoadingScreen/>;\n        }\n\n        return (\n            <AbstractIncomingWebhook\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                loading={LOADING}\n                enablePostUsernameOverride={this.props.enablePostUsernameOverride}\n                enablePostIconOverride={this.props.enablePostIconOverride}\n                action={this.editIncomingHook}\n                serverError={this.state.serverError}\n                initialHook={this.props.hook}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {ActionCreatorsMapObject, bindActionCreators, Dispatch} from 'redux';\n\nimport {getIncomingHook, updateIncomingHook} from 'mattermost-redux/actions/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {GlobalState} from '@mattermost/types/store';\nimport {ActionFunc, ActionResult, GenericAction} from 'mattermost-redux/types/actions';\nimport {IncomingWebhook} from '@mattermost/types/integrations';\n\nimport EditIncomingWebhook from './edit_incoming_webhook';\n\ntype Props = {\n    location: Location;\n}\n\ntype Actions = {\n    updateIncomingHook: (hook: IncomingWebhook) => Promise<ActionResult>;\n    getIncomingHook: (hookId: string) => Promise<ActionResult>;\n}\n\nfunction mapStateToProps(state: GlobalState, ownProps: Props) {\n    const config = getConfig(state);\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\n    const enablePostIconOverride = config.EnablePostIconOverride === 'true';\n    const hookId = (new URLSearchParams(ownProps.location.search)).get('id') || '';\n\n    return {\n        hookId,\n        hook: state.entities.integrations.incomingHooks[hookId],\n        enableIncomingWebhooks,\n        enablePostUsernameOverride,\n        enablePostIconOverride,\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Actions>({\n            updateIncomingHook,\n            getIncomingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditIncomingWebhook);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport CopyText from 'components/copy_text';\n\nimport DeleteIntegrationLink from './delete_integration_link';\n\nexport function matchesFilter(outgoingWebhook, channel, filter) {\n    if (!filter) {\n        return true;\n    }\n\n    const {\n        display_name: displayName,\n        description,\n        trigger_words: triggerWords,\n    } = outgoingWebhook;\n\n    if (\n        (displayName && displayName.toLowerCase().indexOf(filter) !== -1) ||\n        (description && description.toLowerCase().indexOf(filter) !== -1)\n    ) {\n        return true;\n    }\n\n    if (triggerWords) {\n        for (const triggerWord of triggerWords) {\n            if (triggerWord.toLowerCase().indexOf(filter) !== -1) {\n                return true;\n            }\n        }\n    }\n\n    if (channel && channel.name) {\n        if (channel.name.toLowerCase().indexOf(filter) !== -1) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport default class InstalledOutgoingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * Data used for showing webhook details\n        */\n        outgoingWebhook: PropTypes.object.isRequired,\n\n        /**\n        * Function used for webhook token regeneration\n        */\n        onRegenToken: PropTypes.func.isRequired,\n\n        /**\n        * Function to call when webhook delete button is pressed\n        */\n        onDelete: PropTypes.func.isRequired,\n\n        /**\n        * String used for filtering webhook item\n        */\n        filter: PropTypes.string,\n\n        /**\n        * Data used for showing created by details\n        */\n        creator: PropTypes.object.isRequired,\n\n        /**\n        *  Set to show available actions on webhook\n        */\n        canChange: PropTypes.bool.isRequired,\n\n        /**\n        *  Data used in routing of webhook for modifications\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        *  Data used for filtering of webhooks based in filter prop\n        */\n        channel: PropTypes.object,\n    }\n\n    handleRegenToken = (e) => {\n        e.preventDefault();\n\n        this.props.onRegenToken(this.props.outgoingWebhook);\n    }\n\n    handleDelete = () => {\n        this.props.onDelete(this.props.outgoingWebhook);\n    }\n\n    makeDisplayName(outgoingWebhook, channel) {\n        if (outgoingWebhook.display_name) {\n            return outgoingWebhook.display_name;\n        } else if (channel) {\n            return channel.display_name;\n        }\n        return (\n            <FormattedMessage\n                id='installed_outgoing_webhooks.unknown_channel'\n                defaultMessage='A Private Webhook'\n            />\n        );\n    }\n\n    render() {\n        const outgoingWebhook = this.props.outgoingWebhook;\n        const channel = this.props.channel;\n        const filter = this.props.filter ? this.props.filter.toLowerCase() : '';\n        const triggerWordsFull = 0;\n        const triggerWordsStartsWith = 1;\n\n        if (outgoingWebhook && !matchesFilter(outgoingWebhook, channel, filter)) {\n            return null;\n        }\n\n        const displayName = this.makeDisplayName(outgoingWebhook, channel);\n\n        let description = null;\n        if (outgoingWebhook.description) {\n            description = (\n                <div className='item-details__row'>\n                    <span className='item-details__description'>\n                        {outgoingWebhook.description}\n                    </span>\n                </div>\n            );\n        }\n\n        let triggerWords = null;\n        if (outgoingWebhook.trigger_words && outgoingWebhook.trigger_words.length > 0) {\n            triggerWords = (\n                <div className='item-details__row'>\n                    <span className='item-details__trigger-words'>\n                        <FormattedMessage\n                            id='installed_integrations.triggerWords'\n                            defaultMessage='Trigger Words: {triggerWords}'\n                            values={{\n                                triggerWords: outgoingWebhook.trigger_words.join(', '),\n                            }}\n                        />\n                    </span>\n                </div>\n            );\n        }\n\n        const urls = (\n            <div className='item-details__row'>\n                <span className='item-details__url word-break--all'>\n                    <FormattedMessage\n                        id='installed_integrations.callback_urls'\n                        defaultMessage='Callback URLs: {urls}'\n                        values={{\n                            urls: outgoingWebhook.callback_urls.join(', '),\n                        }}\n                    />\n                </span>\n            </div>\n        );\n\n        let triggerWhen;\n        if (outgoingWebhook.trigger_when === triggerWordsFull) {\n            triggerWhen = (\n                <FormattedMessage\n                    id='add_outgoing_webhook.triggerWordsTriggerWhenFullWord'\n                    defaultMessage='First word matches a trigger word exactly'\n                />\n            );\n        } else if (outgoingWebhook.trigger_when === triggerWordsStartsWith) {\n            triggerWhen = (\n                <FormattedMessage\n                    id='add_outgoing_webhook.triggerWordsTriggerWhenStartsWith'\n                    defaultMessage='First word starts with a trigger word'\n                />\n            );\n        }\n\n        let actions = null;\n        if (this.props.canChange) {\n            actions = (\n                <div className='item-actions'>\n                    <button\n                        className='style--none color--link'\n                        onClick={this.handleRegenToken}\n                    >\n                        <FormattedMessage\n                            id='installed_integrations.regenToken'\n                            defaultMessage='Regen Token'\n                        />\n                    </button>\n                    {' - '}\n                    <Link to={`/${this.props.team.name}/integrations/outgoing_webhooks/edit?id=${outgoingWebhook.id}`}>\n                        <FormattedMessage\n                            id='installed_integrations.edit'\n                            defaultMessage='Edit'\n                        />\n                    </Link>\n                    {' - '}\n                    <DeleteIntegrationLink\n                        modalMessage={\n                            <FormattedMessage\n                                id='installed_outgoing_webhooks.delete.confirm'\n                                defaultMessage='This action permanently deletes the outgoing webhook and breaks any integrations using it. Are you sure you want to delete it?'\n                            />\n                        }\n                        onDelete={this.handleDelete}\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <div className='backstage-list__item'>\n                <div className='item-details'>\n                    <div className='item-details__row d-flex flex-column flex-md-row justify-content-between'>\n                        <strong className='item-details__name'>\n                            {displayName}\n                        </strong>\n                        {actions}\n                    </div>\n                    {description}\n                    <div className='item-details__row'>\n                        <span className='item-details__content_type'>\n                            <FormattedMessage\n                                id='installed_integrations.content_type'\n                                defaultMessage='Content-Type: {contentType}'\n                                values={{\n                                    contentType: outgoingWebhook.content_type || 'application/x-www-form-urlencoded',\n                                }}\n                            />\n                        </span>\n                    </div>\n                    {triggerWords}\n                    <div className='item-details__row'>\n                        <span className='item-details__trigger-when'>\n                            <FormattedMessage\n                                id='installed_integrations.triggerWhen'\n                                defaultMessage='Trigger When: {triggerWhen}'\n                                values={{\n                                    triggerWhen,\n                                }}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__token'>\n                            <FormattedMessage\n                                id='installed_integrations.token'\n                                defaultMessage='Token: {token}'\n                                values={{\n                                    token: outgoingWebhook.token,\n                                }}\n                            />\n                            <CopyText\n                                value={outgoingWebhook.token}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__creation'>\n                            <FormattedMessage\n                                id='installed_integrations.creation'\n                                defaultMessage='Created by {creator} on {createAt, date, full}'\n                                values={{\n                                    creator: this.props.creator.username,\n                                    createAt: outgoingWebhook.create_at,\n                                }}\n                            />\n                        </span>\n                    </div>\n                    {urls}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils';\nimport Constants from 'utils/constants';\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\nimport InstalledOutgoingWebhook, {matchesFilter} from 'components/integrations/installed_outgoing_webhook.jsx';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nexport default class InstalledOutgoingWebhooks extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        *  Data used in passing down as props for webhook modifications\n        */\n        team: PropTypes.object,\n\n        /**\n        * Data used for checking if webhook is created by current user\n        */\n        user: PropTypes.object,\n\n        /**\n        *  Data used for checking modification privileges\n        */\n        canManageOthersWebhooks: PropTypes.bool,\n\n        /**\n        * Data used in passing down as props for showing webhook details\n        */\n        outgoingWebhooks: PropTypes.array,\n\n        /**\n        * Data used in sorting for displaying list and as props channel details\n        */\n        channels: PropTypes.object,\n\n        /**\n        *  Data used in passing down as props for webhook -created by label\n        */\n        users: PropTypes.object,\n\n        /**\n        *  Data used in passing as argument for loading webhooks\n        */\n        teamId: PropTypes.string,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call for removing outgoingWebhook\n            */\n            removeOutgoingHook: PropTypes.func,\n\n            /**\n            * The function to call for outgoingWebhook List and for the status of api\n            */\n            loadOutgoingHooksAndProfilesForTeam: PropTypes.func,\n\n            /**\n            * The function to call for regeneration of webhook token\n            */\n            regenOutgoingHookToken: PropTypes.func,\n        }),\n\n        /**\n        * Whether or not outgoing webhooks are enabled.\n        */\n        enableOutgoingWebhooks: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableOutgoingWebhooks) {\n            this.props.actions.loadOutgoingHooksAndProfilesForTeam(\n                this.props.teamId,\n                Constants.Integrations.START_PAGE_NUM,\n                Constants.Integrations.PAGE_SIZE,\n            ).then(\n                () => this.setState({loading: false}),\n            );\n        }\n    }\n\n    regenOutgoingWebhookToken = (outgoingWebhook) => {\n        this.props.actions.regenOutgoingHookToken(outgoingWebhook.id);\n    }\n\n    removeOutgoingHook = (outgoingWebhook) => {\n        this.props.actions.removeOutgoingHook(outgoingWebhook.id);\n    }\n\n    outgoingWebhookCompare = (a, b) => {\n        let displayNameA = a.display_name;\n        if (!displayNameA) {\n            const channelA = this.props.channels[a.channel_id];\n            if (channelA) {\n                displayNameA = channelA.display_name;\n            } else {\n                displayNameA = Utils.localizeMessage('installed_outgoing_webhooks.unknown_channel', 'A Private Webhook');\n            }\n        }\n\n        let displayNameB = b.display_name;\n        if (!displayNameB) {\n            const channelB = this.props.channels[b.channel_id];\n            if (channelB) {\n                displayNameB = channelB.display_name;\n            } else {\n                displayNameB = Utils.localizeMessage('installed_outgoing_webhooks.unknown_channel', 'A Private Webhook');\n            }\n        }\n        return displayNameA.localeCompare(displayNameB);\n    }\n\n    outgoingWebhooks = (filter) => this.props.outgoingWebhooks.\n        sort(this.outgoingWebhookCompare).\n        filter((outgoingWebhook) => matchesFilter(outgoingWebhook, this.props.channels[outgoingWebhook.channel_id], filter)).\n        map((outgoingWebhook) => {\n            const canChange = this.props.canManageOthersWebhooks || this.props.user.id === outgoingWebhook.creator_id;\n            const channel = this.props.channels[outgoingWebhook.channel_id];\n            return (\n                <InstalledOutgoingWebhook\n                    key={outgoingWebhook.id}\n                    outgoingWebhook={outgoingWebhook}\n                    onRegenToken={this.regenOutgoingWebhookToken}\n                    onDelete={this.removeOutgoingHook}\n                    creator={this.props.users[outgoingWebhook.creator_id] || {}}\n                    canChange={canChange}\n                    team={this.props.team}\n                    channel={channel}\n                />\n            );\n        });\n\n    render() {\n        return (\n            <BackstageList\n                header={\n                    <FormattedMessage\n                        id='installed_outgoing_webhooks.header'\n                        defaultMessage='Installed Outgoing Webhooks'\n                    />\n                }\n                addText={\n                    <FormattedMessage\n                        id='installed_outgoing_webhooks.add'\n                        defaultMessage='Add Outgoing Webhook'\n                    />\n                }\n                addLink={'/' + this.props.team.name + '/integrations/outgoing_webhooks/add'}\n                addButtonId='addOutgoingWebhook'\n                emptyText={\n                    <FormattedMessage\n                        id='installed_outgoing_webhooks.empty'\n                        defaultMessage='No outgoing webhooks found'\n                    />\n                }\n                emptyTextSearch={\n                    <FormattedMarkdownMessage\n                        id='installed_outgoing_webhooks.emptySearch'\n                        defaultMessage='No outgoing webhooks match {searchTerm}'\n                    />\n                }\n                helpText={\n                    <FormattedMessage\n                        id='installed_outgoing_webhooks.help'\n                        defaultMessage='Use outgoing webhooks to connect external tools to Mattermost. {buildYourOwn} or visit the {appDirectory} to find self-hosted, third-party apps and integrations.'\n                        values={{\n                            buildYourOwn: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://developers.mattermost.com/integrate/admin-guide/admin-webhooks-outgoing/'\n                                >\n                                    <FormattedMessage\n                                        id='installed_outgoing_webhooks.help.buildYourOwn'\n                                        defaultMessage='Build your own'\n                                    />\n                                </a>\n                            ),\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://mattermost.com/marketplace'\n                                >\n                                    <FormattedMessage\n                                        id='installed_outgoing_webhooks.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                }\n                searchPlaceholder={Utils.localizeMessage('installed_outgoing_webhooks.search', 'Search Outgoing Webhooks')}\n                loading={this.state.loading}\n            >\n                {(filter) => {\n                    const children = this.outgoingWebhooks(filter);\n                    return [children, children.length > 0];\n                }}\n            </BackstageList>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport * as Actions from 'mattermost-redux/actions/integrations';\nimport {getOutgoingHooks} from 'mattermost-redux/selectors/entities/integrations';\nimport {getCurrentTeamId} from 'mattermost-redux/selectors/entities/teams';\nimport {getAllChannels} from 'mattermost-redux/selectors/entities/channels';\nimport {getUsers} from 'mattermost-redux/selectors/entities/users';\nimport {haveITeamPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {loadOutgoingHooksAndProfilesForTeam} from 'actions/integration_actions';\n\nimport InstalledOutgoingWebhook from './installed_outgoing_webhooks.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const teamId = getCurrentTeamId(state);\n    const canManageOthersWebhooks = haveITeamPermission(state, teamId, Permissions.MANAGE_OTHERS_OUTGOING_WEBHOOKS);\n    const outgoingHooks = getOutgoingHooks(state);\n    const outgoingWebhooks = Object.keys(outgoingHooks).\n        map((key) => outgoingHooks[key]).\n        filter((outgoingWebhook) => outgoingWebhook.team_id === teamId);\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\n\n    return {\n        outgoingWebhooks,\n        channels: getAllChannels(state),\n        users: getUsers(state),\n        teamId,\n        canManageOthersWebhooks,\n        enableOutgoingWebhooks,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadOutgoingHooksAndProfilesForTeam,\n            removeOutgoingHook: Actions.removeOutgoingHook,\n            regenOutgoingHookToken: Actions.regenOutgoingHookToken,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstalledOutgoingWebhook);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {localizeMessage} from 'utils/utils';\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport ChannelSelect from 'components/channel_select';\nimport FormError from 'components/form_error';\nimport SpinnerButton from 'components/spinner_button';\n\nexport default class AbstractOutgoingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * The current team\n         */\n        team: PropTypes.object.isRequired,\n\n        /**\n         * The header text to render, has id and defaultMessage\n         */\n        header: PropTypes.object.isRequired,\n\n        /**\n         * The footer text to render, has id and defaultMessage\n         */\n        footer: PropTypes.object.isRequired,\n\n        /**\n        * The spinner loading text to render, has id and defaultMessage\n        */\n        loading: PropTypes.object.isRequired,\n\n        /**\n         * Any extra component/node to render\n         */\n        renderExtra: PropTypes.node.isRequired,\n\n        /**\n         * The server error text after a failed action\n         */\n        serverError: PropTypes.string.isRequired,\n\n        /**\n         * The hook used to set the initial state\n         */\n        initialHook: PropTypes.object,\n\n        /**\n         * The async function to run when the action button is pressed\n         */\n        action: PropTypes.func.isRequired,\n\n        /**\n         * Whether to allow configuration of the default post username.\n         */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n         * Whether to allow configuration of the default post icon.\n         */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = this.getStateFromHook(this.props.initialHook || {});\n    }\n\n    getStateFromHook = (hook) => {\n        let triggerWords = '';\n        if (hook.trigger_words) {\n            let i = 0;\n            for (i = 0; i < hook.trigger_words.length; i++) {\n                triggerWords += hook.trigger_words[i] + '\\n';\n            }\n        }\n\n        let callbackUrls = '';\n        if (hook.callback_urls) {\n            let i = 0;\n            for (i = 0; i < hook.callback_urls.length; i++) {\n                callbackUrls += hook.callback_urls[i] + '\\n';\n            }\n        }\n\n        return {\n            displayName: hook.display_name || '',\n            description: hook.description || '',\n            contentType: hook.content_type || 'application/x-www-form-urlencoded',\n            channelId: hook.channel_id || '',\n            triggerWords,\n            triggerWhen: hook.trigger_when || 0,\n            callbackUrls,\n            saving: false,\n            clientError: null,\n            username: hook.username || '',\n            iconURL: hook.icon_url || '',\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            clientError: '',\n        });\n\n        const triggerWords = [];\n        if (this.state.triggerWords) {\n            for (let triggerWord of this.state.triggerWords.split('\\n')) {\n                triggerWord = triggerWord.trim();\n\n                if (triggerWord.length > 0) {\n                    triggerWords.push(triggerWord);\n                }\n            }\n        }\n\n        if (!this.state.channelId && triggerWords.length === 0) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_outgoing_webhook.triggerWordsOrChannelRequired'\n                        defaultMessage='A valid channel or a list of trigger words is required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const callbackUrls = [];\n        for (let callbackUrl of this.state.callbackUrls.split('\\n')) {\n            callbackUrl = callbackUrl.trim();\n\n            if (callbackUrl.length > 0) {\n                callbackUrls.push(callbackUrl);\n            }\n        }\n\n        if (callbackUrls.length === 0) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_outgoing_webhook.callbackUrlsRequired'\n                        defaultMessage='One or more callback URLs are required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const hook = {\n            team_id: this.props.team.id,\n            channel_id: this.state.channelId,\n            trigger_words: triggerWords,\n            trigger_when: parseInt(this.state.triggerWhen, 10),\n            callback_urls: callbackUrls,\n            display_name: this.state.displayName,\n            content_type: this.state.contentType,\n            description: this.state.description,\n            username: this.state.username,\n            icon_url: this.state.iconURL,\n        };\n\n        this.props.action(hook).then(() => this.setState({saving: false}));\n    }\n\n    updateDisplayName = (e) => {\n        this.setState({\n            displayName: e.target.value,\n        });\n    }\n\n    updateDescription = (e) => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    updateContentType = (e) => {\n        this.setState({\n            contentType: e.target.value,\n        });\n    }\n\n    updateChannelId = (e) => {\n        this.setState({\n            channelId: e.target.value,\n        });\n    }\n\n    updateTriggerWords = (e) => {\n        this.setState({\n            triggerWords: e.target.value,\n        });\n    }\n\n    updateTriggerWhen = (e) => {\n        this.setState({\n            triggerWhen: e.target.value,\n        });\n    }\n\n    updateCallbackUrls = (e) => {\n        this.setState({\n            callbackUrls: e.target.value,\n        });\n    }\n\n    updateUsername = (e) => {\n        this.setState({\n            username: e.target.value,\n        });\n    }\n\n    updateIconURL = (e) => {\n        this.setState({\n            iconURL: e.target.value,\n        });\n    }\n\n    render() {\n        const contentTypeOption1 = 'application/x-www-form-urlencoded';\n        const contentTypeOption2 = 'application/json';\n\n        var headerToRender = this.props.header;\n        var footerToRender = this.props.footer;\n        var renderExtra = this.props.renderExtra;\n\n        return (\n            <div className='backstage-content'>\n                <BackstageHeader>\n                    <Link to={`/${this.props.team.name}/integrations/outgoing_webhooks`}>\n                        <FormattedMessage\n                            id='installed_outgoing_webhooks.header'\n                            defaultMessage='Outgoing Webhooks'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id={headerToRender.id}\n                        defaultMessage={headerToRender.defaultMessage}\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='displayName'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.displayName'\n                                    defaultMessage='Title'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='displayName'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.displayName}\n                                    onChange={this.updateDisplayName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.displayName.help'\n                                        defaultMessage='Specify a title, of up to 64 characters, for the webhook settings page.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='500'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.description.help'\n                                        defaultMessage='Describe your outgoing webhook.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='contentType'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.content_Type'\n                                    defaultMessage='Content Type'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <select\n                                    className='form-control'\n                                    value={this.state.contentType}\n                                    onChange={this.updateContentType}\n                                >\n                                    <option\n                                        value={contentTypeOption1}\n                                    >\n                                        {contentTypeOption1}\n                                    </option>\n                                    <option\n                                        value={contentTypeOption2}\n                                    >\n                                        {contentTypeOption2}\n                                    </option>\n                                </select>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.contentType.help1'\n                                        defaultMessage='Specify the content type by which to send the request.'\n                                    />\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.contentType.help2'\n                                        defaultMessage='For the server to encode the parameters in a URL format in the request body, select application/x-www-form-urlencoded.'\n                                    />\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.contentType.help3'\n                                        defaultMessage='For the server to format the request body as JSON, select application/json.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='channelId'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.channel'\n                                    defaultMessage='Channel'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <ChannelSelect\n                                    id='channelId'\n                                    value={this.state.channelId}\n                                    onChange={this.updateChannelId}\n                                    selectOpen={true}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.channel.help'\n                                        defaultMessage='This field is optional if you specify at least one trigger word. Specify the public channel that delivers the payload to the webhook.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='triggerWords'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.triggerWords'\n                                    defaultMessage='Trigger Words (One Per Line)'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <textarea\n                                    id='triggerWords'\n                                    rows='3'\n                                    maxLength='1000'\n                                    className='form-control'\n                                    value={this.state.triggerWords}\n                                    onChange={this.updateTriggerWords}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.triggerWords.help'\n                                        defaultMessage='Specify the trigger words that send an HTTP POST request to your application.  The trigger can be for the channel, the outgoing webhook, or both. If you select only Channel, trigger words are optional. If you select both, the message must match both values.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='triggerWords'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.triggerWordsTriggerWhen'\n                                    defaultMessage='Trigger When'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <select\n                                    className='form-control'\n                                    value={this.state.triggerWhen}\n                                    onChange={this.updateTriggerWhen}\n                                >\n                                    <option\n                                        value='0'\n                                    >\n                                        {localizeMessage('add_outgoing_webhook.triggerWordsTriggerWhenFullWord', 'First word matches a trigger word exactly')}\n                                    </option>\n                                    <option\n                                        value='1'\n                                    >\n                                        {localizeMessage('add_outgoing_webhook.triggerWordsTriggerWhenStartsWith', 'First word starts with a trigger word')}\n                                    </option>\n                                </select>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.triggerWordsTriggerWhen.help'\n                                        defaultMessage='Specify when to trigger the outgoing webhook.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='callbackUrls'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.callbackUrls'\n                                    defaultMessage='Callback URLs (One Per Line)'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <textarea\n                                    id='callbackUrls'\n                                    rows='3'\n                                    maxLength='1000'\n                                    className='form-control'\n                                    value={this.state.callbackUrls}\n                                    onChange={this.updateCallbackUrls}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.callbackUrls.help'\n                                        defaultMessage='Specify the URL that the messages will be sent to. If the URL is private, add it as a {link}.'\n                                        values={{\n                                            link: (\n                                                <a\n                                                    href='https://docs.mattermost.com/configure/configuration-settings.html#session-lengths'\n                                                    target='_blank'\n                                                    rel='noopener noreferrer'\n                                                >\n                                                    <FormattedMessage\n                                                        id='add_outgoing_webhook.callbackUrls.helpLinkText'\n                                                        defaultMessage='trusted internal connection'\n                                                    />\n                                                </a>\n                                            ),\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        {this.props.enablePostUsernameOverride &&\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                    htmlFor='username'\n                                >\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.username'\n                                        defaultMessage='Username'\n                                    />\n                                </label>\n                                <div className='col-md-5 col-sm-8'>\n                                    <input\n                                        id='username'\n                                        type='text'\n                                        maxLength='22'\n                                        className='form-control'\n                                        value={this.state.username}\n                                        onChange={this.updateUsername}\n                                    />\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_outgoing_webhook.username.help'\n                                            defaultMessage='Specify the username this integration will post as. Usernames can be up to 22 characters, and contain lowercase letters, numbers and the symbols \\\"-\\\", \\\"_\\\", and \\\".\\\". If left blank, the name specified by the webhook creator is used.'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        {this.props.enablePostIconOverride &&\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                    htmlFor='iconURL'\n                                >\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.icon_url'\n                                        defaultMessage='Profile Picture'\n                                    />\n                                </label>\n                                <div className='col-md-5 col-sm-8'>\n                                    <input\n                                        id='iconURL'\n                                        type='text'\n                                        maxLength='1024'\n                                        className='form-control'\n                                        value={this.state.iconURL}\n                                        onChange={this.updateIconURL}\n                                    />\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_outgoing_webhook.icon_url.help'\n                                            defaultMessage='Enter the URL of a .png or .jpg file for this integration to use as the profile picture when posting. The file should be at least 128 pixels by 128 pixels. If left blank, the profile picture specified by the webhook creator is used.'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.props.serverError, this.state.clientError]}\n                            />\n                            <Link\n                                className='btn btn-link btn-sm'\n                                to={`/${this.props.team.name}/integrations/outgoing_webhooks`}\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                spinningText={localizeMessage(this.props.loading.id, this.props.loading.defaultMessage)}\n                                onClick={this.handleSubmit}\n                                id='saveWebhook'\n                            >\n                                <FormattedMessage\n                                    id={footerToRender.id}\n                                    defaultMessage={footerToRender.defaultMessage}\n                                />\n                            </SpinnerButton>\n                            {renderExtra}\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport AbstractOutgoingWebhook from 'components/integrations/abstract_outgoing_webhook.jsx';\n\nconst HEADER = {id: t('integrations.add'), defaultMessage: 'Add'};\nconst FOOTER = {id: t('add_outgoing_webhook.save'), defaultMessage: 'Save'};\nconst LOADING = {id: t('add_outgoing_webhook.saving'), defaultMessage: 'Saving...'};\n\nexport default class AddOutgoingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * The current team\n         */\n        team: PropTypes.object.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n             * The function to call to add a new outgoing webhook\n             */\n            createOutgoingHook: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n         * Whether to allow configuration of the default post username.\n         */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n         * Whether to allow configuration of the default post icon.\n         */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            serverError: '',\n        };\n    }\n\n    addOutgoingHook = async (hook) => {\n        this.setState({serverError: ''});\n\n        const {data, error} = await this.props.actions.createOutgoingHook(hook);\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/confirm?type=outgoing_webhooks&id=${data.id}`);\n            return;\n        }\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    render() {\n        return (\n            <AbstractOutgoingWebhook\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                loading={LOADING}\n                renderExtra={''}\n                action={this.addOutgoingHook}\n                serverError={this.state.serverError}\n                enablePostUsernameOverride={this.props.enablePostUsernameOverride}\n                enablePostIconOverride={this.props.enablePostIconOverride}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {createOutgoingHook} from 'mattermost-redux/actions/integrations';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport AddOutgoingWebhook from './add_outgoing_webhook.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\n    const enablePostIconOverride = config.EnablePostIconOverride === 'true';\n    return {\n        enablePostUsernameOverride,\n        enablePostIconOverride,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            createOutgoingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddOutgoingWebhook);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Team} from '@mattermost/types/teams';\nimport {OutgoingWebhook} from '@mattermost/types/integrations';\nimport {ServerError} from '@mattermost/types/errors';\n\nimport {browserHistory} from 'utils/browser_history';\nimport ConfirmModal from 'components/confirm_modal';\nimport AbstractOutgoingWebhook from 'components/integrations/abstract_outgoing_webhook.jsx';\nimport LoadingScreen from 'components/loading_screen';\n\nconst HEADER = {id: 'integrations.edit', defaultMessage: 'Edit'};\nconst FOOTER = {id: 'update_outgoing_webhook.update', defaultMessage: 'Update'};\nconst LOADING = {id: 'update_outgoing_webhook.updating', defaultMessage: 'Updating...'};\n\ninterface Props {\n\n    /**\n     * The current team\n     */\n    team: Team;\n\n    /**\n     * The outgoing webhook to edit\n     */\n    hook?: OutgoingWebhook;\n\n    /**\n     * The id of the outgoing webhook to edit\n     */\n    hookId: string;\n    actions: {\n\n        /**\n         * The function to call to update an outgoing webhook\n         */\n        updateOutgoingHook: (hook: OutgoingWebhook) => Promise<{ data: OutgoingWebhook; error: ServerError }>;\n\n        /**\n         * The function to call to get an outgoing webhook\n         */\n        getOutgoingHook: (hookId: string) => Promise<{ data: OutgoingWebhook; error: ServerError }>;\n    };\n\n    /**\n     * Whether or not outgoing webhooks are enabled.\n     */\n    enableOutgoingWebhooks?: boolean;\n\n    /**\n     * Whether to allow configuration of the default post username.\n     */\n    enablePostUsernameOverride: boolean;\n\n    /**\n     * Whether to allow configuration of the default post icon.\n     */\n    enablePostIconOverride: boolean;\n}\n\ninterface State {\n    showConfirmModal: boolean;\n    serverError: string;\n}\n\nexport default class EditOutgoingWebhook extends React.PureComponent<Props, State> {\n    private newHook: OutgoingWebhook | undefined;\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            showConfirmModal: false,\n            serverError: '',\n        };\n    }\n\n    componentDidMount(): void {\n        if (this.props.enableOutgoingWebhooks) {\n            this.props.actions.getOutgoingHook(this.props.hookId);\n        }\n    }\n\n    editOutgoingHook = async (hook: OutgoingWebhook): Promise<void> => {\n        this.newHook = hook;\n\n        if (this.props.hook!.id) {\n            hook.id = this.props.hook!.id;\n        }\n\n        if (this.props.hook!.token) {\n            hook.token = this.props.hook!.token;\n        }\n\n        const triggerWordsSame = (this.props.hook!.trigger_words.length === hook!.trigger_words.length) &&\n            this.props.hook!.trigger_words.every((v, i) => v === hook.trigger_words[i]);\n\n        const callbackUrlsSame = (this.props.hook!.callback_urls.length === hook!.callback_urls.length) &&\n            this.props.hook!.callback_urls.every((v, i) => v === hook.callback_urls[i]);\n\n        if (this.props.hook!.content_type !== hook.content_type ||\n            !triggerWordsSame || !callbackUrlsSame) {\n            this.handleConfirmModal();\n        } else {\n            await this.submitHook();\n        }\n    }\n\n    handleConfirmModal = (): void => {\n        this.setState({showConfirmModal: true});\n    }\n\n    confirmModalDismissed = (): void => {\n        this.setState({showConfirmModal: false});\n    }\n\n    submitHook = async (): Promise<void> => {\n        this.setState({serverError: ''});\n\n        const {data, error}: {data: OutgoingWebhook; error: ServerError} = await this.props.actions.updateOutgoingHook(this.newHook!);\n\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/outgoing_webhooks`);\n            return;\n        }\n\n        this.setState({showConfirmModal: false});\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    renderExtra = (): JSX.Element => {\n        const confirmButton = (\n            <FormattedMessage\n                id='update_outgoing_webhook.update'\n                defaultMessage='Update'\n            />\n        );\n\n        const confirmTitle = (\n            <FormattedMessage\n                id='update_outgoing_webhook.confirm'\n                defaultMessage='Edit Outgoing Webhook'\n            />\n        );\n\n        const confirmMessage = (\n            <FormattedMessage\n                id='update_outgoing_webhook.question'\n                defaultMessage='Your changes may break the existing outgoing webhook. Are you sure you would like to update it?'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                title={confirmTitle}\n                message={confirmMessage}\n                confirmButtonText={confirmButton}\n                show={this.state.showConfirmModal}\n                onConfirm={this.submitHook}\n                onCancel={this.confirmModalDismissed}\n            />\n        );\n    }\n\n    render(): JSX.Element {\n        if (!this.props.hook) {\n            return <LoadingScreen/>;\n        }\n\n        return (\n            <AbstractOutgoingWebhook\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                loading={LOADING}\n                renderExtra={this.renderExtra()}\n                action={this.editOutgoingHook}\n                serverError={this.state.serverError}\n                initialHook={this.props.hook}\n                enablePostUsernameOverride={this.props.enablePostUsernameOverride}\n                enablePostIconOverride={this.props.enablePostIconOverride}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {ActionCreatorsMapObject, bindActionCreators, Dispatch} from 'redux';\n\nimport {getOutgoingHook, updateOutgoingHook} from 'mattermost-redux/actions/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {GlobalState} from '@mattermost/types/store';\nimport {ActionFunc, GenericAction} from 'mattermost-redux/types/actions';\nimport {OutgoingWebhook} from '@mattermost/types/integrations';\nimport {ServerError} from '@mattermost/types/errors';\n\nimport EditOutgoingWebhook from './edit_outgoing_webhook';\n\ntype OwnProps = {\n    location: {\n        search: string | string[][] | Record<string, string> | URLSearchParams | undefined;\n    };\n}\n\ntype Actions = {\n    updateOutgoingHook: (hook: OutgoingWebhook) => Promise<{ data: OutgoingWebhook; error: ServerError }>;\n    getOutgoingHook: (hookId: string) => Promise<{ data: OutgoingWebhook; error: ServerError }>;\n}\n\nfunction mapStateToProps(state: GlobalState, ownProps: OwnProps) {\n    const config = getConfig(state);\n    const hookId = (new URLSearchParams(ownProps.location.search)).get('id');\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\n    const enablePostIconOverride = config.EnablePostIconOverride === 'true';\n\n    return {\n        hookId: hookId!,\n        hook: state.entities.integrations.outgoingHooks[hookId!],\n        enableOutgoingWebhooks,\n        enablePostUsernameOverride,\n        enablePostIconOverride,\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Actions>({\n            updateOutgoingHook,\n            getOutgoingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditOutgoingWebhook);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {OAuthApp} from '@mattermost/types/integrations';\nimport {Team} from '@mattermost/types/teams';\n\nimport * as Utils from 'utils/utils';\nimport FormError from 'components/form_error';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport CopyText from 'components/copy_text';\n\nimport DeleteIntegrationLink from '../delete_integration_link';\n\nconst FAKE_SECRET = '***************';\n\nexport function matchesFilter(oauthApp: OAuthApp, filter?: string | null): boolean {\n    if (!filter) {\n        return true;\n    }\n\n    return oauthApp.name.toLowerCase().includes(filter);\n}\n\nexport type InstalledOAuthAppProps = {\n\n    /**\n     * The team data\n     */\n    team: Partial<Team>;\n\n    /**\n     * The oauthApp data\n     */\n    oauthApp: OAuthApp;\n\n    /**\n     * Whether the oauth app is created by an App\n     */\n    fromApp: boolean;\n\n    creatorName: string;\n\n    /**\n     * The function to call when Regenerate Secret link is clicked\n     */\n    onRegenerateSecret: (oauthAppId: string) => Promise<{ error?: { message: string } }>;\n\n    /**\n     * The function to call when Delete link is clicked\n     */\n    onDelete: (oauthApp: OAuthApp) => void;\n\n    /**\n     * Set to filter OAuthApp\n     */\n    filter?: string | null;\n}\n\nexport type InstalleOAuthAppState = {\n    clientSecret: string;\n    error?: string | null;\n}\n\nexport default class InstalledOAuthApp extends React.PureComponent<InstalledOAuthAppProps, InstalleOAuthAppState> {\n    constructor(props: InstalledOAuthAppProps) {\n        super(props);\n\n        this.state = {\n            clientSecret: FAKE_SECRET,\n        };\n    }\n\n    handleShowClientSecret = (e?: React.MouseEvent): void => {\n        if (e && e.preventDefault) {\n            e.preventDefault();\n        }\n        this.setState({clientSecret: this.props.oauthApp.client_secret});\n    }\n\n    handleHideClientSecret = (e: React.MouseEvent): void => {\n        e.preventDefault();\n        this.setState({clientSecret: FAKE_SECRET});\n    }\n\n    handleRegenerate = (e: React.MouseEvent): void => {\n        e.preventDefault();\n        this.props.onRegenerateSecret(this.props.oauthApp.id).then(\n            ({error}) => {\n                if (error) {\n                    this.setState({error: error.message});\n                } else {\n                    this.setState({error: null});\n                    this.handleShowClientSecret();\n                }\n            },\n        );\n    }\n\n    handleDelete = (): void => {\n        this.props.onDelete(this.props.oauthApp);\n    }\n\n    render(): React.ReactNode {\n        const {oauthApp, creatorName} = this.props;\n        let error;\n\n        if (this.state.error) {\n            error = (\n                <FormError\n                    error={this.state.error}\n                />\n            );\n        }\n\n        if (!matchesFilter(oauthApp, this.props.filter)) {\n            return null;\n        }\n\n        let name;\n        if (oauthApp.name) {\n            name = oauthApp.name;\n        } else {\n            name = (\n                <FormattedMessage\n                    id='installed_integrations.unnamed_oauth_app'\n                    defaultMessage='Unnamed OAuth 2.0 Application'\n                />\n            );\n        }\n\n        let description;\n        if (oauthApp.description) {\n            description = (\n                <div className='item-details__row'>\n                    <span className='item-details__description'>\n                        {oauthApp.description}\n                    </span>\n                </div>\n            );\n        }\n\n        const urls = (\n            <div className='item-details__row'>\n                <span className='item-details__url word-break--all'>\n                    <FormattedMessage\n                        id='installed_integrations.callback_urls'\n                        defaultMessage='Callback URLs: {urls}'\n                        values={{\n                            urls: oauthApp.callback_urls.join(', '),\n                        }}\n                    />\n                </span>\n            </div>\n        );\n\n        let isTrusted;\n        if (oauthApp.is_trusted) {\n            isTrusted = Utils.localizeMessage('installed_oauth_apps.trusted.yes', 'Yes');\n        } else {\n            isTrusted = Utils.localizeMessage('installed_oauth_apps.trusted.no', 'No');\n        }\n\n        let showHide;\n        let clientSecret;\n        if (this.state.clientSecret === FAKE_SECRET) {\n            showHide = (\n                <button\n                    id='showSecretButton'\n                    className='style--none color--link'\n                    onClick={this.handleShowClientSecret}\n                >\n                    <FormattedMessage\n                        id='installed_integrations.showSecret'\n                        defaultMessage='Show Secret'\n                    />\n                </button>\n            );\n            clientSecret = (\n                <span className='item-details__token'>\n                    <FormattedMessage\n                        id='installed_integrations.client_secret'\n                        defaultMessage='Client Secret: **{clientSecret}**'\n                        values={{\n                            clientSecret: this.state.clientSecret,\n                        }}\n                    />\n                </span>\n            );\n        } else {\n            showHide = (\n                <button\n                    id='hideSecretButton'\n                    className='style--none color--link'\n                    onClick={this.handleHideClientSecret}\n                >\n                    <FormattedMessage\n                        id='installed_integrations.hideSecret'\n                        defaultMessage='Hide Secret'\n                    />\n                </button>\n            );\n            clientSecret = (\n                <span className='item-details__token'>\n                    <FormattedMarkdownMessage\n                        id='installed_integrations.client_secret'\n                        defaultMessage='Client Secret: **{clientSecret}**'\n                        values={{\n                            clientSecret: this.state.clientSecret,\n                        }}\n                    />\n                    <CopyText\n                        idMessage='integrations.copy_client_secret'\n                        defaultMessage='Copy Client Secret'\n                        value={this.state.clientSecret}\n                    />\n                </span>\n            );\n        }\n\n        const regen = (\n            <button\n                id='regenerateSecretButton'\n                className='style--none color--link'\n                onClick={this.handleRegenerate}\n            >\n                <FormattedMessage\n                    id='installed_integrations.regenSecret'\n                    defaultMessage='Regenerate Secret'\n                />\n            </button>\n        );\n\n        let icon;\n        if (oauthApp.icon_url) {\n            icon = (\n                <div className='integration__icon integration-list__icon'>\n                    <img\n                        alt={'get app screenshot'}\n                        src={oauthApp.icon_url}\n                    />\n                </div>\n            );\n        }\n\n        let actions;\n        if (!this.props.fromApp) {\n            actions = (\n                <div className='item-actions'>\n                    {showHide}\n                    {' - '}\n                    {regen}\n                    {' - '}\n                    <Link to={`/${this.props.team.name}/integrations/oauth2-apps/edit?id=${oauthApp.id}`}>\n                        <FormattedMessage\n                            id='installed_integrations.edit'\n                            defaultMessage='Edit'\n                        />\n                    </Link>\n                    {' - '}\n                    <DeleteIntegrationLink\n                        modalMessage={\n                            <FormattedMessage\n                                id='installed_oauth_apps.delete.confirm'\n                                defaultMessage='This action permanently deletes the OAuth 2.0 application and breaks any integrations using it. Are you sure you want to delete it?'\n                            />\n                        }\n                        onDelete={this.handleDelete}\n                    />\n                </div>\n            );\n        }\n\n        let appInfo = (\n            <div className='item-details__row'>\n                <span className='item-details__creation'>\n                    <FormattedMessage\n                        id='installed_integrations.fromApp'\n                        defaultMessage='Managed by Apps Framework'\n                    />\n                </span>\n            </div>\n        );\n        if (!this.props.fromApp) {\n            appInfo = (\n                <>\n                    <div className='item-details__row'>\n                        <span className='item-details__url word-break--all'>\n                            <FormattedMarkdownMessage\n                                id='installed_oauth_apps.is_trusted'\n                                defaultMessage='Is Trusted: **{isTrusted}**'\n                                values={{\n                                    isTrusted,\n                                }}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__token'>\n                            <FormattedMarkdownMessage\n                                id='installed_integrations.client_id'\n                                defaultMessage='Client ID: **{clientId}**'\n                                values={{\n                                    clientId: oauthApp.id,\n                                }}\n                            />\n                            <CopyText\n                                idMessage='integrations.copy_client_id'\n                                defaultMessage='Copy Client Id'\n                                value={oauthApp.id}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        {clientSecret}\n                    </div>\n                    {urls}\n                    <div className='item-details__row'>\n                        <span className='item-details__creation'>\n                            <FormattedMessage\n                                id='installed_integrations.creation'\n                                defaultMessage='Created by {creator} on {createAt, date, full}'\n                                values={{\n                                    creator: creatorName,\n                                    createAt: oauthApp.create_at,\n                                }}\n                            />\n                        </span>\n                    </div>\n                </>\n            );\n        }\n\n        return (\n            <div className='backstage-list__item'>\n                {icon}\n                <div className='item-details'>\n                    <div className='item-details__row d-flex flex-column flex-md-row justify-content-between'>\n                        <strong className='item-details__name'>\n                            {name}\n                        </strong>\n                        {actions}\n                    </div>\n                    {error}\n                    {description}\n                    {appInfo}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getUser} from 'mattermost-redux/selectors/entities/users';\n\nimport {GlobalState} from 'types/store';\n\nimport {getDisplayNameByUser} from 'utils/utils';\n\nimport InstalledOAuthApp, {InstalledOAuthAppProps} from './installed_oauth_app';\n\nfunction mapStateToProps(state: GlobalState, ownProps: InstalledOAuthAppProps) {\n    const oauthApp = ownProps.oauthApp || {};\n    return {\n        creatorName: getDisplayNameByUser(state, getUser(state, oauthApp.creator_id)),\n    };\n}\n\nexport default connect(mapStateToProps)(InstalledOAuthApp);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {OAuthApp} from '@mattermost/types/integrations';\n\nimport {localizeMessage} from 'utils/utils';\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\nimport InstalledOAuthApp from '../installed_oauth_app';\nimport {matchesFilter} from '../installed_oauth_app/installed_oauth_app';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\ntype Props = {\n\n    /**\n    * The team data\n    */\n    team: {name: string};\n\n    /**\n    * The oauthApps data\n    */\n    oauthApps: {\n        [key: string]: OAuthApp;\n    };\n\n    /**\n     * List of IDs for apps managed by the App Framwork\n     */\n    appsOAuthAppIDs: string[];\n\n    /**\n    * Set if user can manage oath\n    */\n    canManageOauth: boolean;\n\n    /**\n    * Whether or not OAuth applications are enabled.\n    */\n    enableOAuthServiceProvider: boolean;\n\n    actions: ({\n\n        /**\n        * The function to call to fetch OAuth apps\n        */\n        loadOAuthAppsAndProfiles: (page?: number, perPage?: number) => Promise<void>;\n\n        /**\n        * The function to call when Regenerate Secret link is clicked\n        */\n        regenOAuthAppSecret: (appId: string) => Promise<{ error?: Error }>;\n\n        /**\n        * The function to call when Delete link is clicked\n        */\n        deleteOAuthApp: (appId: string) => Promise<void>;\n    });\n};\n\ntype State = {\n    loading: boolean;\n};\n\nexport default class InstalledOAuthApps extends React.PureComponent<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount(): void {\n        if (this.props.enableOAuthServiceProvider) {\n            this.props.actions.loadOAuthAppsAndProfiles().then(\n                () => this.setState({loading: false}),\n            );\n        }\n    }\n\n    deleteOAuthApp = (app: OAuthApp): void => {\n        if (app && app.id) {\n            this.props.actions.deleteOAuthApp(app.id);\n        }\n    }\n\n    oauthAppCompare(a: OAuthApp, b: OAuthApp): number {\n        let nameA = a.name.toString();\n        if (!nameA) {\n            nameA = localizeMessage('installed_integrations.unnamed_oauth_app', 'Unnamed OAuth 2.0 Application');\n        }\n\n        let nameB = b.name.toString();\n        if (!nameB) {\n            nameB = localizeMessage('installed_integrations.unnamed_oauth_app', 'Unnamed OAuth 2.0 Application');\n        }\n\n        return nameA.localeCompare(nameB);\n    }\n\n    oauthApps = (filter?: string) => Object.values(this.props.oauthApps).\n        filter((app) => matchesFilter(app, filter)).\n        sort(this.oauthAppCompare).\n        map((app) => {\n            return (\n                <InstalledOAuthApp\n                    key={app.id}\n                    oauthApp={app}\n                    onRegenerateSecret={this.props.actions.regenOAuthAppSecret}\n                    onDelete={this.deleteOAuthApp}\n                    team={this.props.team}\n                    creatorName=''\n                    fromApp={this.props.appsOAuthAppIDs.includes(app.id)}\n                />\n            );\n        });\n\n    render(): JSX.Element {\n        const integrationsEnabled = this.props.enableOAuthServiceProvider && this.props.canManageOauth;\n        let props;\n        if (integrationsEnabled) {\n            props = {\n                addLink: '/' + this.props.team.name + '/integrations/oauth2-apps/add',\n                addText: localizeMessage('installed_oauth_apps.add', 'Add OAuth 2.0 Application'),\n                addButtonId: 'addOauthApp',\n            };\n        }\n\n        return (\n            <BackstageList\n                header={\n                    <FormattedMessage\n                        id='installed_oauth_apps.header'\n                        defaultMessage='OAuth 2.0 Applications'\n                    />\n                }\n                helpText={\n                    <FormattedMessage\n                        id='installed_oauth_apps.help'\n                        defaultMessage='Create {oauthApplications} to securely integrate bots and third-party apps with Mattermost. Visit the {appDirectory} to find available self-hosted apps.'\n                        values={{\n                            oauthApplications: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://developers.mattermost.com/integrate/admin-guide/admin-oauth2/'\n                                >\n                                    <FormattedMessage\n                                        id='installed_oauth_apps.help.oauthApplications'\n                                        defaultMessage='OAuth 2.0 applications'\n                                    />\n                                </a>\n                            ),\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://mattermost.com/marketplace/'\n                                >\n                                    <FormattedMessage\n                                        id='installed_oauth_apps.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                }\n                emptyText={\n                    <FormattedMessage\n                        id='installed_oauth_apps.empty'\n                        defaultMessage='No OAuth 2.0 Applications found'\n                    />\n                }\n                emptyTextSearch={\n                    <FormattedMarkdownMessage\n                        id='installed_oauth_apps.emptySearch'\n                        defaultMessage='No OAuth 2.0 Applications match {searchTerm}'\n                    />\n                }\n                searchPlaceholder={localizeMessage('installed_oauth_apps.search', 'Search OAuth 2.0 Applications')}\n                loading={this.state.loading}\n                {...props}\n            >\n                {(filter: string) => {\n                    const children = this.oauthApps(filter);\n                    return [children, children.length > 0];\n                }}\n            </BackstageList>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch, ActionCreatorsMapObject} from 'redux';\n\nimport {regenOAuthAppSecret, deleteOAuthApp} from 'mattermost-redux/actions/integrations';\nimport {getAppsOAuthAppIDs, getOAuthApps} from 'mattermost-redux/selectors/entities/integrations';\nimport {haveISystemPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {GlobalState} from '@mattermost/types/store';\n\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport {GenericAction} from 'mattermost-redux/types/actions';\n\nimport {loadOAuthAppsAndProfiles} from 'actions/integration_actions';\n\nimport InstalledOAuthApps from './installed_oauth_apps';\n\nfunction mapStateToProps(state: GlobalState) {\n    const config = getConfig(state);\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\n\n    return {\n        canManageOauth: haveISystemPermission(state, {permission: Permissions.MANAGE_OAUTH}),\n        oauthApps: getOAuthApps(state),\n        appsOAuthAppIDs: getAppsOAuthAppIDs(state),\n        enableOAuthServiceProvider,\n        team: getCurrentTeam(state),\n    };\n}\n\ntype Actions = {\n    loadOAuthAppsAndProfiles: (page?: number, perPage?: number) => Promise<void>;\n    regenOAuthAppSecret: (appId: string) => Promise<{ error?: Error }>;\n    deleteOAuthApp: (appId: string) => Promise<void>;\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject, Actions>({\n            loadOAuthAppsAndProfiles,\n            regenOAuthAppSecret,\n            deleteOAuthApp,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstalledOAuthApps);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport {localizeMessage} from 'utils/utils';\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport FormError from 'components/form_error';\nimport SpinnerButton from 'components/spinner_button';\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\n\nexport default class AbstractOAuthApp extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The header text to render, has id and defaultMessage\n        */\n        header: PropTypes.object.isRequired,\n\n        /**\n        * The footer text to render, has id and defaultMessage\n        */\n        footer: PropTypes.object.isRequired,\n\n        /**\n        * The spinner loading text to render, has id and defaultMessage\n        */\n        loading: PropTypes.object.isRequired,\n\n        /**\n         * Any extra component/node to render\n         */\n        renderExtra: PropTypes.node.isRequired,\n\n        /**\n        * The server error text after a failed action\n        */\n        serverError: PropTypes.string.isRequired,\n\n        /**\n        * The OAuthApp used to set the initial state\n        */\n        initialApp: PropTypes.object,\n\n        /**\n        * The async function to run when the action button is pressed\n        */\n        action: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.image = new Image();\n        this.image.onload = this.imageLoaded;\n        this.icon_url = React.createRef();\n        this.state = this.getStateFromApp(this.props.initialApp || {});\n    }\n\n    getStateFromApp = (app) => {\n        return {\n            name: app.name || '',\n            description: app.description || '',\n            homepage: app.homepage || '',\n            icon_url: app.icon_url || '',\n            callbackUrls: app.callback_urls ? app.callback_urls.join('\\n') : '',\n            is_trusted: app.is_trusted || false,\n            has_icon: Boolean(app.icon_url),\n            saving: false,\n            clientError: null,\n        };\n    }\n\n    imageLoaded = () => {\n        this.setState({\n            has_icon: true,\n            icon_url: this.icon_url.current.value,\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            clientError: '',\n        });\n\n        if (!this.state.name) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_oauth_app.nameRequired'\n                        defaultMessage='Name for the OAuth 2.0 application is required.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (!this.state.description) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_oauth_app.descriptionRequired'\n                        defaultMessage='Description for the OAuth 2.0 application is required.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (!this.state.homepage) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_oauth_app.homepageRequired'\n                        defaultMessage='Homepage for the OAuth 2.0 application is required.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const callbackUrls = [];\n        for (let callbackUrl of this.state.callbackUrls.split('\\n')) {\n            callbackUrl = callbackUrl.trim();\n\n            if (callbackUrl.length > 0) {\n                callbackUrls.push(callbackUrl);\n            }\n        }\n\n        if (callbackUrls.length === 0) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_oauth_app.callbackUrlsRequired'\n                        defaultMessage='One or more callback URLs are required.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const app = {\n            name: this.state.name,\n            callback_urls: callbackUrls,\n            homepage: this.state.homepage,\n            description: this.state.description,\n            is_trusted: this.state.is_trusted,\n            icon_url: this.state.icon_url,\n        };\n\n        this.props.action(app).then(() => this.setState({saving: false}));\n    }\n\n    updateName = (e) => {\n        this.setState({\n            name: e.target.value,\n        });\n    }\n\n    updateTrusted = (e) => {\n        this.setState({\n            is_trusted: e.target.value === 'true',\n        });\n    }\n\n    updateDescription = (e) => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    updateHomepage = (e) => {\n        this.setState({\n            homepage: e.target.value,\n        });\n    }\n\n    updateIconUrl = (e) => {\n        this.setState({\n            has_icon: false,\n            icon_url: e.target.value,\n        });\n        this.image.src = e.target.value;\n    }\n\n    updateCallbackUrls = (e) => {\n        this.setState({\n            callbackUrls: e.target.value,\n        });\n    }\n\n    render() {\n        const headerToRender = this.props.header;\n        const footerToRender = this.props.footer;\n        const renderExtra = this.props.renderExtra;\n\n        let icon;\n        if (this.state.has_icon) {\n            icon = (\n                <div className='integration__icon'>\n                    <img\n                        alt={'integration icon'}\n                        src={this.state.icon_url}\n                    />\n                </div>\n            );\n        }\n\n        const trusted = (\n            <SystemPermissionGate permissions={[Permissions.MANAGE_SYSTEM]}>\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='is_trusted'\n                    >\n                        <FormattedMessage\n                            id='installed_oauth_apps.trusted'\n                            defaultMessage='Is Trusted'\n                        />\n                    </label>\n                    <div className='col-md-5 col-sm-8'>\n                        <label className='radio-inline'>\n                            <input\n                                type='radio'\n                                value='true'\n                                name='is_trusted'\n                                checked={this.state.is_trusted}\n                                onChange={this.updateTrusted}\n                            />\n                            <FormattedMessage\n                                id='installed_oauth_apps.trusted.yes'\n                                defaultMessage='Yes'\n                            />\n                        </label>\n                        <label className='radio-inline'>\n                            <input\n                                type='radio'\n                                value='false'\n                                name='is_trusted'\n                                checked={!this.state.is_trusted}\n                                onChange={this.updateTrusted}\n                            />\n                            <FormattedMessage\n                                id='installed_oauth_apps.trusted.no'\n                                defaultMessage='No'\n                            />\n                        </label>\n                        <div className='form__help'>\n                            <FormattedMessage\n                                id='add_oauth_app.trusted.help'\n                                defaultMessage='If true, the OAuth 2.0 application is considered trusted by the Mattermost server and does not require the user to accept authorization. If false, a window opens to ask the user to accept or deny the authorization.'\n                            />\n                        </div>\n                    </div>\n                </div>\n            </SystemPermissionGate>\n        );\n\n        return (\n            <div className='backstage-content'>\n                <BackstageHeader>\n                    <Link to={`/${this.props.team.name}/integrations/oauth2-apps`}>\n                        <FormattedMessage\n                            id='installed_oauth_apps.header'\n                            defaultMessage='Installed OAuth2 Apps'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id={headerToRender.id}\n                        defaultMessage={headerToRender.defaultMessage}\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    {icon}\n                    <form className='form-horizontal'>\n                        {trusted}\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='name'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.name'\n                                    defaultMessage='Display Name'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='name'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.name}\n                                    onChange={this.updateName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.name.help'\n                                        defaultMessage='Specify the display name, of up to 64 characters, for your OAuth 2.0 application.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='512'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.description.help'\n                                        defaultMessage='Describe your OAuth 2.0 application.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='homepage'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.homepage'\n                                    defaultMessage='Homepage'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='homepage'\n                                    type='url'\n                                    maxLength='256'\n                                    className='form-control'\n                                    value={this.state.homepage}\n                                    onChange={this.updateHomepage}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.homepage.help'\n                                        defaultMessage='This is the URL for the homepage of the OAuth 2.0 application. Depending on your server configuration, use HTTP or HTTPS in the URL.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='icon_url'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.iconUrl'\n                                    defaultMessage='Icon URL'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='icon_url'\n                                    ref={this.icon_url}\n                                    type='url'\n                                    maxLength='512'\n                                    className='form-control'\n                                    value={this.state.icon_url}\n                                    onChange={this.updateIconUrl}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.icon.help'\n                                        defaultMessage='(Optional) The URL of the image used for your OAuth 2.0 application. Make sure you use HTTP or HTTPS in your URL.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='callbackUrls'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.callbackUrls'\n                                    defaultMessage='Callback URLs (One Per Line)'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <textarea\n                                    id='callbackUrls'\n                                    rows='3'\n                                    maxLength='1024'\n                                    className='form-control'\n                                    value={this.state.callbackUrls}\n                                    onChange={this.updateCallbackUrls}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.callbackUrls.help'\n                                        defaultMessage='The redirect URIs to which the service will redirect users after accepting or denying authorization of your application, and which will handle authorization codes or access tokens. Must be a valid URL and start with http:// or https://.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.props.serverError, this.state.clientError]}\n                            />\n                            <Link\n                                className='btn btn-link btn-sm'\n                                to={`/${this.props.team.name}/integrations/oauth2-apps`}\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                spinningText={localizeMessage(this.props.loading.id, this.props.loading.defaultMessage)}\n                                onClick={this.handleSubmit}\n                                id='saveOauthApp'\n                            >\n                                <FormattedMessage\n                                    id={footerToRender.id}\n                                    defaultMessage={footerToRender.defaultMessage}\n                                />\n                            </SpinnerButton>\n                            {renderExtra}\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport AbstractOAuthApp from '../abstract_oauth_app.jsx';\n\nconst HEADER = {id: t('add_oauth_app.header'), defaultMessage: 'Add'};\nconst FOOTER = {id: t('installed_oauth_apps.save'), defaultMessage: 'Save'};\nconst LOADING = {id: t('installed_oauth_apps.saving'), defaultMessage: 'Saving...'};\n\nexport default class AddOAuthApp extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object,\n\n        /**\n        * The request state for addOAuthApp action. Contains status and error\n        */\n        addOAuthAppRequest: PropTypes.object.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to add new OAuthApp\n            */\n            addOAuthApp: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            serverError: '',\n        };\n    }\n\n    addOAuthApp = async (app) => {\n        this.setState({serverError: ''});\n\n        const {data, error} = await this.props.actions.addOAuthApp(app);\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/confirm?type=oauth2-apps&id=${data.id}`);\n            return;\n        }\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    render() {\n        return (\n            <AbstractOAuthApp\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                loading={LOADING}\n                renderExtra={''}\n                action={this.addOAuthApp}\n                serverError={this.state.serverError}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {addOAuthApp} from 'mattermost-redux/actions/integrations';\n\nimport AddOAuthApp from './add_oauth_app.jsx';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            addOAuthApp,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(AddOAuthApp);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {OAuthApp} from '@mattermost/types/integrations';\nimport {Team} from '@mattermost/types/teams';\nimport {ActionResult} from 'mattermost-redux/types/actions';\n\nimport {browserHistory} from 'utils/browser_history';\nimport LoadingScreen from 'components/loading_screen';\nimport ConfirmModal from 'components/confirm_modal';\nimport AbstractOAuthApp from '../abstract_oauth_app.jsx';\n\nconst HEADER = {id: 'integrations.edit', defaultMessage: 'Edit'};\nconst FOOTER = {id: 'update_incoming_webhook.update', defaultMessage: 'Update'};\nconst LOADING = {id: 'update_incoming_webhook.updating', defaultMessage: 'Updating...'};\n\ntype Actions = {\n    getOAuthApp: (id: string) => OAuthApp;\n    editOAuthApp: (app: OAuthApp) => Promise<ActionResult>;\n};\n\ntype Props = {\n    team: Team;\n    oauthAppId: string;\n    oauthApp: OAuthApp;\n    actions: Actions;\n    enableOAuthServiceProvider: boolean;\n};\n\ntype State = {\n    showConfirmModal: boolean;\n    serverError: string;\n};\n\nexport default class EditOAuthApp extends React.PureComponent<Props, State> {\n    newApp: OAuthApp;\n\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            showConfirmModal: false,\n            serverError: '',\n        };\n        this.newApp = this.props.oauthApp;\n    }\n\n    componentDidMount() {\n        if (this.props.enableOAuthServiceProvider) {\n            this.props.actions.getOAuthApp(this.props.oauthAppId);\n        }\n    }\n\n    editOAuthApp = async (app: OAuthApp) => {\n        this.newApp = app;\n\n        if (this.props.oauthApp.id) {\n            app.id = this.props.oauthApp.id;\n        }\n\n        const callbackUrlsSame = (this.props.oauthApp.callback_urls.length === app.callback_urls.length) &&\n            this.props.oauthApp.callback_urls.every((v, i) => v === app.callback_urls[i]);\n\n        if (callbackUrlsSame === false) {\n            this.handleConfirmModal();\n        } else {\n            await this.submitOAuthApp();\n        }\n    }\n\n    handleConfirmModal = () => {\n        this.setState({showConfirmModal: true});\n    }\n\n    confirmModalDismissed = () => {\n        this.setState({showConfirmModal: false});\n    }\n\n    submitOAuthApp = async () => {\n        this.setState({serverError: ''});\n\n        const res = await this.props.actions.editOAuthApp(this.newApp);\n\n        if ('data' in res && res.data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/oauth2-apps`);\n            return;\n        }\n\n        this.setState({showConfirmModal: false});\n\n        if ('error' in res) {\n            const {error: err} = res;\n            this.setState({serverError: err.message});\n        }\n    }\n\n    renderExtra = () => {\n        const confirmButton = (\n            <FormattedMessage\n                id='update_command.update'\n                defaultMessage='Update'\n            />\n        );\n\n        const confirmTitle = (\n            <FormattedMessage\n                id='update_oauth_app.confirm'\n                defaultMessage='Edit OAuth 2.0 application'\n            />\n        );\n\n        const confirmMessage = (\n            <FormattedMessage\n                id='update_oauth_app.question'\n                defaultMessage='Your changes may break the existing OAuth 2.0 application. Are you sure you would like to update it?'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                title={confirmTitle}\n                message={confirmMessage}\n                confirmButtonText={confirmButton}\n                show={this.state.showConfirmModal}\n                onConfirm={this.submitOAuthApp}\n                onCancel={this.confirmModalDismissed}\n            />\n        );\n    }\n\n    render() {\n        if (!this.props.oauthApp) {\n            return <LoadingScreen/>;\n        }\n\n        return (\n            <AbstractOAuthApp\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                loading={LOADING}\n                renderExtra={this.renderExtra()}\n                action={this.editOAuthApp}\n                serverError={this.state.serverError}\n                initialApp={this.props.oauthApp}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch, ActionCreatorsMapObject} from 'redux';\n\nimport {GlobalState} from '@mattermost/types/store';\nimport {getOAuthApp, editOAuthApp} from 'mattermost-redux/actions/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {ActionFunc, ActionResult} from 'mattermost-redux/types/actions';\nimport {OAuthApp} from '@mattermost/types/integrations';\n\nimport EditOAuthApp from './edit_oauth_app';\n\ntype Actions = {\n    getOAuthApp: (id: string) => OAuthApp;\n    editOAuthApp: (app: OAuthApp) => Promise<ActionResult>;\n};\n\ntype Props = {\n    location: Location;\n};\n\nfunction mapStateToProps(state: GlobalState, ownProps: Props) {\n    const config = getConfig(state);\n    const oauthAppId: string = (new URLSearchParams(ownProps.location.search)).get('id') || '';\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\n\n    return {\n        oauthAppId,\n        oauthApp: state.entities.integrations.oauthApps[oauthAppId],\n        enableOAuthServiceProvider,\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Actions>({\n            getOAuthApp,\n            editOAuthApp,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditOAuthApp);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport CopyText from 'components/copy_text';\n\nimport DeleteIntegrationLink from './delete_integration_link';\n\nexport function matchesFilter(command, filter) {\n    if (!filter) {\n        return true;\n    }\n\n    return command.display_name.toLowerCase().indexOf(filter) !== -1 ||\n        command.description.toLowerCase().indexOf(filter) !== -1 ||\n        command.trigger.toLowerCase().indexOf(filter) !== -1;\n}\n\nexport default class InstalledCommand extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * Installed slash command to display\n        */\n        command: PropTypes.object.isRequired,\n\n        /**\n        * The function to call when Regenerate Token link is clicked\n        */\n        onRegenToken: PropTypes.func.isRequired,\n\n        /**\n        * The function to call when Delete link is clicked\n        */\n        onDelete: PropTypes.func.isRequired,\n\n        /**\n        * Set to filter command, comes from BackstageList\n        */\n        filter: PropTypes.string,\n\n        /**\n        * The creator user data\n        */\n        creator: PropTypes.object.isRequired,\n\n        /**\n        * Set to show edit link\n        */\n        canChange: PropTypes.bool.isRequired,\n    }\n\n    handleRegenToken = (e) => {\n        e.preventDefault();\n\n        this.props.onRegenToken(this.props.command);\n    }\n\n    handleDelete = () => {\n        this.props.onDelete(this.props.command);\n    }\n\n    render() {\n        const command = this.props.command;\n        const filter = this.props.filter ? this.props.filter.toLowerCase() : '';\n\n        if (!matchesFilter(command, filter)) {\n            return null;\n        }\n\n        let name;\n\n        if (command.display_name) {\n            name = command.display_name;\n        } else {\n            name = (\n                <FormattedMessage\n                    id='installed_commands.unnamed_command'\n                    defaultMessage='Unnamed Slash Command'\n                />\n            );\n        }\n\n        let description = null;\n        if (command.description) {\n            description = (\n                <div className='item-details__row'>\n                    <span className='item-details__description'>\n                        {command.description}\n                    </span>\n                </div>\n            );\n        }\n\n        let trigger = '- /' + command.trigger;\n        if (command.auto_complete && command.auto_complete_hint) {\n            trigger += ' ' + command.auto_complete_hint;\n        }\n\n        let actions = null;\n        if (this.props.canChange) {\n            actions = (\n                <div className='item-actions'>\n                    <button\n                        className='style--none color--link'\n                        onClick={this.handleRegenToken}\n                    >\n                        <FormattedMessage\n                            id='installed_integrations.regenToken'\n                            defaultMessage='Regenerate Token'\n                        />\n                    </button>\n                    {' - '}\n                    <Link to={`/${this.props.team.name}/integrations/commands/edit?id=${command.id}`}>\n                        <FormattedMessage\n                            id='installed_integrations.edit'\n                            defaultMessage='Edit'\n                        />\n                    </Link>\n                    {' - '}\n                    <DeleteIntegrationLink\n                        modalMessage={\n                            <FormattedMessage\n                                id='installed_commands.delete.confirm'\n                                defaultMessage='This action permanently deletes the slash command and breaks any integrations using it. Are you sure you want to delete it?'\n                            />\n                        }\n                        onDelete={this.handleDelete}\n                    />\n                </div>\n            );\n        }\n\n        const commandToken = command.token;\n\n        return (\n            <div className='backstage-list__item'>\n                <div className='item-details'>\n                    <div className='item-details__row d-flex flex-column flex-md-row justify-content-between'>\n                        <div>\n                            <strong className='item-details__name'>\n                                {name}\n                            </strong>\n                            <span className='item-details__trigger'>\n                                {trigger}\n                            </span>\n                        </div>\n                        {actions}\n                    </div>\n                    {description}\n                    <div className='item-details__row'>\n                        <span className='item-details__token'>\n                            <FormattedMessage\n                                id='installed_integrations.token'\n                                defaultMessage='Token: {token}'\n                                values={{\n                                    token: commandToken,\n                                }}\n                            />\n                            <CopyText\n                                value={commandToken}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__creation'>\n                            <FormattedMessage\n                                id='installed_integrations.creation'\n                                defaultMessage='Created by {creator} on {createAt, date, full}'\n                                values={{\n                                    creator: this.props.creator.username,\n                                    createAt: command.create_at,\n                                }}\n                            />\n                        </span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Team} from '@mattermost/types/teams';\nimport {UserProfile} from '@mattermost/types/users';\nimport {RelationOneToOne} from '@mattermost/types/utilities';\nimport {Command} from '@mattermost/types/integrations';\nimport {ActionResult} from 'mattermost-redux/types/actions';\n\nimport * as Utils from 'utils/utils';\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\nimport InstalledCommand, {matchesFilter} from '../installed_command.jsx';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\ntype Props = {\n    team: Team;\n    user: UserProfile;\n    users: RelationOneToOne<UserProfile, UserProfile>;\n\n    // Installed slash commands to display\n    commands: Command[];\n    loading: boolean;\n\n    // Set to allow changes to installed slash commands\n    canManageOthersSlashCommands: boolean;\n    actions: {\n\n        // The function to call when Regenerate Token link is clicked\n        regenCommandToken: (id: string) => Promise<ActionResult>;\n\n        // The function to call when Delete link is clicked\n        deleteCommand: (id: string) => Promise<ActionResult>;\n    };\n}\n\nexport default class InstalledCommands extends React.PureComponent<Props> {\n    public regenCommandToken = (command: Command): void => {\n        this.props.actions.regenCommandToken(command.id);\n    }\n\n    public deleteCommand = (command: Command): void => {\n        this.props.actions.deleteCommand(command.id);\n    }\n\n    private commandCompare(a: Command, b: Command) {\n        let nameA = a.display_name;\n        if (!nameA) {\n            nameA = Utils.localizeMessage('installed_commands.unnamed_command', 'Unnamed Slash Command');\n        }\n\n        let nameB = b.display_name;\n        if (!nameB) {\n            nameB = Utils.localizeMessage('installed_commands.unnamed_command', 'Unnamed Slash Command');\n        }\n\n        return nameA.localeCompare(nameB);\n    }\n\n    public render(): JSX.Element {\n        const commands = (filter: string) => this.props.commands.\n            filter((command) => command.team_id === this.props.team.id).\n            filter((command) => matchesFilter(command, filter)).\n            sort(this.commandCompare).map((command) => {\n                const canChange = this.props.canManageOthersSlashCommands || this.props.user.id === command.creator_id;\n\n                return (\n                    <InstalledCommand\n                        key={command.id}\n                        team={this.props.team}\n                        command={command}\n                        onRegenToken={this.regenCommandToken}\n                        onDelete={this.deleteCommand}\n                        creator={this.props.users[command.creator_id] || {}}\n                        canChange={canChange}\n                    />\n                );\n            });\n\n        return (\n            <BackstageList\n                header={\n                    <FormattedMessage\n                        id='installed_commands.header'\n                        defaultMessage='Installed Slash Commands'\n                    />\n                }\n                addText={\n                    <FormattedMessage\n                        id='installed_commands.add'\n                        defaultMessage='Add Slash Command'\n                    />\n                }\n                addLink={'/' + this.props.team.name + '/integrations/commands/add'}\n                addButtonId='addSlashCommand'\n                emptyText={\n                    <FormattedMessage\n                        id='installed_commands.empty'\n                        defaultMessage='No slash commands found'\n                    />\n                }\n                emptyTextSearch={\n                    <FormattedMarkdownMessage\n                        id='installed_commands.emptySearch'\n                        defaultMessage='No slash commands match {searchTerm}'\n                    />\n                }\n                helpText={\n                    <FormattedMessage\n                        id='installed_commands.help'\n                        defaultMessage='Use slash commands to connect external tools to Mattermost. {buildYourOwn} or visit the {appDirectory} to find self-hosted, third-party apps and integrations.'\n                        values={{\n                            buildYourOwn: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://developers.mattermost.com/integrate/admin-guide/admin-slash-commands/'\n                                >\n                                    <FormattedMessage\n                                        id='installed_commands.help.buildYourOwn'\n                                        defaultMessage='Build Your Own'\n                                    />\n                                </a>\n                            ),\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://mattermost.com/marketplace'\n                                >\n                                    <FormattedMessage\n                                        id='installed_commands.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                }\n                searchPlaceholder={Utils.localizeMessage('installed_commands.search', 'Search Slash Commands')}\n                loading={this.props.loading}\n            >\n                {(filter: string) => {\n                    const children = commands(filter);\n                    return [children, children.length > 0];\n                }}\n            </BackstageList>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch, ActionCreatorsMapObject} from 'redux';\n\nimport {deleteCommand, regenCommandToken} from 'mattermost-redux/actions/integrations';\nimport {haveITeamPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\nimport {GenericAction, ActionResult, ActionFunc} from 'mattermost-redux/types/actions';\nimport {GlobalState} from '@mattermost/types/store';\n\nimport InstalledCommands from './installed_commands';\n\ntype Props = {\n    team: {\n        id: string;\n    };\n}\n\ntype Actions = {\n    regenCommandToken: (id: string) => Promise<ActionResult>;\n    deleteCommand: (id: string) => Promise<ActionResult>;\n}\n\nfunction mapStateToProps(state: GlobalState, ownProps: Props) {\n    const canManageOthersSlashCommands = haveITeamPermission(state, ownProps.team.id, Permissions.MANAGE_OTHERS_SLASH_COMMANDS);\n\n    return {\n        canManageOthersSlashCommands,\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Actions>({\n            regenCommandToken,\n            deleteCommand,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstalledCommands);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport Constants from 'utils/constants';\nimport * as Utils from 'utils/utils';\nimport FormError from 'components/form_error';\nimport SpinnerButton from 'components/spinner_button';\nimport LocalizedInput from 'components/localized_input/localized_input';\n\nimport {t} from 'utils/i18n';\n\nconst REQUEST_POST = 'P';\nconst REQUEST_GET = 'G';\n\nexport default class AbstractCommand extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The header text to render, has id and defaultMessage\n        */\n        header: PropTypes.object.isRequired,\n\n        /**\n        * The footer text to render, has id and defaultMessage\n        */\n        footer: PropTypes.object.isRequired,\n\n        /**\n        * The spinner loading text to render, has id and defaultMessage\n        */\n        loading: PropTypes.object.isRequired,\n\n        /**\n         * Any extra component/node to render\n         */\n        renderExtra: PropTypes.node.isRequired,\n\n        /**\n        * The server error text after a failed action\n        */\n        serverError: PropTypes.string.isRequired,\n\n        /**\n        * The Command used to set the initial state\n        */\n        initialCommand: PropTypes.object,\n\n        /**\n        * The async function to run when the action button is pressed\n        */\n        action: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = this.getStateFromCommand(this.props.initialCommand || {});\n    }\n\n    getStateFromCommand = (command) => {\n        return {\n            displayName: command.display_name || '',\n            description: command.description || '',\n            trigger: command.trigger || '',\n            url: command.url || '',\n            method: command.method || REQUEST_POST,\n            username: command.username || '',\n            iconUrl: command.icon_url || '',\n            autocomplete: command.auto_complete || false,\n            autocompleteHint: command.auto_complete_hint || '',\n            autocompleteDescription: command.auto_complete_desc || '',\n            saving: false,\n            clientError: null,\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            clientError: '',\n        });\n\n        let triggerWord = this.state.trigger.trim().toLowerCase();\n        if (triggerWord.indexOf('/') === 0) {\n            triggerWord = triggerWord.substr(1);\n        }\n\n        const command = {\n            display_name: this.state.displayName,\n            description: this.state.description,\n            trigger: triggerWord,\n            url: this.state.url.trim(),\n            method: this.state.method,\n            username: this.state.username,\n            icon_url: this.state.iconUrl,\n            auto_complete: this.state.autocomplete,\n            team_id: this.props.team.id,\n        };\n\n        if (command.auto_complete) {\n            command.auto_complete_desc = this.state.autocompleteDescription;\n            command.auto_complete_hint = this.state.autocompleteHint;\n        }\n\n        if (!command.trigger) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.triggerRequired'\n                        defaultMessage='A trigger word is required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (command.trigger.indexOf('/') === 0) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.triggerInvalidSlash'\n                        defaultMessage='A trigger word cannot begin with a /'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (command.trigger.indexOf(' ') !== -1) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.triggerInvalidSpace'\n                        defaultMessage='A trigger word must not contain spaces'\n                    />\n                ),\n            });\n            return;\n        }\n\n        if (command.trigger.length < Constants.MIN_TRIGGER_LENGTH ||\n            command.trigger.length > Constants.MAX_TRIGGER_LENGTH) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.triggerInvalidLength'\n                        defaultMessage='A trigger word must contain between {min} and {max} characters'\n                        values={{\n                            min: Constants.MIN_TRIGGER_LENGTH,\n                            max: Constants.MAX_TRIGGER_LENGTH,\n                        }}\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (!command.url) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.urlRequired'\n                        defaultMessage='A request URL is required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        this.props.action(command).then(() => this.setState({saving: false}));\n    }\n\n    updateDisplayName = (e) => {\n        this.setState({\n            displayName: e.target.value,\n        });\n    }\n\n    updateDescription = (e) => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    updateTrigger = (e) => {\n        this.setState({\n            trigger: e.target.value,\n        });\n    }\n\n    updateUrl = (e) => {\n        this.setState({\n            url: e.target.value,\n        });\n    }\n\n    updateMethod = (e) => {\n        this.setState({\n            method: e.target.value,\n        });\n    }\n\n    updateUsername = (e) => {\n        this.setState({\n            username: e.target.value,\n        });\n    }\n\n    updateIconUrl = (e) => {\n        this.setState({\n            iconUrl: e.target.value,\n        });\n    }\n\n    updateAutocomplete = (e) => {\n        this.setState({\n            autocomplete: e.target.checked,\n        });\n    }\n\n    updateAutocompleteHint = (e) => {\n        this.setState({\n            autocompleteHint: e.target.value,\n        });\n    }\n\n    updateAutocompleteDescription = (e) => {\n        this.setState({\n            autocompleteDescription: e.target.value,\n        });\n    }\n\n    render() {\n        let autocompleteHint = null;\n        let autocompleteDescription = null;\n\n        if (this.state.autocomplete) {\n            autocompleteHint = (\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='autocompleteHint'\n                    >\n                        <FormattedMessage\n                            id='add_command.autocompleteHint'\n                            defaultMessage='Autocomplete Hint'\n                        />\n                    </label>\n                    <div className='col-md-5 col-sm-8'>\n                        <LocalizedInput\n                            id='autocompleteHint'\n                            type='text'\n                            maxLength='1024'\n                            className='form-control'\n                            value={this.state.autocompleteHint}\n                            onChange={this.updateAutocompleteHint}\n                            placeholder={{id: t('add_command.autocompleteHint.placeholder'), defaultMessage: 'Example: [Patient Name]'}}\n                        />\n                        <div className='form__help'>\n                            <FormattedMessage\n                                id='add_command.autocompleteHint.help'\n                                defaultMessage='(Optional) Specify the arguments associated with your slash command. These are displayed as help on the autocomplete list.'\n                            />\n                        </div>\n                    </div>\n                </div>\n            );\n\n            autocompleteDescription = (\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='autocompleteDescription'\n                    >\n                        <FormattedMessage\n                            id='add_command.autocompleteDescription'\n                            defaultMessage='Autocomplete Description'\n                        />\n                    </label>\n                    <div className='col-md-5 col-sm-8'>\n                        <LocalizedInput\n                            id='description'\n                            type='text'\n                            maxLength='128'\n                            className='form-control'\n                            value={this.state.autocompleteDescription}\n                            onChange={this.updateAutocompleteDescription}\n                            placeholder={{id: t('add_command.autocompleteDescription.placeholder'), defaultMessage: 'Example: \"Returns search results for patient records\"'}}\n                        />\n                        <div className='form__help'>\n                            <FormattedMessage\n                                id='add_command.autocompleteDescription.help'\n                                defaultMessage='(Optional) Describe your slash command for the autocomplete list.'\n                            />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className='backstage-content row'>\n                <BackstageHeader>\n                    <Link to={'/' + this.props.team.name + '/integrations/commands'}>\n                        <FormattedMessage\n                            id='installed_command.header'\n                            defaultMessage='Slash Commands'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id={this.props.header.id}\n                        defaultMessage={this.props.header.defaultMessage}\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='displayName'\n                            >\n                                <FormattedMessage\n                                    id='add_command.displayName'\n                                    defaultMessage='Title'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='displayName'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.displayName}\n                                    onChange={this.updateDisplayName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.displayName.help'\n                                        defaultMessage='Specify a title, of up to 64 characters, for the slash command settings page.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='add_command.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='128'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.description.help'\n                                        defaultMessage='Describe your incoming webhook.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='trigger'\n                            >\n                                <FormattedMessage\n                                    id='add_command.trigger'\n                                    defaultMessage='Command Trigger Word'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <LocalizedInput\n                                    id='trigger'\n                                    type='text'\n                                    maxLength={Constants.MAX_TRIGGER_LENGTH}\n                                    className='form-control'\n                                    value={this.state.trigger}\n                                    onChange={this.updateTrigger}\n                                    placeholder={{id: t('add_command.trigger.placeholder'), defaultMessage: 'Command trigger e.g. \"hello\" not including the slash'}}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.trigger.help'\n                                        defaultMessage='Specify a trigger word that is not a built-in command, does not contain spaces, and does not begin with the slash character.'\n                                    />\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.trigger.helpExamples'\n                                        defaultMessage='Examples: client, employee, patient, weather'\n                                    />\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.trigger.helpReserved'\n                                        defaultMessage='Reserved: {link}'\n                                        values={{\n                                            link: (\n                                                <a\n                                                    href='https://developers.mattermost.com/integrate/admin-guide/admin-slash-commands/#built-in-commands'\n                                                    target='_blank'\n                                                    rel='noopener noreferrer'\n                                                >\n                                                    <FormattedMessage\n                                                        id='add_command.trigger.helpReservedLinkText'\n                                                        defaultMessage='See built-in slash commands'\n                                                    />\n                                                </a>\n                                            ),\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='url'\n                            >\n                                <FormattedMessage\n                                    id='add_command.url'\n                                    defaultMessage='Request URL'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <LocalizedInput\n                                    id='url'\n                                    type='text'\n                                    maxLength='1024'\n                                    className='form-control'\n                                    value={this.state.url}\n                                    onChange={this.updateUrl}\n                                    placeholder={{id: t('add_command.url.placeholder'), defaultMessage: 'Must start with http:// or https://'}}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.url.help'\n                                        defaultMessage='Specify the callback URL to receive the HTTP POST or GET event request when the slash command is run.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='method'\n                            >\n                                <FormattedMessage\n                                    id='add_command.method'\n                                    defaultMessage='Request Method'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <select\n                                    id='method'\n                                    className='form-control'\n                                    value={this.state.method}\n                                    onChange={this.updateMethod}\n                                >\n                                    <option value={REQUEST_POST}>\n                                        {Utils.localizeMessage('add_command.method.post', 'POST')}\n                                    </option>\n                                    <option value={REQUEST_GET}>\n                                        {Utils.localizeMessage('add_command.method.get', 'GET')}\n                                    </option>\n                                </select>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.method.help'\n                                        defaultMessage='Specify the type of request, either POST or GET, sent to the endpoint that Mattermost hits to reach your application.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='username'\n                            >\n                                <FormattedMessage\n                                    id='add_command.username'\n                                    defaultMessage='Response Username'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <LocalizedInput\n                                    id='username'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.username}\n                                    onChange={this.updateUsername}\n                                    placeholder={{id: t('add_command.username.placeholder'), defaultMessage: 'Username'}}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.username.help'\n                                        defaultMessage='(Optional) Specify the name to use when posting responses for this slash command. Usernames can be up to 22 characters, and contain lowercase letters, numbers, and the symbols \\\"-\\\", \\\"_\\\", and \\\".\\\". If left blank, your Mattermost username is used.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='iconUrl'\n                            >\n                                <FormattedMessage\n                                    id='add_command.iconUrl'\n                                    defaultMessage='Response Icon'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <LocalizedInput\n                                    id='iconUrl'\n                                    type='text'\n                                    maxLength='1024'\n                                    className='form-control'\n                                    value={this.state.iconUrl}\n                                    onChange={this.updateIconUrl}\n                                    placeholder={{id: t('add_command.iconUrl.placeholder'), defaultMessage: 'https://www.example.com/myicon.png'}}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.iconUrl.help'\n                                        defaultMessage='(Optional) Enter the URL of a .png or .jpg file to use as the icon when posting responses to this slash command. The file must be at least 128 pixels by 128 pixels. If left blank, your profile picture is used.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='autocomplete'\n                            >\n                                <FormattedMessage\n                                    id='add_command.autocomplete'\n                                    defaultMessage='Autocomplete'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8 checkbox'>\n                                <input\n                                    id='autocomplete'\n                                    type='checkbox'\n                                    checked={this.state.autocomplete}\n                                    onChange={this.updateAutocomplete}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.autocomplete.help'\n                                        defaultMessage='(Optional) Show your slash command on the autocomplete list when someone types \"/\" in the input box.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        {autocompleteHint}\n                        {autocompleteDescription}\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.props.serverError, this.state.clientError]}\n                            />\n                            <Link\n                                className='btn btn-link btn-sm'\n                                to={'/' + this.props.team.name + '/integrations/commands'}\n                            >\n                                <FormattedMessage\n                                    id='add_command.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                spinningText={Utils.localizeMessage(this.props.loading.id, this.props.loading.defaultMessage)}\n                                onClick={this.handleSubmit}\n                                id='saveCommand'\n                            >\n                                <FormattedMessage\n                                    id={this.props.footer.id}\n                                    defaultMessage={this.props.footer.defaultMessage}\n                                />\n                            </SpinnerButton>\n                            {this.props.renderExtra}\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport AbstractCommand from '../abstract_command.jsx';\n\nconst HEADER = {id: t('integrations.add'), defaultMessage: 'Add'};\nconst FOOTER = {id: t('add_command.save'), defaultMessage: 'Save'};\nconst LOADING = {id: t('add_command.saving'), defaultMessage: 'Saving...'};\n\nexport default class AddCommand extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to add new command\n            */\n            addCommand: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            serverError: '',\n        };\n    }\n\n    addCommand = async (command) => {\n        this.setState({serverError: ''});\n\n        const {data, error} = await this.props.actions.addCommand(command);\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/commands/confirm?type=commands&id=${data.id}`);\n            return;\n        }\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    render() {\n        return (\n            <AbstractCommand\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                loading={LOADING}\n                renderExtra={''}\n                action={this.addCommand}\n                serverError={this.state.serverError}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {addCommand} from 'mattermost-redux/actions/integrations';\n\nimport AddCommand from './add_command.jsx';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            addCommand,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(AddCommand);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Team} from '@mattermost/types/teams';\nimport {Command} from '@mattermost/types/integrations';\nimport {RelationOneToOne} from '@mattermost/types/utilities';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport LoadingScreen from 'components/loading_screen';\nimport ConfirmModal from 'components/confirm_modal';\nimport AbstractCommand from '../abstract_command.jsx';\n\nconst HEADER = {id: t('integrations.edit'), defaultMessage: 'Edit'};\nconst FOOTER = {id: t('edit_command.update'), defaultMessage: 'Update'};\nconst LOADING = {id: t('edit_command.updating'), defaultMessage: 'Updating...'};\n\ntype Props = {\n\n    /**\n    * The current team\n    */\n    team: Team;\n\n    /**\n    * The id of the command to edit\n    */\n    commandId: string | null;\n\n    /**\n    * Installed slash commands to display\n    */\n    commands: RelationOneToOne<Command, Command>;\n    actions: {\n\n        /**\n        * The function to call to fetch team commands\n        */\n        getCustomTeamCommands: (teamId: string) => Promise<Command[]>;\n\n        /**\n        * The function to call to edit command\n        */\n        editCommand: (command?: Command) => Promise<{data?: Command; error?: Error}>;\n    };\n\n    /**\n    * Whether or not commands are enabled.\n    */\n    enableCommands: boolean;\n}\n\ntype State = {\n    originalCommand: Command | null;\n    showConfirmModal: boolean;\n    serverError: string;\n\n}\n\nexport default class EditCommand extends React.PureComponent<Props, State> {\n    private newCommand?: Command;\n\n    public constructor(props: Props) {\n        super(props);\n        this.newCommand = undefined;\n\n        this.state = {\n            originalCommand: null,\n            showConfirmModal: false,\n            serverError: '',\n        };\n    }\n\n    public componentDidMount(): void {\n        if (this.props.enableCommands) {\n            this.props.actions.getCustomTeamCommands(this.props.team.id).then(\n                () => {\n                    this.setState({\n                        originalCommand: Object.values(this.props.commands).filter((command) => command.id === this.props.commandId)[0],\n                    });\n                },\n            );\n        }\n    }\n\n    public editCommand = async (command: Command): Promise<void> => {\n        this.newCommand = command;\n\n        if (this.state.originalCommand?.id) {\n            command.id = this.state.originalCommand.id;\n        }\n\n        if (this.state.originalCommand?.url !== this.newCommand.url ||\n            this.state.originalCommand?.trigger !== this.newCommand.trigger ||\n            this.state.originalCommand?.method !== this.newCommand.method) {\n            this.handleConfirmModal();\n        } else {\n            await this.submitCommand();\n        }\n    }\n\n    public handleConfirmModal = (): void => {\n        this.setState({showConfirmModal: true});\n    }\n\n    public confirmModalDismissed = (): void => {\n        this.setState({showConfirmModal: false});\n    }\n\n    public submitCommand = async (): Promise<void> => {\n        this.setState({serverError: ''});\n\n        const {data, error} = await this.props.actions.editCommand(this.newCommand);\n\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/commands`);\n            return;\n        }\n\n        this.setState({showConfirmModal: false});\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    public renderExtra = (): JSX.Element => {\n        const confirmButton = (\n            <FormattedMessage\n                id='update_command.update'\n                defaultMessage='Update'\n            />\n        );\n\n        const confirmTitle = (\n            <FormattedMessage\n                id='update_command.confirm'\n                defaultMessage='Edit Slash Command'\n            />\n        );\n\n        const confirmMessage = (\n            <FormattedMessage\n                id='update_command.question'\n                defaultMessage='Your changes may break the existing slash command. Are you sure you would like to update it?'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                title={confirmTitle}\n                message={confirmMessage}\n                confirmButtonText={confirmButton}\n                show={this.state.showConfirmModal}\n                onConfirm={this.submitCommand}\n                onCancel={this.confirmModalDismissed}\n            />\n        );\n    }\n\n    public render(): JSX.Element {\n        if (!this.state.originalCommand) {\n            return <LoadingScreen/>;\n        }\n\n        return (\n            <AbstractCommand\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                loading={LOADING}\n                renderExtra={this.renderExtra()}\n                action={this.editCommand}\n                serverError={this.state.serverError}\n                initialCommand={this.state.originalCommand}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch, ActionCreatorsMapObject} from 'redux';\n\nimport {editCommand, getCustomTeamCommands} from 'mattermost-redux/actions/integrations';\nimport {getCommands} from 'mattermost-redux/selectors/entities/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {GlobalState} from '@mattermost/types/store';\nimport {GenericAction, ActionFunc} from 'mattermost-redux/types/actions';\nimport {Command} from '@mattermost/types/integrations';\n\nimport EditCommand from './edit_command';\n\ntype Props = {\n    location: Location;\n}\n\ntype Actions = {\n    getCustomTeamCommands: (teamId: string) => Promise<Command[]>;\n    editCommand: (command?: Command) => Promise<{data?: Command; error?: Error}>;\n}\n\nfunction mapStateToProps(state: GlobalState, ownProps: Props) {\n    const config = getConfig(state);\n    const commandId = (new URLSearchParams(ownProps.location.search)).get('id');\n    const enableCommands = config.EnableCommands === 'true';\n\n    return {\n        commandId,\n        commands: getCommands(state),\n        enableCommands,\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Actions>({\n            getCustomTeamCommands,\n            editCommand,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditCommand);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {Constants, ErrorPageTypes} from 'utils/constants';\nimport CopyText from 'components/copy_text';\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport {getSiteURL} from 'utils/url';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nexport default class ConfirmIntegration extends React.PureComponent {\n    static get propTypes() {\n        return {\n            team: PropTypes.object,\n            location: PropTypes.object,\n            commands: PropTypes.object,\n            oauthApps: PropTypes.object,\n            incomingHooks: PropTypes.object,\n            outgoingHooks: PropTypes.object,\n            bots: PropTypes.object,\n        };\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: (new URLSearchParams(this.props.location.search)).get('type'),\n            id: (new URLSearchParams(this.props.location.search)).get('id'),\n        };\n    }\n\n    componentDidMount() {\n        window.addEventListener('keypress', this.handleKeyPress);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keypress', this.handleKeyPress);\n    }\n\n    handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            browserHistory.push('/' + this.props.team.name + '/integrations/' + this.state.type);\n        }\n    }\n\n    render() {\n        let headerText = null;\n        let helpText = null;\n        let tokenText = null;\n\n        const command = this.props.commands[this.state.id];\n        const incomingHook = this.props.incomingHooks[this.state.id];\n        const outgoingHook = this.props.outgoingHooks[this.state.id];\n        const oauthApp = this.props.oauthApps[this.state.id];\n        const bot = this.props.bots[this.state.id];\n\n        if (this.state.type === Constants.Integrations.COMMAND && command) {\n            const commandToken = command.token;\n\n            headerText = (\n                <FormattedMessage\n                    id={'installed_commands.header'}\n                    defaultMessage='Slash Commands'\n                />\n            );\n            helpText = (\n                <p>\n                    <FormattedMessage\n                        id='add_command.doneHelp'\n                        defaultMessage='Your slash command is set up. The following token will be sent in the outgoing payload. Please use it to verify the request came from your Mattermost team (details at <link>Slash Commands</link>).'\n                        values={{\n                            link: (msg) => (\n                                <a\n                                    href='https://developers.mattermost.com/integrate/admin-guide/admin-slash-commands/'\n                                    referrer='noreferrer'\n                                    target='_blank'\n                                    rel='noreferrer'\n                                >\n                                    {msg}\n                                </a>\n                            ),\n                        }}\n                    />\n                </p>\n            );\n            tokenText = (\n                <p className='word-break--all'>\n                    <FormattedMarkdownMessage\n                        id='add_command.token'\n                        defaultMessage='**Token**: {token}'\n                        values={{\n                            token: commandToken,\n                        }}\n                    />\n                    <CopyText\n                        value={commandToken}\n                    />\n                </p>\n            );\n        } else if (this.state.type === Constants.Integrations.INCOMING_WEBHOOK && incomingHook) {\n            const incomingHookToken = getSiteURL() + '/hooks/' + incomingHook.id;\n\n            headerText = (\n                <FormattedMessage\n                    id={'installed_incoming_webhooks.header'}\n                    defaultMessage='Incoming Webhooks'\n                />\n            );\n            helpText = (\n                <p>\n                    <FormattedMessage\n                        id='add_incoming_webhook.doneHelp'\n                        defaultMessage='Your incoming webhook is set up. Please send data to the following URL (details at <link>Incoming Webhooks</link>).'\n                        values={{\n                            link: (msg) => (\n                                <a\n                                    href='https://developers.mattermost.com/integrate/admin-guide/admin-webhooks-incoming/'\n                                    referrer='noreferrer'\n                                    target='_blank'\n                                    rel='noreferrer'\n                                >\n                                    {msg}\n                                </a>\n                            ),\n                        }}\n                    />\n                </p>\n            );\n            tokenText = (\n                <p className='word-break--all'>\n                    <FormattedMarkdownMessage\n                        id='add_incoming_webhook.url'\n                        defaultMessage='**URL**: {url}'\n                        values={{\n                            url: '`' + incomingHookToken + '`',\n                        }}\n                    />\n                    <CopyText\n                        value={incomingHookToken}\n                    />\n                </p>\n            );\n        } else if (this.state.type === Constants.Integrations.OUTGOING_WEBHOOK && outgoingHook) {\n            const outgoingHookToken = outgoingHook.token;\n\n            headerText = (\n                <FormattedMessage\n                    id={'installed_outgoing_webhooks.header'}\n                    defaultMessage='Outgoing Webhooks'\n                />\n            );\n            helpText = (\n                <p>\n                    <FormattedMessage\n                        id='add_outgoing_webhook.doneHelp'\n                        defaultMessage='Your outgoing webhook is set up. The following token will be sent in the outgoing payload. Please use it to verify that the request came from your Mattermost team (details at <link>Outgoing Webhooks</link>).'\n                        values={{\n                            link: (msg) => (\n                                <a\n                                    href='https://developers.mattermost.com/integrate/admin-guide/admin-webhooks-outgoing/'\n                                    referrer='noreferrer'\n                                    target='_blank'\n                                    rel='noreferrer'\n                                >\n                                    {msg}\n                                </a>\n                            ),\n                        }}\n                    />\n                </p>\n            );\n            tokenText = (\n                <p className='word-break--all'>\n                    <FormattedMarkdownMessage\n                        id='add_outgoing_webhook.token'\n                        defaultMessage='**Token**: {token}'\n                        values={{\n                            token: outgoingHookToken,\n                        }}\n                    />\n                    <CopyText\n                        value={outgoingHookToken}\n                    />\n                </p>\n            );\n        } else if (this.state.type === Constants.Integrations.OAUTH_APP && oauthApp) {\n            const oauthAppToken = oauthApp.id;\n            const oauthAppSecret = oauthApp.client_secret;\n\n            headerText = (\n                <FormattedMessage\n                    id={'installed_oauth_apps.header'}\n                    defaultMessage='OAuth 2.0 Applications'\n                />\n            );\n\n            helpText = [];\n            helpText.push(\n                <p key='add_oauth_app.doneHelp'>\n                    <FormattedMessage\n                        id='add_oauth_app.doneHelp'\n                        defaultMessage='Your OAuth 2.0 application is set up. Please use the following Client ID and Client Secret when requesting authorization for your application (details at <link>oAuth 2 Applications</link>).'\n                        values={{\n                            link: (msg) => (\n                                <a\n                                    href='https://developers.mattermost.com/integrate/admin-guide/admin-oauth2/'\n                                    referrer='noreferrer'\n                                    target='_blank'\n                                    rel='noreferrer'\n                                >\n                                    {msg}\n                                </a>\n                            ),\n                        }}\n                    />\n                </p>,\n            );\n            helpText.push(\n                <p key='add_oauth_app.clientId'>\n                    <FormattedMarkdownMessage\n                        id='add_oauth_app.clientId'\n                        defaultMessage='**Client ID**: {id}'\n                        values={{\n                            id: oauthAppToken,\n                        }}\n                    />\n                    <CopyText\n                        idMessage='integrations.copy_client_id'\n                        defaultMessage='Copy Client Id'\n                        value={oauthAppToken}\n                    />\n                    <br/>\n                    <FormattedMarkdownMessage\n                        id='add_oauth_app.clientSecret'\n                        defaultMessage='**Client Secret**: {secret}'\n                        values={{\n                            secret: oauthAppSecret,\n                        }}\n                    />\n                    <CopyText\n                        idMessage='integrations.copy_client_secret'\n                        defaultMessage='Copy Client Secret'\n                        value={oauthAppSecret}\n                    />\n                </p>,\n            );\n\n            helpText.push(\n                <p key='add_oauth_app.doneUrlHelp'>\n                    <FormattedMessage\n                        id='add_oauth_app.doneUrlHelp'\n                        defaultMessage='Here are your authorized redirect URLs.'\n                    />\n                </p>,\n            );\n\n            tokenText = (\n                <p className='word-break--all'>\n                    <FormattedMarkdownMessage\n                        id='add_oauth_app.url'\n                        defaultMessage='**URL(s)**: {url}'\n                        values={{\n                            url: oauthApp.callback_urls.join(', '),\n                        }}\n                    />\n                </p>\n            );\n        } else if (this.state.type === Constants.Integrations.BOT && bot) {\n            const botToken = (new URLSearchParams(this.props.location.search)).get('token');\n\n            headerText = (\n                <FormattedMessage\n                    id='bots.manage.header'\n                    defaultMessage='Bot Accounts'\n                />\n            );\n            helpText = (\n                <p>\n                    <FormattedMarkdownMessage\n                        id='bots.manage.created.text'\n                        defaultMessage='Your bot account **{botname}** has been created successfully. Please use the following access token to connect to the bot (see [documentation](https://mattermost.com/pl/default-bot-accounts) for further details).'\n                        values={{\n                            botname: bot.display_name || bot.username,\n                        }}\n                    />\n                </p>\n            );\n            tokenText = (\n                <p className='word-break--all'>\n                    <FormattedMarkdownMessage\n                        id='add_outgoing_webhook.token'\n                        defaultMessage='**Token**: {token}'\n                        values={{\n                            token: botToken,\n                        }}\n                    />\n                    <CopyText\n                        value={botToken}\n                    />\n                    <br/>\n                    <br/>\n                    <FormattedMessage\n                        id='add_outgoing_webhook.token.message'\n                        defaultMessage='Make sure to add this bot account to teams and channels you want it to interact in. See <link>documentation</link> to learn more.'\n                        values={{\n                            link: (msg) => (\n                                <a\n                                    href='https://mattermost.com/pl/default-bot-accounts'\n                                    referrer='noreferrer'\n                                    target='_blank'\n                                    rel='noreferrer'\n                                >\n                                    {msg}\n                                </a>\n                            ),\n                        }}\n                    />\n                </p>\n            );\n        } else {\n            browserHistory.replace(`/error?type=${ErrorPageTypes.PAGE_NOT_FOUND}`);\n            return '';\n        }\n\n        return (\n            <div className='backstage-content row'>\n                <BackstageHeader>\n                    <Link to={'/' + this.props.team.name + '/integrations/' + this.state.type}>\n                        {headerText}\n                    </Link>\n                    <FormattedMessage\n                        id='integrations.add'\n                        defaultMessage='Add'\n                    />\n                </BackstageHeader>\n                <div className='backstage-form backstage-form__confirmation'>\n                    <h4\n                        className='backstage-form__title'\n                        id='formTitle'\n                    >\n                        <FormattedMessage\n                            id='integrations.successful'\n                            defaultMessage='Setup Successful'\n                        />\n                    </h4>\n                    {helpText}\n                    {tokenText}\n                    <div className='backstage-form__footer'>\n                        <Link\n                            className='btn btn-primary'\n                            type='submit'\n                            to={'/' + this.props.team.name + '/integrations/' + this.state.type}\n                            id='doneButton'\n                        >\n                            <FormattedMessage\n                                id='integrations.done'\n                                defaultMessage='Done'\n                            />\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getCommands, getOAuthApps, getIncomingHooks, getOutgoingHooks} from 'mattermost-redux/selectors/entities/integrations';\nimport {getBotAccounts} from 'mattermost-redux/selectors/entities/bots';\n\nimport ConfirmIntegration from './confirm_integration.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        commands: getCommands(state),\n        oauthApps: getOAuthApps(state),\n        incomingHooks: getIncomingHooks(state),\n        outgoingHooks: getOutgoingHooks(state),\n        bots: getBotAccounts(state),\n    };\n}\n\nexport default connect(mapStateToProps)(ConfirmIntegration);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Route, Switch, Redirect} from 'react-router-dom';\n\nimport {Team} from '@mattermost/types/teams';\n\nimport {UserProfile} from '@mattermost/types/users';\n\nimport {RelationOneToOne} from '@mattermost/types/utilities';\n\nimport {Command} from '@mattermost/types/integrations';\n\nimport InstalledCommands from 'components/integrations/installed_commands';\nimport AddCommand from 'components/integrations/add_command';\nimport EditCommand from 'components/integrations/edit_command';\nimport ConfirmIntegration from 'components/integrations/confirm_integration';\n\ninterface IProps {\n    component: any;\n    extraProps: {\n        loading: boolean;\n        commands: Command[];\n        users?: RelationOneToOne<UserProfile, UserProfile>;\n        team?: Team;\n        user?: UserProfile;\n    };\n    path: string;\n}\n\nconst CommandRoute = ({component: Component, extraProps, ...rest}: IProps) => (\n    <Route\n        {...rest}\n        render={(props) => (\n            <Component\n                {...extraProps}\n                {...props}\n            />\n        )}\n    />\n);\n\ntype Props = {\n\n    /**\n     * The team data needed to pass into child components\n     */\n    team?: Team;\n\n    /**\n     * The user data needed to pass into child components\n     */\n    user?: UserProfile;\n\n    /**\n     * The users collection\n     */\n    users?: RelationOneToOne<UserProfile, UserProfile>;\n\n    /**\n     * Installed slash commands to display\n     */\n    commands: Command[];\n\n    /**\n     * Object from react-router\n     */\n    match: {\n        url: string;\n    };\n\n    actions: {\n\n        /**\n         * The function to call to fetch team commands\n         */\n        loadCommandsAndProfilesForTeam: (teamId?: string) => any; // TechDebt-TODO: This needs to be changed to 'Promise<void>'\n    };\n\n    /**\n     * Whether or not commands are enabled.\n     */\n    enableCommands?: boolean;\n};\n\ntype State = {\n    loading: boolean;\n};\n\nexport default class CommandsContainer extends React.PureComponent<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableCommands) {\n            this.props.actions.loadCommandsAndProfilesForTeam(this.props.team?.id).then(\n                () => this.setState({loading: false}),\n            );\n        }\n    }\n\n    render() {\n        const extraProps = {\n            loading: this.state.loading,\n            commands: this.props.commands || [],\n            users: this.props.users,\n            team: this.props.team,\n            user: this.props.user,\n        };\n        return (\n            <div>\n                <Switch>\n                    <Route\n                        exact={true}\n                        path={`${this.props.match.url}/`}\n                        render={() => (<Redirect to={`${this.props.match.url}/installed`}/>)}\n                    />\n                    <CommandRoute\n                        extraProps={extraProps}\n                        path={`${this.props.match.url}/installed`}\n                        component={InstalledCommands}\n                    />\n                    <CommandRoute\n                        extraProps={extraProps}\n                        path={`${this.props.match.url}/add`}\n                        component={AddCommand}\n                    />\n                    <CommandRoute\n                        extraProps={extraProps}\n                        path={`${this.props.match.url}/edit`}\n                        component={EditCommand}\n                    />\n                    <CommandRoute\n                        extraProps={extraProps}\n                        path={`${this.props.match.url}/confirm`}\n                        component={ConfirmIntegration}\n                    />\n                </Switch>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {AnyAction, bindActionCreators, Dispatch} from 'redux';\n\nimport {getCommands} from 'mattermost-redux/selectors/entities/integrations';\nimport {getUsers} from 'mattermost-redux/selectors/entities/users';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {GlobalState} from '@mattermost/types/store';\n\nimport {loadCommandsAndProfilesForTeam} from 'actions/integration_actions';\n\nimport CommandsContainer from './commands_container';\n\nfunction mapStateToProps(state: GlobalState) {\n    const config = getConfig(state);\n    const enableCommands = config.EnableCommands === 'true';\n\n    return {\n        commands: Object.values(getCommands(state)),\n        users: getUsers(state),\n        enableCommands,\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<AnyAction>) {\n    return {\n        actions: bindActionCreators({\n            loadCommandsAndProfilesForTeam,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommandsContainer);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Route, NavLink} from 'react-router-dom';\n\nexport default class BackstageCategory extends React.PureComponent {\n    static get propTypes() {\n        return {\n            name: PropTypes.string.isRequired,\n            title: PropTypes.node.isRequired,\n            icon: PropTypes.string.isRequired,\n            parentLink: PropTypes.string,\n            children: PropTypes.arrayOf(PropTypes.element),\n        };\n    }\n\n    static get defaultProps() {\n        return {\n            parentLink: '',\n            children: [],\n        };\n    }\n\n    render() {\n        const {name, title, icon, parentLink, children} = this.props;\n\n        const link = parentLink + '/' + name;\n\n        return (\n            <li className='backstage-sidebar__category'>\n                <NavLink\n                    to={link}\n                    className='category-title'\n                    activeClassName='category-title--active'\n                >\n                    <i className={'fa ' + icon}/>\n                    <span className='category-title__text'>\n                        {title}\n                    </span>\n                </NavLink>\n                {\n                    children && children.length > 0 &&\n                    <Route\n                        path={link}\n                        render={() => (\n                            <ul className='sections'>\n                                {\n                                    React.Children.map(children, (child) => {\n                                        if (!child) {\n                                            return child;\n                                        }\n\n                                        return React.cloneElement(child, {\n                                            parentLink: link,\n                                        });\n                                    })\n                                }\n                            </ul>\n                        )}\n                    />\n                }\n            </li>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nexport default class BackstageSection extends React.PureComponent {\n    static get propTypes() {\n        return {\n            name: PropTypes.string.isRequired,\n            title: PropTypes.node.isRequired,\n            parentLink: PropTypes.string,\n            subsection: PropTypes.bool,\n            children: PropTypes.arrayOf(PropTypes.element),\n            id: PropTypes.string,\n        };\n    }\n\n    static get defaultProps() {\n        return {\n            parentLink: '',\n            subsection: false,\n            children: [],\n        };\n    }\n\n    getLink() {\n        return this.props.parentLink + '/' + this.props.name;\n    }\n\n    render() {\n        const {title, subsection, children} = this.props;\n\n        const link = this.getLink();\n\n        let clonedChildren = null;\n        if (children.length > 0) {\n            clonedChildren = (\n                <ul className='subsections'>\n                    {\n                        React.Children.map(children, (child) => {\n                            return React.cloneElement(child, {\n                                parentLink: link,\n                                subsection: true,\n                            });\n                        })\n                    }\n                </ul>\n            );\n        }\n\n        let className = 'section';\n        if (subsection) {\n            className = 'subsection';\n        }\n\n        return (\n            <li\n                className={className}\n                id={this.props.id}\n            >\n                <NavLink\n                    className={`${className}-title`}\n                    activeClassName={`${className}-title--active`}\n                    to={link}\n                >\n                    <span className={`${className}-title__text`}>\n                        {title}\n                    </span>\n                </NavLink>\n                {clonedChildren}\n            </li>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\nimport TeamPermissionGate from 'components/permissions_gates/team_permission_gate';\n\nimport BackstageCategory from './backstage_category.jsx';\nimport BackstageSection from './backstage_section.jsx';\n\nexport default class BackstageSidebar extends React.PureComponent {\n    static get propTypes() {\n        return {\n            team: PropTypes.object.isRequired,\n            user: PropTypes.object.isRequired,\n            enableCustomEmoji: PropTypes.bool.isRequired,\n            enableIncomingWebhooks: PropTypes.bool.isRequired,\n            enableOutgoingWebhooks: PropTypes.bool.isRequired,\n            enableCommands: PropTypes.bool.isRequired,\n            enableOAuthServiceProvider: PropTypes.bool.isRequired,\n            canCreateOrDeleteCustomEmoji: PropTypes.bool.isRequired,\n            canManageIntegrations: PropTypes.bool.isRequired,\n        };\n    }\n\n    renderCustomEmoji() {\n        if (!this.props.enableCustomEmoji || !this.props.canCreateOrDeleteCustomEmoji) {\n            return null;\n        }\n\n        return (\n            <BackstageCategory\n                name='emoji'\n                parentLink={'/' + this.props.team.name}\n                icon='fa-smile-o'\n                title={\n                    <FormattedMessage\n                        id='backstage_sidebar.emoji'\n                        defaultMessage='Custom Emoji'\n                    />\n                }\n            />\n        );\n    }\n\n    renderIntegrations() {\n        if (!this.props.canManageIntegrations) {\n            return null;\n        }\n\n        let incomingWebhooks = null;\n        if (this.props.enableIncomingWebhooks) {\n            incomingWebhooks = (\n                <TeamPermissionGate\n                    permissions={[Permissions.MANAGE_INCOMING_WEBHOOKS]}\n                    teamId={this.props.team.id}\n                >\n                    <BackstageSection\n                        name='incoming_webhooks'\n                        parentLink={'/' + this.props.team.name + '/integrations'}\n                        title={(\n                            <FormattedMessage\n                                id='backstage_sidebar.integrations.incoming_webhooks'\n                                defaultMessage='Incoming Webhooks'\n                            />\n                        )}\n                        id='incomingWebhooks'\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        let outgoingWebhooks = null;\n        if (this.props.enableOutgoingWebhooks) {\n            outgoingWebhooks = (\n                <TeamPermissionGate\n                    permissions={[Permissions.MANAGE_OUTGOING_WEBHOOKS]}\n                    teamId={this.props.team.id}\n                >\n                    <BackstageSection\n                        name='outgoing_webhooks'\n                        parentLink={'/' + this.props.team.name + '/integrations'}\n                        title={(\n                            <FormattedMessage\n                                id='backstage_sidebar.integrations.outgoing_webhooks'\n                                defaultMessage='Outgoing Webhooks'\n                            />\n                        )}\n                        id='outgoingWebhooks'\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        let commands = null;\n        if (this.props.enableCommands) {\n            commands = (\n                <TeamPermissionGate\n                    permissions={[Permissions.MANAGE_SLASH_COMMANDS]}\n                    teamId={this.props.team.id}\n                >\n                    <BackstageSection\n                        name='commands'\n                        parentLink={'/' + this.props.team.name + '/integrations'}\n                        title={(\n                            <FormattedMessage\n                                id='backstage_sidebar.integrations.commands'\n                                defaultMessage='Slash Commands'\n                            />\n                        )}\n                        id='slashCommands'\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        let oauthApps = null;\n        if (this.props.enableOAuthServiceProvider) {\n            oauthApps = (\n                <SystemPermissionGate permissions={[Permissions.MANAGE_OAUTH]}>\n                    <BackstageSection\n                        name='oauth2-apps'\n                        parentLink={'/' + this.props.team.name + '/integrations'}\n                        title={\n                            <FormattedMessage\n                                id='backstage_sidebar.integrations.oauthApps'\n                                defaultMessage='OAuth 2.0 Applications'\n                            />\n                        }\n                        id='oauthApps'\n                    />\n                </SystemPermissionGate>\n            );\n        }\n\n        // Note that we allow managing bot accounts even if bot account creation is disabled: only\n        // a permissions check is required.\n        const botAccounts = (\n            <SystemPermissionGate permissions={['manage_bots', 'manage_others_bots']}>\n                <BackstageSection\n                    name='bots'\n                    parentLink={'/' + this.props.team.name + '/integrations'}\n                    title={\n                        <FormattedMessage\n                            id='backstage_sidebar.bots'\n                            defaultMessage='Bot Accounts'\n                        />\n                    }\n                    id='botAccounts'\n                />\n            </SystemPermissionGate>\n        );\n\n        return (\n            <BackstageCategory\n                name='integrations'\n                icon='fa-link'\n                parentLink={'/' + this.props.team.name}\n                title={\n                    <FormattedMessage\n                        id='backstage_sidebar.integrations'\n                        defaultMessage='Integrations'\n                    />\n                }\n            >\n                {incomingWebhooks}\n                {outgoingWebhooks}\n                {commands}\n                {oauthApps}\n                {botAccounts}\n            </BackstageCategory>\n        );\n    }\n\n    render() {\n        return (\n            <div className='backstage-sidebar'>\n                <ul>\n                    {this.renderCustomEmoji()}\n                    {this.renderIntegrations()}\n                </ul>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Route, Switch} from 'react-router-dom';\n\nimport Bots from 'components/integrations/bots';\nimport AddBot from 'components/integrations/bots/add_bot';\n\nimport Pluggable from 'plugins/pluggable';\nimport AnnouncementBar from 'components/announcement_bar';\nimport SystemNotice from 'components/system_notice';\nimport Integrations from 'components/integrations';\nimport Emoji from 'components/emoji';\nimport AddEmoji from 'components/emoji/add_emoji';\nimport InstalledIncomingWebhooks from 'components/integrations/installed_incoming_webhooks';\nimport AddIncomingWehook from 'components/integrations/add_incoming_webhook';\nimport EditIncomingWebhook from 'components/integrations/edit_incoming_webhook';\nimport InstalledOutgoingWebhooks from 'components/integrations/installed_outgoing_webhooks';\nimport AddOutgoingWebhook from 'components/integrations/add_outgoing_webhook';\nimport EditOutgoingWebhook from 'components/integrations/edit_outgoing_webhook';\nimport InstalledOauthApps from 'components/integrations/installed_oauth_apps';\nimport AddOauthApp from 'components/integrations/add_oauth_app';\nimport EditOauthApp from 'components/integrations/edit_oauth_app';\nimport CommandsContainer from 'components/integrations/commands_container';\nimport ConfirmIntegration from 'components/integrations/confirm_integration';\n\nimport BackstageSidebar from './components/backstage_sidebar.jsx';\nimport BackstageNavbar from './components/backstage_navbar';\n\nconst BackstageRoute = ({component: Component, extraProps, ...rest}) => ( //eslint-disable-line react/prop-types\n    <Route\n        {...rest}\n        render={(props) => (\n            <Component\n                {...extraProps}\n                {...props}\n            />\n        )}\n    />\n);\n\nexport default class BackstageController extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * Current user.\n         */\n        user: PropTypes.object,\n\n        /**\n         * Current team.\n         */\n        team: PropTypes.object,\n\n        /**\n         * Object from react-router\n         */\n        match: PropTypes.shape({\n            url: PropTypes.string.isRequired,\n        }).isRequired,\n\n        siteName: PropTypes.string,\n        enableCustomEmoji: PropTypes.bool.isRequired,\n        enableIncomingWebhooks: PropTypes.bool.isRequired,\n        enableOutgoingWebhooks: PropTypes.bool.isRequired,\n        enableCommands: PropTypes.bool.isRequired,\n        enableOAuthServiceProvider: PropTypes.bool.isRequired,\n        canCreateOrDeleteCustomEmoji: PropTypes.bool.isRequired,\n        canManageIntegrations: PropTypes.bool.isRequired,\n    }\n\n    scrollToTop = () => {\n        if (this.listRef) {\n            this.listRef.scrollTop = 0;\n        }\n    }\n\n    setListRef = (ref) => {\n        this.listRef = ref;\n    }\n\n    render() {\n        if (this.props.team == null || this.props.user == null) {\n            return <div/>;\n        }\n        const extraProps = {\n            team: this.props.team,\n            user: this.props.user,\n            scrollToTop: this.scrollToTop,\n        };\n        return (\n            <div className='backstage'>\n                <AnnouncementBar/>\n                <SystemNotice/>\n                <BackstageNavbar\n                    team={this.props.team}\n                    siteName={this.props.siteName}\n                />\n                <Pluggable pluggableName='Root'/>\n                <div\n                    className='backstage-body'\n                    ref={this.setListRef}\n                >\n                    <BackstageSidebar\n                        team={this.props.team}\n                        user={this.props.user}\n                        enableCustomEmoji={this.props.enableCustomEmoji}\n                        enableIncomingWebhooks={this.props.enableIncomingWebhooks}\n                        enableOutgoingWebhooks={this.props.enableOutgoingWebhooks}\n                        enableCommands={this.props.enableCommands}\n                        enableOAuthServiceProvider={this.props.enableOAuthServiceProvider}\n                        canCreateOrDeleteCustomEmoji={this.props.canCreateOrDeleteCustomEmoji}\n                        canManageIntegrations={this.props.canManageIntegrations}\n                    />\n                    <Switch>\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={'/:team/integrations'}\n                            component={Integrations}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={`${this.props.match.url}/incoming_webhooks`}\n                            component={InstalledIncomingWebhooks}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/incoming_webhooks/add`}\n                            component={AddIncomingWehook}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/incoming_webhooks/edit`}\n                            component={EditIncomingWebhook}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={`${this.props.match.url}/outgoing_webhooks`}\n                            component={InstalledOutgoingWebhooks}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/outgoing_webhooks/add`}\n                            component={AddOutgoingWebhook}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/outgoing_webhooks/edit`}\n                            component={EditOutgoingWebhook}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/commands`}\n                            component={CommandsContainer}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={`${this.props.match.url}/oauth2-apps`}\n                            component={InstalledOauthApps}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/oauth2-apps/add`}\n                            component={AddOauthApp}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/oauth2-apps/edit`}\n                            component={EditOauthApp}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/confirm`}\n                            component={ConfirmIntegration}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={'/:team/emoji'}\n                            component={Emoji}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/add`}\n                            component={AddEmoji}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/bots/add`}\n                            component={AddBot}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/bots/edit`}\n                            component={AddBot}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/bots`}\n                            component={Bots}\n                        />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\n\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\nimport {getMyTeams, getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {haveITeamPermission, haveISystemPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport BackstageController from './backstage_controller.jsx';\n\nfunction mapStateToProps(state) {\n    const user = getCurrentUser(state);\n    const team = getCurrentTeam(state);\n\n    const config = getConfig(state);\n\n    const siteName = config.SiteName;\n    const enableCustomEmoji = config.EnableCustomEmoji === 'true';\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\n    const enableCommands = config.EnableCommands === 'true';\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\n\n    let canCreateOrDeleteCustomEmoji = (haveISystemPermission(state, {permission: Permissions.CREATE_EMOJIS}) || haveISystemPermission(state, {permission: Permissions.DELETE_EMOJIS}));\n    if (!canCreateOrDeleteCustomEmoji) {\n        for (const t of getMyTeams(state)) {\n            if (haveITeamPermission(state, t.id, Permissions.CREATE_EMOJIS) || haveITeamPermission(state, t.id, Permissions.DELETE_EMOJIS)) {\n                canCreateOrDeleteCustomEmoji = true;\n                break;\n            }\n        }\n    }\n\n    const canManageTeamIntegrations = (haveITeamPermission(state, '', Permissions.MANAGE_SLASH_COMMANDS) || haveITeamPermission(state, '', Permissions.MANAGE_OAUTH) || haveITeamPermission(state, '', Permissions.MANAGE_INCOMING_WEBHOOKS) || haveITeamPermission(state, '', Permissions.MANAGE_OUTGOING_WEBHOOKS));\n    const canManageSystemBots = (haveISystemPermission(state, {permission: Permissions.MANAGE_BOTS}) || haveISystemPermission(state, {permission: Permissions.MANAGE_OTHERS_BOTS}));\n    const canManageIntegrations = canManageTeamIntegrations || canManageSystemBots;\n\n    return {\n        user,\n        team,\n        siteName,\n        enableCustomEmoji,\n        enableIncomingWebhooks,\n        enableOutgoingWebhooks,\n        enableCommands,\n        enableOAuthServiceProvider,\n        canCreateOrDeleteCustomEmoji,\n        canManageIntegrations,\n    };\n}\n\nexport default withRouter(connect(mapStateToProps)(BackstageController));\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport LocalizedIcon from 'components/localized_icon';\n\nimport {t} from 'utils/i18n';\n\ntype Props = {\n    additionalClassName: string | null;\n}\n\nexport default class WarningIcon extends React.PureComponent<Props> {\n    public static defaultProps: Props = {\n        additionalClassName: null,\n    };\n\n    public render(): JSX.Element {\n        const className = 'fa fa-warning' + (this.props.additionalClassName ? ' ' + this.props.additionalClassName : '');\n        return (\n            <LocalizedIcon\n                className={className}\n                title={{id: t('generic_icons.warning'), defaultMessage: 'Warning Icon'}}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {Client4} from 'mattermost-redux/client';\nimport {BotTypes} from 'mattermost-redux/action_types';\n\nimport {ActionFunc} from 'mattermost-redux/types/actions';\nimport {Bot, BotPatch} from '@mattermost/types/bots';\n\nimport {bindClientFunc} from './helpers';\n\nconst BOTS_PER_PAGE_DEFAULT = 20;\n\nexport function createBot(bot: Bot): ActionFunc {\n    return bindClientFunc({\n        clientFunc: Client4.createBot,\n        onSuccess: BotTypes.RECEIVED_BOT_ACCOUNT,\n        params: [\n            bot,\n        ],\n    });\n}\n\nexport function patchBot(botUserId: string, botPatch: BotPatch): ActionFunc {\n    return bindClientFunc({\n        clientFunc: Client4.patchBot,\n        onSuccess: BotTypes.RECEIVED_BOT_ACCOUNT,\n        params: [\n            botUserId,\n            botPatch,\n        ],\n    });\n}\n\nexport function loadBot(botUserId: string): ActionFunc {\n    return bindClientFunc({\n        clientFunc: Client4.getBot,\n        onSuccess: BotTypes.RECEIVED_BOT_ACCOUNT,\n        params: [\n            botUserId,\n        ],\n    });\n}\n\nexport function loadBots(page = 0, perPage = BOTS_PER_PAGE_DEFAULT): ActionFunc {\n    return bindClientFunc({\n        clientFunc: Client4.getBotsIncludeDeleted,\n        onSuccess: BotTypes.RECEIVED_BOT_ACCOUNTS,\n        params: [\n            page,\n            perPage,\n        ],\n    });\n}\n\nexport function disableBot(botUserId: string): ActionFunc {\n    return bindClientFunc({\n        clientFunc: Client4.disableBot,\n        onSuccess: BotTypes.RECEIVED_BOT_ACCOUNT,\n        params: [\n            botUserId,\n        ],\n    });\n}\n\nexport function enableBot(botUserId: string): ActionFunc {\n    return bindClientFunc({\n        clientFunc: Client4.enableBot,\n        onSuccess: BotTypes.RECEIVED_BOT_ACCOUNT,\n        params: [\n            botUserId,\n        ],\n    });\n}\n\nexport function assignBot(botUserId: string, newOwnerId: string): ActionFunc {\n    return bindClientFunc({\n        clientFunc: Client4.assignBot,\n        onSuccess: BotTypes.RECEIVED_BOT_ACCOUNT,\n        params: [\n            botUserId,\n            newOwnerId,\n        ],\n    });\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {createSelector} from 'reselect';\n\nimport {Bot} from '@mattermost/types/bots';\nimport {GlobalState} from '@mattermost/types/store';\nimport {getUsers} from 'mattermost-redux/selectors/entities/common';\n\nexport const ExternalBotAccountNames: string[] = ['mattermost-advisor'];\n\nexport function getBotAccounts(state: GlobalState) {\n    return state.entities.bots.accounts;\n}\n\nexport const getExternalBotAccounts: (state: GlobalState) => Record<string, Bot> = createSelector(\n    'getExternalBotAccounts',\n    getBotAccounts,\n    getUsers,\n    (botAccounts, userProfiles) => {\n        const nextState: Record<string, Bot> = {};\n        Object.values(botAccounts).forEach((botAccount) => {\n            const botUser = userProfiles[botAccount.user_id];\n            if (botUser && !ExternalBotAccountNames.includes(botUser.username)) {\n                nextState[botAccount.user_id] = botAccount;\n            }\n        });\n\n        return nextState;\n    },\n);\n"],"names":["PropTypes","React","FormattedMessage","Link","BackIcon","BackstageNavbar","PureComponent","propTypes","team","object","siteName","string","render","props","teamExists","delete_at","name","createSelector","getCurrentTeamId","appsEnabled","getIncomingHooks","state","entities","integrations","incomingHooks","getOutgoingHooks","outgoingHooks","getCommands","commands","getOAuthApps","oauthApps","getAppsOAuthAppIDs","appsOAuthAppIDs","apps","ids","getAppsBotIDs","appsBotIDs","getSystemCommands","systemCommands","getOutgoingHooksInCurrentTeam","teamId","hooks","Object","values","filter","o","team_id","getAllCommands","getAutocompleteCommandsList","currentTeamId","command","auto_complete","sort","a","b","display_name","localeCompare","Utils","LoadingScreen","SearchIcon","BackstageList","constructor","e","setState","target","value","toLowerCase","children","loading","hasChildren","Children","map","child","cloneElement","length","emptyText","emptyTextSearch","searchTerm","addLink","addText","addButtonId","header","searchPlaceholder","updateFilter","style","search","helpText","oneOfType","node","func","isRequired","bool","localizeMessage","flexGrow","flexShrink","ConfirmModal","Markdown","SaveButton","WarningIcon","matchesFilter","bot","owner","username","description","displayName","ownerUsername","indexOf","Bot","actions","enableBot","user_id","disableBot","id","enableUserAccessToken","disableUserAccessToken","confirmingId","revokeUserAccessToken","closeConfirm","creatingTokenState","token","assign","preventDefault","error","data","createUserAccessToken","message","fromApp","tokenList","accessTokens","forEach","activeLink","disableClass","disabledText","is_active","push","confirmRevokeToken","options","openCreateToken","handleCreateToken","handleUpdateDescription","closeCreateToken","imageURL","imageURLForUser","user","last_picture_update","revokeTokenConfirmed","getSiteURL","Constants","FormattedMarkdownMessage","Bots","owners","users","includes","bots","match","enabledBots","botToJSX","disabledBots","sections","componentDidMount","loadBots","Integrations","START_PAGE_NUM","parseInt","PAGE_SIZE","then","result","promises","getUser","owner_id","getUserAccessTokensForUser","Promise","all","fetchAppsBotIDs","DisabledSection","hasDisabled","botsToDisplay","EnabledSection","createBots","botAccounts","siteURL","connect","bindActionCreators","getExternalBotAccounts","getConfig","UserSelectors","mapStateToProps","config","EnableBotAccountCreation","botValues","reduce","admin","userAccessTokensByUser","mapDispatchToProps","dispatch","LocalizedIcon","t","BackstageHeader","index","defaultMessage","FileUtils","UserUtils","General","BotDefaultIcon","browserHistory","OverlayTrigger","Tooltip","SpinnerButton","FormError","AcceptedProfileImageTypes","ValidationErrors","roleOptionSystemAdmin","roleOptionMember","AddBot","role","postAll","checked","postChannels","files","pictureFile","previewBlob","URL","createObjectURL","reader","FileReader","onload","e2","orientation","getExifOrientation","orientationStyles","getOrientationStyles","image","readAsArrayBuffer","roles","SYSTEM_USER_ROLE","SYSTEM_ADMIN_ROLE","SYSTEM_POST_ALL_ROLE","SYSTEM_POST_ALL_PUBLIC_ROLE","rolesResult","updateUserRoles","adding","type","size","maxFileSize","trim","patchBot","imageResult","uploadProfileImage","setDefaultProfileImage","updateRoles","usernameError","isValidBotUsername","errObj","INVALID_LAST_CHARACTER","createBot","tokenResult","isSystemAdmin","hasPostAllRole","hasPostAllPublicRole","subtitle","buttonText","buttonActiveText","removeImageIcon","OVERLAY_TIME_DELAY","setDefault","imageStyles","handleSubmit","updateUsername","ACCEPT_STATIC_IMAGE","updatePicture","updateDisplayName","updateDescription","editingUserHasManageSystem","updateRole","updatePostAll","updatePostChannels","number","shape","getBotAccounts","haveISystemPermission","Permissions","ownProps","botId","URLSearchParams","location","get","MaxFileSize","permission","MANAGE_SYSTEM","IntegrationOption","title","link","BotAccountsIcon","IncomingWebhookIcon","OAuthIcon","OutgoingWebhookIcon","SlashCommandIcon","SystemPermissionGate","TeamPermissionGate","currentSiteName","document","enableIncomingWebhooks","enableOutgoingWebhooks","enableCommands","enableOAuthServiceProvider","updateTitle","MANAGE_INCOMING_WEBHOOKS","MANAGE_OUTGOING_WEBHOOKS","MANAGE_SLASH_COMMANDS","MANAGE_OAUTH","appDirectory","SiteName","EnableIncomingWebhooks","EnableOutgoingWebhooks","EnableCommands","EnableOAuthServiceProvider","useCallback","ConfirmModalRedux","ModalId","DeleteIntegrationLink","confirmButtonText","linkText","modalMessage","modalTitle","onDelete","openModal","onClick","modalId","dialogProps","onConfirm","dialogType","DeleteEmojiButton","Client4","AnyTeamPermissionGate","EmojiListItem","emoji","deleteCustomEmoji","creatorUsername","creatorDisplayName","deleteButton","handleDelete","creator_id","currentUserId","DELETE_EMOJIS","DELETE_OTHERS_EMOJIS","backgroundImage","getCustomEmojiImageUrl","emojiId","getCurrentUserId","getCurrentTeam","getDisplayNameByUser","emojis","customEmoji","creator","currentTeam","Emoji","NextIcon","PreviousIcon","LocalizedInput","EMOJI_PER_PAGE","EMOJI_SEARCH_DELAY_MILLISECONDS","EmojiList","next","page","nextLoading","getCustomEmojis","SORT_BY_NAME","missingPages","scrollToTop","term","clearTimeout","searchTimeout","setTimeout","searchEmojis","searchCustomEmojis","em","newSearchEmojis","splice","nextButton","previousButton","emojiIds","deleteFromSearch","pageStart","pageEnd","emojisToDisplay","slice","buttonContents","nextPage","previousPage","onSearchChange","getCustomEmojiIdsSortedByName","EmojiPage","teamDisplayName","loadRolesIfNeeded","componentDidUpdate","prevProps","CREATE_EMOJIS","teamName","general","AddEmoji","emojiMap","saving","startsWith","endsWith","substring","test","hasSystemEmoji","has","maxFileSizeBytes","response","createCustomEmoji","savedEmoji","responseError","genericError","imageUrl","readAsDataURL","filename","preview","handleFormSubmit","updateName","ACCEPT_EMOJI_IMAGE","updateImage","handleSaveButtonClick","getEmojiMap","IntegrationActions","getProfilesByIds","DEFAULT_PAGE_SIZE","loadIncomingHooksAndProfilesForTeam","perPage","loadProfilesForIncomingHooks","getState","profilesToLoad","i","hook","list","keys","loadOutgoingHooksAndProfilesForTeam","loadProfilesForOutgoingHooks","loadCommandsAndProfilesForTeam","getCustomTeamCommands","loadProfilesForCommands","loadOAuthAppsAndProfiles","loadProfilesForOAuthApps","app","copyToClipboard","CopyText","queryCommandSupported","tooltip","idMessage","copyText","incomingWebhook","channel","channel_id","InstalledIncomingWebhook","canChange","incomingWebhookId","url","createAt","create_at","InstalledIncomingWebhooks","removeIncomingHook","displayNameA","channelA","channels","displayNameB","incomingWebhooks","incomingWebhookCompare","canManageOthersWebhooks","deleteIncomingWebhook","buildYourOwn","getAllChannels","getUsers","haveITeamPermission","MANAGE_OTHERS_INCOMING_WEBHOOKS","key","ChannelSelect","channelName","OPEN_CHANNEL","selectOpen","PRIVATE_CHANNEL","selectPrivate","DM_CHANNEL","selectDm","onChange","getMyChannels","getCurrentUserLocale","sortChannelsByTypeAndDisplayName","getMyChannelsSorted","locale","bind","AbstractIncomingWebhook","channelId","channelLocked","channel_locked","iconURL","icon_url","serverError","clientError","action","getStateFromHook","initialHook","headerToRender","footerToRender","footer","updateChannelId","updateChannelLocked","enablePostUsernameOverride","enablePostIconOverride","updateIconURL","HEADER","FOOTER","LOADING","AddIncomingWebhook","createIncomingHook","addIncomingHook","EnablePostUsernameOverride","EnablePostIconOverride","EditIncomingWebhook","newHook","submitHook","updateIncomingHook","showConfirmModal","getIncomingHook","hookId","editIncomingHook","outgoingWebhook","trigger_words","triggerWords","triggerWord","InstalledOutgoingWebhook","onRegenToken","makeDisplayName","triggerWordsFull","triggerWordsStartsWith","join","urls","callback_urls","triggerWhen","trigger_when","handleRegenToken","contentType","content_type","InstalledOutgoingWebhooks","regenOutgoingHookToken","removeOutgoingHook","channelB","outgoingWebhooks","outgoingWebhookCompare","regenOutgoingWebhookToken","array","Actions","MANAGE_OTHERS_OUTGOING_WEBHOOKS","AbstractOutgoingWebhook","callbackUrls","split","callbackUrl","contentTypeOption1","contentTypeOption2","renderExtra","updateContentType","updateTriggerWords","updateTriggerWhen","updateCallbackUrls","AddOutgoingWebhook","createOutgoingHook","addOutgoingHook","EditOutgoingWebhook","triggerWordsSame","every","v","callbackUrlsSame","handleConfirmModal","updateOutgoingHook","confirmButton","confirmTitle","confirmMessage","confirmModalDismissed","getOutgoingHook","editOutgoingHook","FAKE_SECRET","oauthApp","InstalledOAuthApp","clientSecret","client_secret","onRegenerateSecret","handleShowClientSecret","creatorName","isTrusted","is_trusted","showHide","handleHideClientSecret","regen","handleRegenerate","icon","appInfo","clientId","InstalledOAuthApps","deleteOAuthApp","oauthAppCompare","regenOAuthAppSecret","nameA","toString","nameB","integrationsEnabled","canManageOauth","oauthApplications","AbstractOAuthApp","homepage","has_icon","Boolean","current","src","Image","imageLoaded","createRef","getStateFromApp","initialApp","trusted","updateTrusted","updateHomepage","updateIconUrl","AddOAuthApp","addOAuthApp","addOAuthAppRequest","EditOAuthApp","newApp","submitOAuthApp","res","editOAuthApp","err","getOAuthApp","oauthAppId","trigger","InstalledCommand","auto_complete_hint","commandToken","InstalledCommands","regenCommandToken","deleteCommand","commandCompare","canManageOthersSlashCommands","MANAGE_OTHERS_SLASH_COMMANDS","REQUEST_POST","REQUEST_GET","AbstractCommand","method","iconUrl","autocomplete","autocompleteHint","autocompleteDescription","auto_complete_desc","substr","MIN_TRIGGER_LENGTH","MAX_TRIGGER_LENGTH","min","max","getStateFromCommand","initialCommand","updateAutocompleteHint","updateAutocompleteDescription","updateTrigger","updateUrl","updateMethod","updateAutocomplete","AddCommand","addCommand","EditCommand","newCommand","originalCommand","submitCommand","editCommand","undefined","commandId","ErrorPageTypes","ConfirmIntegration","window","addEventListener","handleKeyPress","componentWillUnmount","removeEventListener","headerText","tokenText","incomingHook","outgoingHook","COMMAND","msg","INCOMING_WEBHOOK","incomingHookToken","OUTGOING_WEBHOOK","outgoingHookToken","OAUTH_APP","oauthAppToken","oauthAppSecret","secret","BOT","botToken","botname","replace","PAGE_NOT_FOUND","Route","Switch","Redirect","CommandRoute","component","Component","extraProps","rest","path","CommandsContainer","NavLink","BackstageCategory","parentLink","arrayOf","element","defaultProps","BackstageSection","subsection","getLink","clonedChildren","className","BackstageSidebar","enableCustomEmoji","canCreateOrDeleteCustomEmoji","canManageIntegrations","renderCustomEmoji","renderIntegrations","Pluggable","AnnouncementBar","SystemNotice","AddIncomingWehook","InstalledOauthApps","AddOauthApp","EditOauthApp","BackstageRoute","BackstageController","listRef","scrollTop","ref","setListRef","withRouter","getCurrentUser","getMyTeams","EnableCustomEmoji","canManageTeamIntegrations","canManageSystemBots","MANAGE_BOTS","MANAGE_OTHERS_BOTS","additionalClassName","BotTypes","bindClientFunc","BOTS_PER_PAGE_DEFAULT","clientFunc","onSuccess","RECEIVED_BOT_ACCOUNT","params","botUserId","botPatch","loadBot","getBot","getBotsIncludeDeleted","RECEIVED_BOT_ACCOUNTS","assignBot","newOwnerId","ExternalBotAccountNames","accounts","userProfiles","nextState","botAccount","botUser"],"sourceRoot":""}