{"version":3,"file":"404.b4a0a2eaa02aec20c4a5.js","mappings":"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","sources":["webpack://@mattermost/webapp/./components/plugin_marketplace/marketplace_item/marketplace_item.tsx","webpack://@mattermost/webapp/./components/plugin_marketplace/marketplace_item/marketplace_item_plugin/marketplace_item_plugin.tsx","webpack://@mattermost/webapp/./components/plugin_marketplace/marketplace_item/marketplace_item_plugin/index.ts","webpack://@mattermost/webapp/./components/plugin_marketplace/marketplace_item/marketplace_item_app/marketplace_item_app.tsx","webpack://@mattermost/webapp/./components/plugin_marketplace/marketplace_item/marketplace_item_app/index.ts","webpack://@mattermost/webapp/./components/plugin_marketplace/marketplace_list/navigation_row/navigation_button.tsx","webpack://@mattermost/webapp/./components/plugin_marketplace/marketplace_list/navigation_row/navigation_row.tsx","webpack://@mattermost/webapp/./components/plugin_marketplace/marketplace_list/navigation_row/index.ts","webpack://@mattermost/webapp/./components/plugin_marketplace/marketplace_list/marketplace_list.tsx","webpack://@mattermost/webapp/./components/plugin_marketplace/marketplace_modal.tsx"],"sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport classNames from 'classnames';\n\nimport type {MarketplaceLabel} from '@mattermost/types/marketplace';\n\nimport OverlayTrigger from 'components/overlay_trigger';\nimport Tooltip from 'components/tooltip';\nimport PluginIcon from 'components/widgets/icons/plugin_icon';\n\nimport {Constants} from 'utils/constants';\n\n// Label renders a tag showing a name and a description in a tooltip.\n// If a URL is provided, clicking on the tag will open the URL in a new tab.\nexport const Label = ({name, description, url, color}: MarketplaceLabel): JSX.Element => {\n    const tag = (\n        <span\n            className='tag'\n            style={{backgroundColor: color || ''}}\n        >\n            {name.toUpperCase()}\n        </span>\n    );\n\n    let label;\n    if (description) {\n        label = (\n            <OverlayTrigger\n                delayShow={Constants.OVERLAY_TIME_DELAY}\n                placement='top'\n                overlay={\n                    <Tooltip id={'plugin-marketplace_label_' + name.toLowerCase() + '-tooltip'}>\n                        {description}\n                    </Tooltip>\n                }\n            >\n                {tag}\n            </OverlayTrigger>\n        );\n    } else {\n        label = tag;\n    }\n\n    if (url) {\n        return (\n            <a\n                aria-label={name.toLowerCase()}\n                className='style--none more-modal__row--link'\n                target='_blank'\n                rel='noopener noreferrer'\n                href={url}\n            >\n                {label}\n            </a>\n        );\n    }\n\n    return label;\n};\n\nexport type MarketplaceItemProps = {\n    id: string;\n    name: string;\n    description?: string;\n    iconSource?: string;\n    labels?: MarketplaceLabel[];\n    homepageUrl?: string;\n\n    error?: string;\n\n    button: JSX.Element;\n    updateDetails: JSX.Element | null;\n    versionLabel: JSX.Element| null;\n};\n\nexport default class MarketplaceItem extends React.PureComponent <MarketplaceItemProps> {\n    render(): JSX.Element {\n        let icon;\n        if (this.props.iconSource) {\n            icon = (\n                <div className='icon__plugin icon__plugin--background'>\n                    <img src={this.props.iconSource}/>\n                </div>\n            );\n        } else {\n            icon = <PluginIcon className='icon__plugin icon__plugin--background'/>;\n        }\n\n        let labels;\n        if (this.props.labels && this.props.labels.length !== 0) {\n            labels = this.props.labels.map((label) => (\n                <Label\n                    key={label.name}\n                    name={label.name}\n                    description={label.description}\n                    url={label.url}\n                    color={label.color}\n                />\n            ),\n            );\n        }\n\n        const pluginDetailsInner = (\n            <>\n                {this.props.name}\n                {this.props.versionLabel}\n            </>\n        );\n\n        const description = (\n            <p className={classNames('more-modal__description', {error_text: this.props.error})}>\n                {this.props.error ? this.props.error : this.props.description}\n            </p>\n        );\n\n        let pluginDetails;\n        if (this.props.homepageUrl) {\n            pluginDetails = (\n                <>\n                    <a\n                        aria-label={this.props.name.toLowerCase()}\n                        className='style--none more-modal__row--link'\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        href={this.props.homepageUrl}\n                    >\n                        {pluginDetailsInner}\n                    </a>\n                    {labels}\n                    <a\n                        aria-label=\"Plugin's website\"\n                        className='style--none more-modal__row--link'\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        href={this.props.homepageUrl}\n                    >\n                        {description}\n                    </a>\n                </>\n            );\n        } else {\n            pluginDetails = (\n                <>\n                    <span\n                        aria-label={this.props.name.toLowerCase()}\n                        className='style--none'\n                    >\n                        {pluginDetailsInner}\n                    </span>\n                    {labels}\n                    <span\n                        aria-label=\"Plugin\\'s website\"\n                        className='style--none'\n                    >\n                        {description}\n                    </span>\n                </>\n            );\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames('more-modal__row', 'more-modal__row--link', {item_error: this.props.error})}\n                    key={this.props.id}\n                    id={'marketplace-plugin-' + this.props.id}\n                >\n                    {icon}\n                    <div className='more-modal__details'>\n                        {pluginDetails}\n                        {this.props.updateDetails}\n\n                    </div>\n                    <div className='more-modal__actions'>\n                        {this.props.button}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport semver from 'semver';\n\nimport {FormattedMessage} from 'react-intl';\n\nimport {Link} from 'react-router-dom';\n\nimport type {MarketplaceLabel} from '@mattermost/types/marketplace';\n\nimport MarketplaceItem from '../marketplace_item';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\nimport ConfirmModal from 'components/confirm_modal';\nimport LoadingWrapper from 'components/widgets/loading/loading_wrapper';\n\nimport {localizeMessage} from 'utils/utils';\n\ntype UpdateVersionProps = {\n    version: string;\n    releaseNotesUrl?: string;\n};\n\n// UpdateVersion renders the version text in the update details, linking out to release notes if available.\nexport const UpdateVersion = ({version, releaseNotesUrl}: UpdateVersionProps): JSX.Element => {\n    if (!releaseNotesUrl) {\n        return (\n            <span>\n                {version}\n            </span>\n        );\n    }\n\n    return (\n        <a\n            target='_blank'\n            rel='noopener noreferrer'\n            href={releaseNotesUrl}\n        >\n            {version}\n        </a>\n    );\n};\n\nexport type UpdateDetailsProps = {\n    version: string;\n    releaseNotesUrl?: string;\n    installedVersion?: string;\n    isInstalling: boolean;\n    onUpdate: (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => void;\n};\n\n// UpdateDetails renders an inline update prompt for plugins, when available.\nexport const UpdateDetails = ({version, releaseNotesUrl, installedVersion, isInstalling, onUpdate}: UpdateDetailsProps): JSX.Element | null => {\n    if (!installedVersion || isInstalling) {\n        return null;\n    }\n\n    let isUpdate = false;\n    try {\n        isUpdate = semver.gt(version, installedVersion);\n    } catch (e) {\n        // If we fail to parse the version, assume not an update;\n    }\n\n    if (!isUpdate) {\n        return null;\n    }\n\n    return (\n        <div className={classNames('update')}>\n            <FormattedMessage\n                id='marketplace_modal.list.update_available'\n                defaultMessage='Update available:'\n            />\n            {' '}\n            <UpdateVersion\n                version={version}\n                releaseNotesUrl={releaseNotesUrl}\n            />\n            {' - '}\n            <b>\n                <a onClick={onUpdate}>\n                    <FormattedMessage\n                        id='marketplace_modal.list.update'\n                        defaultMessage='Update'\n                    />\n                </a>\n            </b>\n        </div>\n    );\n};\n\nexport type UpdateConfirmationModalProps = {\n    show: boolean;\n    name: string;\n    version: string;\n    releaseNotesUrl?: string;\n    installedVersion?: string;\n    onUpdate: (checked: boolean) => void;\n    onCancel: (checked: boolean) => void;\n};\n\n// UpdateConfirmationModal prompts before allowing upgrade, specially handling major version changes.\nexport const UpdateConfirmationModal = ({show, name, version, installedVersion, releaseNotesUrl, onUpdate, onCancel}: UpdateConfirmationModalProps): JSX.Element | null => {\n    if (!installedVersion) {\n        return null;\n    }\n\n    let isUpdate = false;\n    try {\n        isUpdate = semver.gt(version, installedVersion);\n    } catch (e) {\n        // If we fail to parse the version, assume not an update;\n    }\n\n    if (!isUpdate) {\n        return null;\n    }\n\n    const messages = [(\n        <p key='intro'>\n            <FormattedMessage\n                id='marketplace_modal.list.update_confirmation.message.intro'\n                defaultMessage={`Are you sure you want to update the ${name} plugin to ${version}?`}\n                values={{name, version}}\n            />\n        </p>\n    )];\n\n    if (releaseNotesUrl) {\n        messages.push(\n            <p key='current'>\n                <FormattedMarkdownMessage\n                    id='marketplace_modal.list.update_confirmation.message.current_with_release_notes'\n                    defaultMessage='You currently have {installedVersion} installed. View the [release notes](!{releaseNotesUrl}) to learn about the changes included in this update.'\n                    values={{installedVersion, releaseNotesUrl}}\n                />\n            </p>,\n        );\n    } else {\n        messages.push(\n            <p key='current'>\n                <FormattedMessage\n                    id='marketplace_modal.list.update_confirmation.message.current'\n                    defaultMessage={`You currently have ${installedVersion} installed.`}\n                    values={{installedVersion}}\n                />\n            </p>,\n        );\n    }\n\n    let sameMajorVersion = false;\n    try {\n        sameMajorVersion = semver.major(version) === semver.major(installedVersion);\n    } catch (e) {\n        // If we fail to parse the version, assume a potentially breaking change.\n        // In practice, this won't happen since we already tried to parse the version above.\n    }\n\n    if (!sameMajorVersion) {\n        if (releaseNotesUrl) {\n            messages.push(\n                <p\n                    className='alert alert-warning'\n                    key='warning'\n                >\n                    <FormattedMarkdownMessage\n                        id='marketplace_modal.list.update_confirmation.message.warning_major_version_with_release_notes'\n                        defaultMessage='This update may contain breaking changes. Consult the [release notes](!{releaseNotesUrl}) before upgrading.'\n                        values={{releaseNotesUrl}}\n                    />\n                </p>,\n            );\n        } else {\n            messages.push(\n                <p\n                    className='alert alert-warning'\n                    key='warning'\n                >\n                    <FormattedMessage\n                        id='marketplace_modal.list.update_confirmation.message.warning_major_version'\n                        defaultMessage={'This update may contain breaking changes.'}\n                    />\n                </p>,\n            );\n        }\n    }\n\n    return (\n        <ConfirmModal\n            show={show}\n            title={\n                <FormattedMessage\n                    id='marketplace_modal.list.update_confirmation.title'\n                    defaultMessage={'Confirm Plugin Update'}\n                />\n            }\n            message={messages}\n            confirmButtonText={\n                <FormattedMessage\n                    id='marketplace_modal.list.update_confirmation.confirm_button'\n                    defaultMessage='Update'\n                />\n            }\n            onConfirm={onUpdate}\n            onCancel={onCancel}\n        />\n    );\n};\n\nexport type MarketplaceItemPluginProps = {\n    id: string;\n    name: string;\n    description?: string;\n    version: string;\n    homepageUrl?: string;\n    releaseNotesUrl?: string;\n    labels?: MarketplaceLabel[];\n    iconData?: string;\n    installedVersion?: string;\n    installing: boolean;\n    error?: string;\n    isDefaultMarketplace: boolean;\n    trackEvent: (category: string, event: string, props?: unknown) => void;\n\n    actions: {\n        installPlugin: (category: string, event: string) => void;\n        closeMarketplaceModal: () => void;\n    };\n};\n\ntype MarketplaceItemState = {\n    showUpdateConfirmationModal: boolean;\n};\n\nexport default class MarketplaceItemPlugin extends React.PureComponent <MarketplaceItemPluginProps, MarketplaceItemState> {\n    constructor(props: MarketplaceItemPluginProps) {\n        super(props);\n\n        this.state = {\n            showUpdateConfirmationModal: false,\n        };\n    }\n\n    trackEvent = (eventName: string, allowDetail = true): void => {\n        if (this.props.isDefaultMarketplace && allowDetail) {\n            this.props.trackEvent('plugins', eventName, {\n                plugin_id: this.props.id,\n                version: this.props.version,\n                installed_version: this.props.installedVersion,\n            });\n        } else {\n            this.props.trackEvent('plugins', eventName);\n        }\n    }\n\n    showUpdateConfirmationModal = (): void => {\n        this.setState({showUpdateConfirmationModal: true});\n    }\n\n    hideUpdateConfirmationModal = (): void => {\n        this.setState({showUpdateConfirmationModal: false});\n    }\n\n    onInstall = (): void => {\n        this.trackEvent('ui_marketplace_download');\n        this.props.actions.installPlugin(this.props.id, this.props.version);\n    }\n\n    onConfigure = (): void => {\n        this.trackEvent('ui_marketplace_configure', false);\n\n        this.props.actions.closeMarketplaceModal();\n    }\n\n    onUpdate = (): void => {\n        this.trackEvent('ui_marketplace_download_update');\n\n        this.hideUpdateConfirmationModal();\n        this.props.actions.installPlugin(this.props.id, this.props.version);\n    }\n\n    getItemButton(): JSX.Element {\n        if (this.props.installedVersion !== '' && !this.props.installing && !this.props.error) {\n            return (\n                <Link\n                    to={'/admin_console/plugins/plugin_' + this.props.id}\n                >\n                    <button\n                        onClick={this.onConfigure}\n                        className='btn btn-outline'\n                    >\n                        <FormattedMessage\n                            id='marketplace_modal.list.configure'\n                            defaultMessage='Configure'\n                        />\n                    </button>\n                </Link>\n            );\n        }\n\n        let actionButton: JSX.Element;\n        if (this.props.error) {\n            actionButton = (\n                <FormattedMessage\n                    id='marketplace_modal.list.try_again'\n                    defaultMessage='Try Again'\n                />\n            );\n        } else {\n            actionButton = (\n                <FormattedMessage\n                    id='marketplace_modal.list.install'\n                    defaultMessage='Install'\n                />\n            );\n        }\n\n        return (\n            <button\n                onClick={this.onInstall}\n                className='btn btn-primary'\n                disabled={this.props.installing}\n            >\n                <LoadingWrapper\n                    loading={this.props.installing}\n                    text={localizeMessage('marketplace_modal.installing', 'Installing...')}\n                >\n                    {actionButton}\n                </LoadingWrapper>\n\n            </button>\n        );\n    }\n\n    render(): JSX.Element {\n        let version = `(${this.props.version})`;\n        if (this.props.installedVersion !== '') {\n            version = `(${this.props.installedVersion})`;\n        }\n\n        const versionLabel = <span className='light subtitle'>{version}</span>;\n\n        const updateDetails = (\n            <UpdateDetails\n                version={this.props.version}\n                installedVersion={this.props.installedVersion}\n                releaseNotesUrl={this.props.releaseNotesUrl}\n                isInstalling={this.props.installing}\n                onUpdate={this.showUpdateConfirmationModal}\n            />\n        );\n\n        return (\n            <>\n                <MarketplaceItem\n                    button={this.getItemButton()}\n                    versionLabel={versionLabel}\n                    updateDetails={updateDetails}\n                    iconSource={this.props.iconData}\n                    {...this.props}\n                />\n                <UpdateConfirmationModal\n                    show={this.state.showUpdateConfirmationModal}\n                    name={this.props.name}\n                    version={this.props.version}\n                    installedVersion={this.props.installedVersion}\n                    releaseNotesUrl={this.props.releaseNotesUrl}\n                    onUpdate={this.onUpdate}\n                    onCancel={this.hideUpdateConfirmationModal}\n                />\n            </>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {ActionCreatorsMapObject, bindActionCreators, Dispatch} from 'redux';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {GenericAction} from 'mattermost-redux/types/actions';\n\nimport {GlobalState} from 'types/store';\n\nimport {installPlugin} from 'actions/marketplace';\nimport {closeModal} from 'actions/views/modals';\nimport {ModalIdentifiers} from 'utils/constants';\nimport {getInstalling, getError} from 'selectors/views/marketplace';\nimport {trackEvent} from 'actions/telemetry_actions.jsx';\n\nimport MarketplaceItemPlugin, {MarketplaceItemPluginProps} from './marketplace_item_plugin';\n\ntype Props = {\n    id: string;\n}\n\nfunction mapStateToProps(state: GlobalState, props: Props) {\n    const installing = getInstalling(state, props.id);\n    const error = getError(state, props.id);\n    const isDefaultMarketplace = getConfig(state).IsDefaultMarketplace === 'true';\n\n    return {\n        installing,\n        error,\n        isDefaultMarketplace,\n        trackEvent,\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject, MarketplaceItemPluginProps['actions']>({\n            installPlugin,\n            closeMarketplaceModal: () => closeModal(ModalIdentifiers.PLUGIN_MARKETPLACE),\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MarketplaceItemPlugin);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {FormattedMessage} from 'react-intl';\n\nimport type {MarketplaceLabel} from '@mattermost/types/marketplace';\n\nimport MarketplaceItem from '../marketplace_item';\nimport LoadingWrapper from 'components/widgets/loading/loading_wrapper';\n\nimport {localizeMessage} from 'utils/utils';\n\nexport type MarketplaceItemAppProps = {\n    id: string;\n    name: string;\n    description?: string;\n    homepageUrl?: string;\n    iconURL?: string;\n\n    installed: boolean;\n    labels?: MarketplaceLabel[];\n\n    installing: boolean;\n    error?: string;\n\n    trackEvent: (category: string, event: string, props?: unknown) => void;\n\n    actions: {\n        installApp: (id: string) => Promise<boolean>;\n        closeMarketplaceModal: () => void;\n    };\n};\n\nexport default class MarketplaceItemApp extends React.PureComponent <MarketplaceItemAppProps> {\n    onInstall = (): void => {\n        this.props.trackEvent('plugins', 'ui_marketplace_install_app', {\n            app_id: this.props.id,\n        });\n\n        this.props.actions.installApp(this.props.id).then((res) => {\n            if (res) {\n                this.props.actions.closeMarketplaceModal();\n            }\n        });\n    }\n\n    getItemButton(): JSX.Element {\n        if (this.props.installed && !this.props.installing && !this.props.error) {\n            return (\n                <button\n                    className='btn btn-outline'\n                    disabled={true}\n                >\n                    <FormattedMessage\n                        id='marketplace_modal.list.installed'\n                        defaultMessage='Installed'\n                    />\n                </button>\n            );\n        }\n\n        let actionButton: JSX.Element;\n        if (this.props.error) {\n            actionButton = (\n                <FormattedMessage\n                    id='marketplace_modal.list.try_again'\n                    defaultMessage='Try Again'\n                />\n            );\n        } else {\n            actionButton = (\n                <FormattedMessage\n                    id='marketplace_modal.list.install'\n                    defaultMessage='Install'\n                />\n            );\n        }\n\n        return (\n            <button\n                onClick={this.onInstall}\n                className='btn btn-primary'\n                disabled={this.props.installing}\n            >\n                <LoadingWrapper\n                    loading={this.props.installing}\n                    text={localizeMessage('marketplace_modal.installing', 'Installing...')}\n                >\n                    {actionButton}\n                </LoadingWrapper>\n\n            </button>\n        );\n    }\n\n    render(): JSX.Element {\n        return (\n            <>\n                <MarketplaceItem\n                    button={this.getItemButton()}\n                    updateDetails={null}\n                    versionLabel={null}\n                    iconSource={this.props.iconURL}\n                    {...this.props}\n                />\n            </>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {ActionCreatorsMapObject, bindActionCreators, Dispatch} from 'redux';\n\nimport {GenericAction} from 'mattermost-redux/types/actions';\n\nimport {GlobalState} from 'types/store';\n\nimport {installApp} from 'actions/marketplace';\nimport {closeModal} from 'actions/views/modals';\nimport {trackEvent} from 'actions/telemetry_actions.jsx';\nimport {getInstalling, getError} from 'selectors/views/marketplace';\nimport {ModalIdentifiers} from 'utils/constants';\n\nimport MarketplaceItemApp, {MarketplaceItemAppProps} from './marketplace_item_app';\n\ntype Props = {\n    id: string;\n}\n\nfunction mapStateToProps(state: GlobalState, props: Props) {\n    const installing = getInstalling(state, props.id);\n    const error = getError(state, props.id);\n\n    return {\n        installing,\n        error,\n        trackEvent,\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject, MarketplaceItemAppProps['actions']>({\n            installApp,\n            closeMarketplaceModal: () => closeModal(ModalIdentifiers.PLUGIN_MARKETPLACE),\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MarketplaceItemApp);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\ntype NavigationButtonProps = {\n    onClick: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n    messageId: string;\n    defaultMessage: string;\n};\n\nexport default class NavigationButton extends React.PureComponent <NavigationButtonProps> {\n    onClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n        event.preventDefault();\n        this.props.onClick(event);\n    };\n\n    render(): JSX.Element {\n        const {onClick, messageId, defaultMessage} = this.props;\n        return (\n            <button\n                className='btn btn-link'\n                onClick={onClick}\n            >\n                <FormattedMessage\n                    id={messageId}\n                    defaultMessage={defaultMessage}\n                />\n            </button>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {changeOpacity, makeStyleFromTheme} from 'mattermost-redux/utils/theme_utils';\nimport {Theme} from 'mattermost-redux/types/themes';\n\nimport NavigationButton from './navigation_button';\n\nexport type NavigationRowProps = {\n    page: number;\n    total: number;\n    maximumPerPage: number;\n    onNextPageButtonClick: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n    onPreviousPageButtonClick: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n    theme: Theme;\n};\n\nexport default class NavigationRow extends React.PureComponent <NavigationRowProps> {\n    canShowNextButton = (): boolean => {\n        const {page, maximumPerPage, total} = this.props;\n        const totalPages = Math.trunc((total - 1) / maximumPerPage);\n\n        return totalPages > page;\n    };\n\n    renderCount = (): JSX.Element => {\n        const {page, total, maximumPerPage} = this.props;\n        const startCount = page * maximumPerPage;\n        const endCount = Math.min(startCount + maximumPerPage, total);\n\n        return (\n            <FormattedMessage\n                id='marketplace_list.count_total_page'\n                defaultMessage='{startCount, number} - {endCount, number} {total, plural, one {plugin} other {plugins}} of {total, number} total'\n                values={{\n                    startCount: startCount + 1,\n                    endCount,\n                    total,\n                }}\n            />\n        );\n    };\n\n    render(): JSX.Element {\n        const style = getStyle(this.props.theme);\n\n        return (\n            <div className='navigation-row'>\n                <div className='col-xs-2'>\n                    {(this.props.page > 0) && (\n                        <NavigationButton\n                            onClick={this.props.onPreviousPageButtonClick}\n                            messageId={'more_channels.prev'}\n                            defaultMessage={'Previous'}\n                        />\n                    )}\n                </div>\n                <div\n                    className='col-xs-8 count'\n                    style={style.count}\n                >\n                    {this.renderCount()}\n                </div>\n                <div className='col-xs-2'>\n                    {this.canShowNextButton() && (\n                        <NavigationButton\n                            onClick={this.props.onNextPageButtonClick}\n                            messageId={'more_channels.next'}\n                            defaultMessage={'Next'}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst getStyle = makeStyleFromTheme((theme) => {\n    return {\n        count: {\n            color: changeOpacity(theme.centerChannelColor, 0.6),\n        },\n    };\n});\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getTheme} from 'mattermost-redux/selectors/entities/preferences';\nimport {GlobalState} from '@mattermost/types/store';\n\nimport NavigationRow from './navigation_row';\n\nfunction mapStateToProps(state: GlobalState) {\n    return {\n        theme: getTheme(state),\n    };\n}\n\nexport default connect(mapStateToProps)(NavigationRow);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport type {MarketplaceApp, MarketplacePlugin} from '@mattermost/types/marketplace';\nimport {isPlugin, getName} from 'mattermost-redux/utils/marketplace';\n\nimport MarketplaceItemPlugin from '../marketplace_item/marketplace_item_plugin';\nimport MarketplaceItemApp from '../marketplace_item/marketplace_item_app';\n\nimport NavigationRow from './navigation_row';\n\nconst ITEMS_PER_PAGE = 15;\n\ntype MarketplaceListProps = {\n    listing: Array<MarketplacePlugin | MarketplaceApp>;\n};\n\ntype MarketplaceListState = {\n    page: number;\n};\n\nexport default class MarketplaceList extends React.PureComponent <MarketplaceListProps, MarketplaceListState> {\n    static getDerivedStateFromProps(props: MarketplaceListProps, state: MarketplaceListState): MarketplaceListState | null {\n        if (state.page > 0 && props.listing.length < ITEMS_PER_PAGE) {\n            return {page: 0};\n        }\n\n        return null;\n    }\n\n    constructor(props: MarketplaceListProps) {\n        super(props);\n\n        this.state = {\n            page: 0,\n        };\n    }\n\n    nextPage = (): void => {\n        this.setState((state) => ({\n            page: state.page + 1,\n        }));\n    };\n\n    previousPage = (): void => {\n        this.setState((state) => ({\n            page: state.page - 1,\n        }));\n    };\n\n    render(): JSX.Element {\n        const pageStart = this.state.page * ITEMS_PER_PAGE;\n        const pageEnd = pageStart + ITEMS_PER_PAGE;\n\n        this.props.listing.sort((a, b) => {\n            return getName(a).localeCompare(getName(b));\n        });\n\n        const itemsToDisplay = this.props.listing.slice(pageStart, pageEnd);\n\n        return (\n            <div className='more-modal__list'>\n                {itemsToDisplay.map((i) => {\n                    if (isPlugin(i)) {\n                        return (\n                            <MarketplaceItemPlugin\n                                key={i.manifest.id}\n                                id={i.manifest.id}\n                                name={i.manifest.name}\n                                description={i.manifest.description}\n                                version={i.manifest.version}\n                                homepageUrl={i.homepage_url}\n                                releaseNotesUrl={i.release_notes_url}\n                                labels={i.labels}\n                                iconData={i.icon_data}\n                                installedVersion={i.installed_version}\n                            />\n                        );\n                    }\n\n                    return (\n                        <MarketplaceItemApp\n                            key={i.manifest.app_id}\n                            id={i.manifest.app_id}\n                            name={i.manifest.display_name}\n                            description={i.manifest.description}\n                            homepageUrl={i.manifest.homepage_url}\n                            iconURL={i.icon_url}\n                            installed={i.installed}\n                            labels={i.labels}\n                        />\n                    );\n                })\n                }\n                <NavigationRow\n                    page={this.state.page}\n                    total={this.props.listing.length}\n                    maximumPerPage={ITEMS_PER_PAGE}\n                    onNextPageButtonClick={this.nextPage}\n                    onPreviousPageButtonClick={this.previousPage}\n                />\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport debounce from 'lodash/debounce';\nimport {Tabs, Tab, SelectCallback} from 'react-bootstrap';\n\nimport {PluginStatusRedux} from '@mattermost/types/plugins';\nimport type {MarketplaceApp, MarketplacePlugin} from '@mattermost/types/marketplace';\n\nimport FullScreenModal from 'components/widgets/modals/full_screen_modal';\nimport RootPortal from 'components/root_portal';\nimport QuickInput from 'components/quick_input';\nimport LocalizedInput from 'components/localized_input/localized_input';\nimport PluginIcon from 'components/widgets/icons/plugin_icon';\nimport LoadingScreen from 'components/loading_screen';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nimport {trackEvent} from 'actions/telemetry_actions.jsx';\nimport {t} from 'utils/i18n';\nimport {localizeMessage} from 'utils/utils';\n\nimport './marketplace_modal.scss';\nimport MarketplaceList from './marketplace_list/marketplace_list';\n\nconst MarketplaceTabs = {\n    ALL_LISTING: 'allListing',\n    INSTALLED_LISTING: 'installed',\n};\n\nconst SEARCH_TIMEOUT_MILLISECONDS = 200;\n\ntype AllListingProps = {\n    listing: Array<MarketplacePlugin | MarketplaceApp>;\n};\n\n// AllListing renders the contents of the all listing tab.\nexport const AllListing = ({listing}: AllListingProps): JSX.Element => {\n    if (listing.length === 0) {\n        return (\n            <div className='no_plugins_div'>\n                <br/>\n                <PluginIcon className='icon__plugin'/>\n                <div className='mt-3 light'>\n                    <FormattedMessage\n                        id='marketplace_modal.no_plugins'\n                        defaultMessage='There are no plugins available at this time.'\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    return <MarketplaceList listing={listing}/>;\n};\n\ntype InstalledListingProps = {\n    installedItems: Array<MarketplacePlugin | MarketplaceApp>;\n    changeTab: SelectCallback;\n};\n\n// InstalledListing renders the contents of the installed listing tab.\nexport const InstalledListing = ({installedItems, changeTab}: InstalledListingProps): JSX.Element => {\n    if (installedItems.length === 0) {\n        return (\n            <div className='no_plugins_div'>\n                <br/>\n                <PluginIcon className='icon__plugin'/>\n                <div className='mt-3 light'>\n                    <FormattedMessage\n                        id='marketplace_modal.no_plugins_installed'\n                        defaultMessage='You do not have any plugins installed.'\n                    />\n                </div>\n                <button\n                    className='mt-5 style--none color--link'\n                    onClick={() => changeTab(MarketplaceTabs.ALL_LISTING)}\n                    data-testid='Install-Plugins-button'\n                >\n                    <FormattedMessage\n                        id='marketplace_modal.install_plugins'\n                        defaultMessage='Install Plugins'\n                    />\n                </button>\n            </div>\n        );\n    }\n\n    return <MarketplaceList listing={installedItems}/>;\n};\n\nexport type MarketplaceModalProps = {\n    show: boolean;\n    listing: Array<MarketplacePlugin | MarketplaceApp>;\n    installedListing: Array<MarketplacePlugin | MarketplaceApp>;\n    siteURL: string;\n    pluginStatuses?: Record<string, PluginStatusRedux>;\n    firstAdminVisitMarketplaceStatus: boolean;\n    actions: {\n        closeModal: () => void;\n        fetchListing(localOnly?: boolean): Promise<{error?: Error}>;\n        filterListing(filter: string): Promise<{error?: Error}>;\n        setFirstAdminVisitMarketplaceStatus: () => void;\n    };\n};\n\ntype MarketplaceModalState = {\n    tabKey: unknown;\n    loading: boolean;\n    serverError?: Error;\n    filter: string;\n};\n\n// MarketplaceModal is the marketplace modal.\nexport default class MarketplaceModal extends React.PureComponent<MarketplaceModalProps, MarketplaceModalState> {\n    private filterRef: React.RefObject<HTMLInputElement>;\n\n    constructor(props: MarketplaceModalProps) {\n        super(props);\n\n        this.state = {\n            tabKey: MarketplaceTabs.ALL_LISTING,\n            loading: true,\n            serverError: undefined,\n            filter: '',\n        };\n\n        this.filterRef = React.createRef();\n    }\n\n    componentDidMount(): void {\n        trackEvent('plugins', 'ui_marketplace_opened');\n\n        this.fetchListing();\n        if (!this.props.firstAdminVisitMarketplaceStatus) {\n            trackEvent('plugins', 'ui_first_admin_visit_marketplace_status');\n\n            this.props.actions.setFirstAdminVisitMarketplaceStatus();\n        }\n\n        this.filterRef.current?.focus();\n    }\n\n    componentDidUpdate(prevProps: MarketplaceModalProps): void {\n        // Automatically refresh the component when a plugin is installed or uninstalled.\n        if (this.props.pluginStatuses !== prevProps.pluginStatuses) {\n            this.fetchListing();\n        }\n    }\n\n    fetchListing = async (): Promise<void> => {\n        const {error} = await this.props.actions.fetchListing();\n        this.setState({loading: false, serverError: error});\n    }\n\n    close = (): void => {\n        trackEvent('plugins', 'ui_marketplace_closed');\n        this.props.actions.closeModal();\n    }\n\n    changeTab: SelectCallback = (tabKey: any): void => {\n        this.setState({tabKey});\n    }\n\n    onInput = (): void => {\n        if (this.filterRef.current) {\n            this.setState({filter: this.filterRef.current.value});\n\n            this.debouncedSearch();\n        }\n    }\n\n    handleClearSearch = (): void => {\n        if (this.filterRef.current) {\n            this.filterRef.current.value = '';\n            this.setState({filter: this.filterRef.current.value}, this.doSearch);\n        }\n    }\n\n    doSearch = async (): Promise<void> => {\n        trackEvent('plugins', 'ui_marketplace_search', {filter: this.state.filter});\n\n        const {error} = await this.props.actions.filterListing(this.state.filter);\n\n        this.setState({serverError: error});\n    }\n\n    debouncedSearch = debounce(this.doSearch, SEARCH_TIMEOUT_MILLISECONDS);\n\n    render(): JSX.Element {\n        const input = (\n            <div className='filter-row filter-row--full'>\n                <div className='col-sm-12'>\n                    <QuickInput\n                        id='searchMarketplaceTextbox'\n                        ref={this.filterRef}\n                        className='form-control filter-textbox search_input'\n                        placeholder={{id: t('marketplace_modal.search'), defaultMessage: 'Search Marketplace'}}\n                        inputComponent={LocalizedInput}\n                        onInput={this.onInput}\n                        value={this.state.filter}\n                        clearable={true}\n                        onClear={this.handleClearSearch}\n                    />\n                </div>\n            </div>\n        );\n\n        let errorBanner = null;\n        if (this.state.serverError) {\n            errorBanner = (\n                <div\n                    className='error-bar'\n                    id='error_bar'\n                >\n                    <div className='error-bar__content'>\n                        <FormattedMarkdownMessage\n                            id='app.plugin.marketplace_plugins.app_error'\n                            defaultMessage='Error connecting to the marketplace server. Please check your settings in the [System Console]({siteURL}/admin_console/plugins/plugin_management).'\n                            values={{siteURL: this.props.siteURL}}\n                        />\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <RootPortal>\n                <FullScreenModal\n                    show={this.props.show}\n                    onClose={this.close}\n                    ariaLabel={localizeMessage('marketplace_modal.title', 'Marketplace')}\n                >\n                    {errorBanner}\n                    <div\n                        className='modal-marketplace'\n                        id='modal_marketplace'\n                    >\n                        <h1>\n                            <strong>\n                                <FormattedMessage\n                                    id='marketplace_modal.title'\n                                    defaultMessage='Marketplace'\n                                />\n                            </strong>\n                        </h1>\n                        {input}\n                        <Tabs\n                            id='marketplaceTabs'\n                            className='tabs'\n                            defaultActiveKey={MarketplaceTabs.ALL_LISTING}\n                            activeKey={this.state.tabKey}\n                            onSelect={this.changeTab}\n                            unmountOnExit={true}\n                        >\n                            <Tab\n                                eventKey={MarketplaceTabs.ALL_LISTING}\n                                title={localizeMessage('marketplace_modal.tabs.all_listing', 'All')}\n                            >\n                                {this.state.loading ? <LoadingScreen/> : <AllListing listing={this.props.listing}/>}\n                            </Tab>\n                            <Tab\n                                eventKey={MarketplaceTabs.INSTALLED_LISTING}\n                                title={localizeMessage('marketplace_modal.tabs.installed_listing', 'Installed') + ` (${this.props.installedListing.length})`}\n                            >\n                                <InstalledListing\n                                    installedItems={this.props.installedListing}\n                                    changeTab={this.changeTab}\n                                />\n                            </Tab>\n                        </Tabs>\n                    </div>\n                </FullScreenModal>\n            </RootPortal>\n        );\n    }\n}\n"],"names":["React","classNames","OverlayTrigger","Tooltip","PluginIcon","Constants","Label","name","description","url","color","tag","backgroundColor","toUpperCase","label","OVERLAY_TIME_DELAY","toLowerCase","MarketplaceItem","PureComponent","render","icon","props","iconSource","labels","length","map","pluginDetailsInner","versionLabel","error_text","error","pluginDetails","homepageUrl","item_error","id","updateDetails","button","semver","FormattedMessage","Link","FormattedMarkdownMessage","ConfirmModal","LoadingWrapper","localizeMessage","UpdateVersion","version","releaseNotesUrl","UpdateDetails","installedVersion","isInstalling","onUpdate","isUpdate","gt","e","UpdateConfirmationModal","show","onCancel","messages","push","sameMajorVersion","major","MarketplaceItemPlugin","constructor","eventName","allowDetail","isDefaultMarketplace","trackEvent","plugin_id","installed_version","setState","showUpdateConfirmationModal","actions","installPlugin","closeMarketplaceModal","hideUpdateConfirmationModal","state","getItemButton","installing","onConfigure","actionButton","onInstall","iconData","connect","bindActionCreators","getConfig","closeModal","ModalIdentifiers","getInstalling","getError","mapStateToProps","IsDefaultMarketplace","mapDispatchToProps","dispatch","PLUGIN_MARKETPLACE","MarketplaceItemApp","app_id","installApp","then","res","installed","iconURL","NavigationButton","event","preventDefault","onClick","messageId","defaultMessage","changeOpacity","makeStyleFromTheme","NavigationRow","page","maximumPerPage","total","totalPages","Math","trunc","startCount","endCount","min","style","getStyle","theme","onPreviousPageButtonClick","count","renderCount","canShowNextButton","onNextPageButtonClick","centerChannelColor","getTheme","isPlugin","getName","ITEMS_PER_PAGE","MarketplaceList","getDerivedStateFromProps","listing","pageStart","pageEnd","sort","a","b","localeCompare","itemsToDisplay","slice","i","manifest","homepage_url","release_notes_url","icon_data","display_name","icon_url","nextPage","previousPage","debounce","Tabs","Tab","FullScreenModal","RootPortal","QuickInput","LocalizedInput","LoadingScreen","t","MarketplaceTabs","ALL_LISTING","INSTALLED_LISTING","SEARCH_TIMEOUT_MILLISECONDS","AllListing","InstalledListing","installedItems","changeTab","MarketplaceModal","fetchListing","loading","serverError","tabKey","filterRef","current","filter","value","debouncedSearch","doSearch","filterListing","undefined","createRef","componentDidMount","firstAdminVisitMarketplaceStatus","setFirstAdminVisitMarketplaceStatus","focus","componentDidUpdate","prevProps","pluginStatuses","input","onInput","handleClearSearch","errorBanner","siteURL","close","installedListing"],"sourceRoot":""}