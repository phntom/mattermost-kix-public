{"version":3,"file":"422.8b726be56930203b6cb9.js","mappings":"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","sources":["webpack://@mattermost/webapp/./images/deep-linking/deeplinking-desktop-img.png","webpack://@mattermost/webapp/./images/deep-linking/deeplinking-mobile-img.png","webpack://@mattermost/webapp/./images/logo.svg","webpack://@mattermost/webapp/./components/linking_landing_page/linking_landing_page.tsx","webpack://@mattermost/webapp/./components/linking_landing_page/index.tsx","webpack://@mattermost/webapp/./components/widgets/icons/checkbox_checked_icon.tsx"],"sourcesContent":["export default __webpack_public_path__ + \"files/34c82b247a366d047105491d979556bf.png\";","export default __webpack_public_path__ + \"files/9b0519e1f5fbf82b0548515994fd49d4.png\";","export default __webpack_public_path__ + \"files/17a50e2f200ecc8c4a58557603654d89.svg\";","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {PureComponent} from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport desktopImg from 'images/deep-linking/deeplinking-desktop-img.png';\nimport mobileImg from 'images/deep-linking/deeplinking-mobile-img.png';\nimport MattermostLogoSvg from 'images/logo.svg';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\nimport CheckboxCheckedIcon from 'components/widgets/icons/checkbox_checked_icon';\nimport BrowserStore from 'stores/browser_store';\nimport {LandingPreferenceTypes} from 'utils/constants';\nimport * as Utils from 'utils/utils';\n\nimport * as UserAgent from 'utils/user_agent';\n\ntype Props = {\n    defaultTheme: any;\n    desktopAppLink?: string;\n    iosAppLink?: string;\n    androidAppLink?: string;\n    siteUrl?: string;\n    siteName?: string;\n    brandImageUrl?: string;\n    enableCustomBrand: boolean;\n}\n\ntype State = {\n    rememberChecked: boolean;\n    redirectPage: boolean;\n    location: string;\n    nativeLocation: string;\n    brandImageError: boolean;\n    navigating: boolean;\n}\n\nexport default class LinkingLandingPage extends PureComponent<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        const location = window.location.href.replace('/landing#', '');\n\n        this.state = {\n            rememberChecked: false,\n            redirectPage: false,\n            location,\n            nativeLocation: location.replace(/^(https|http)/, 'mattermost'),\n            brandImageError: false,\n            navigating: false,\n        };\n\n        if (Utils.isMobile() && !BrowserStore.hasSeenLandingPage()) {\n            BrowserStore.setLandingPageSeen(true);\n        }\n    }\n\n    componentDidMount() {\n        Utils.applyTheme(this.props.defaultTheme);\n        if (this.checkLandingPreferenceApp()) {\n            this.openMattermostApp();\n        }\n\n        window.addEventListener('beforeunload', this.clearLandingPreferenceIfNotChecked);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('beforeunload', this.clearLandingPreferenceIfNotChecked);\n    }\n\n    clearLandingPreferenceIfNotChecked = () => {\n        if (!this.state.navigating && !this.state.rememberChecked) {\n            BrowserStore.clearLandingPreference(this.props.siteUrl);\n        }\n    }\n\n    checkLandingPreferenceBrowser = () => {\n        const landingPreference = BrowserStore.getLandingPreference(this.props.siteUrl);\n        return landingPreference && landingPreference === LandingPreferenceTypes.BROWSER;\n    }\n\n    checkLandingPreferenceApp = () => {\n        const landingPreference = BrowserStore.getLandingPreference(this.props.siteUrl);\n        return landingPreference && landingPreference === LandingPreferenceTypes.MATTERMOSTAPP;\n    }\n\n    handleChecked = () => {\n        // If it was checked, and now we're unchecking it, clear the preference\n        if (this.state.rememberChecked) {\n            BrowserStore.clearLandingPreference(this.props.siteUrl);\n        }\n        this.setState({rememberChecked: !this.state.rememberChecked});\n    }\n\n    setPreference = (pref: string, clearIfNotChecked?: boolean) => {\n        if (!this.state.rememberChecked) {\n            if (clearIfNotChecked) {\n                BrowserStore.clearLandingPreference(this.props.siteUrl);\n            }\n            return;\n        }\n\n        switch (pref) {\n        case LandingPreferenceTypes.MATTERMOSTAPP:\n            BrowserStore.setLandingPreferenceToMattermostApp(this.props.siteUrl);\n            break;\n        case LandingPreferenceTypes.BROWSER:\n            BrowserStore.setLandingPreferenceToBrowser(this.props.siteUrl);\n            break;\n        default:\n            break;\n        }\n    }\n\n    openMattermostApp = () => {\n        this.setPreference(LandingPreferenceTypes.MATTERMOSTAPP);\n        this.setState({redirectPage: true});\n        window.location.href = this.state.nativeLocation;\n    }\n\n    openInBrowser = () => {\n        this.setPreference(LandingPreferenceTypes.BROWSER);\n        window.location.href = this.state.location;\n    }\n\n    renderSystemDialogMessage = () => {\n        const isMobile = UserAgent.isMobile();\n\n        if (isMobile) {\n            return (\n                <FormattedMessage\n                    id='get_app.systemDialogMessageMobile'\n                    defaultMessage='View in App'\n                />\n            );\n        }\n\n        return (\n            <FormattedMessage\n                id='get_app.systemDialogMessage'\n                defaultMessage='View in Desktop App'\n            />\n        );\n    }\n\n    renderGoNativeAppMessage = () => {\n        return (\n            <a\n                href={Utils.isMobile() ? '#' : this.state.nativeLocation}\n                onMouseDown={() => {\n                    this.setPreference(LandingPreferenceTypes.MATTERMOSTAPP, true);\n                }}\n                onClick={() => {\n                    this.setPreference(LandingPreferenceTypes.MATTERMOSTAPP, true);\n                    this.setState({redirectPage: true, navigating: true});\n                    if (Utils.isMobile()) {\n                        if (UserAgent.isAndroidWeb()) {\n                            const timeout = setTimeout(() => {\n                                window.location.replace(this.getDownloadLink()!);\n                            }, 2000);\n                            window.addEventListener('blur', () => {\n                                clearTimeout(timeout);\n                            });\n                        }\n                        window.location.replace(this.state.nativeLocation);\n                    }\n                }}\n                className='btn btn-primary btn-lg get-app__download'\n            >\n                {this.renderSystemDialogMessage()}\n            </a>\n        );\n    }\n\n    getDownloadLink = () => {\n        if (UserAgent.isIosWeb()) {\n            return this.props.iosAppLink;\n        } else if (UserAgent.isAndroidWeb()) {\n            return this.props.androidAppLink;\n        }\n\n        return this.props.desktopAppLink;\n    }\n\n    handleBrandImageError = () => {\n        this.setState({brandImageError: true});\n    }\n\n    renderCheckboxIcon = () => {\n        if (this.state.rememberChecked) {\n            return (\n                <CheckboxCheckedIcon/>\n            );\n        }\n\n        return null;\n    }\n\n    renderGraphic = () => {\n        const isMobile = UserAgent.isMobile();\n\n        if (isMobile) {\n            return (\n                <img src={mobileImg}/>\n            );\n        }\n\n        return (\n            <img src={desktopImg}/>\n        );\n    }\n\n    renderDownloadLinkText = () => {\n        const isMobile = UserAgent.isMobile();\n\n        if (isMobile) {\n            return (\n                <FormattedMessage\n                    id='get_app.dontHaveTheMobileApp'\n                    defaultMessage={'Don\\'t have the Mobile App?'}\n                />\n            );\n        }\n\n        return (\n            <FormattedMessage\n                id='get_app.dontHaveTheDesktopApp'\n                defaultMessage={'Don\\'t have the Desktop App?'}\n            />\n        );\n    }\n\n    renderDownloadLinkSection = () => {\n        const downloadLink = this.getDownloadLink();\n\n        if (this.state.redirectPage) {\n            return (\n                <div className='get-app__download-link'>\n                    <FormattedMarkdownMessage\n                        id='get_app.openLinkInBrowser'\n                        defaultMessage='Or, [open this link in your browser.](!{link})'\n                        values={{\n                            link: this.state.location,\n                        }}\n                    />\n                </div>\n            );\n        } else if (downloadLink) {\n            return (\n                <div className='get-app__download-link'>\n                    {this.renderDownloadLinkText()}\n                    {'\\u00A0'}\n                    <br/>\n                    <a href={downloadLink}>\n                        <FormattedMessage\n                            id='get_app.downloadTheAppNow'\n                            defaultMessage='Download the app now.'\n                        />\n                    </a>\n                </div>\n            );\n        }\n\n        return null;\n    }\n\n    renderDialogHeader = () => {\n        const downloadLink = this.getDownloadLink();\n        const isMobile = UserAgent.isMobile();\n\n        let openingLink = (\n            <FormattedMessage\n                id='get_app.openingLink'\n                defaultMessage='Opening link in Mattermost...'\n            />\n        );\n        if (this.props.enableCustomBrand) {\n            openingLink = (\n                <FormattedMessage\n                    id='get_app.openingLinkWhiteLabel'\n                    defaultMessage='Opening link in {appName}...'\n                    values={{\n                        appName: this.props.siteName || 'Mattermost',\n                    }}\n                />\n            );\n        }\n\n        if (this.state.redirectPage) {\n            return (\n                <h1 className='get-app__launching'>\n                    {openingLink}\n                    <div className={`get-app__alternative${this.state.redirectPage ? ' redirect-page' : ''}`}>\n                        <FormattedMessage\n                            id='get_app.redirectedInMoments'\n                            defaultMessage='You will be redirected in a few moments.'\n                        />\n                        <br/>\n                        {this.renderDownloadLinkText()}\n                        {'\\u00A0'}\n                        <br className='mobile-only'/>\n                        <a href={downloadLink}>\n                            <FormattedMessage\n                                id='get_app.downloadTheAppNow'\n                                defaultMessage='Download the app now.'\n                            />\n                        </a>\n                    </div>\n                </h1>\n            );\n        }\n\n        let viewApp = (\n            <FormattedMessage\n                id='get_app.ifNothingPrompts'\n                defaultMessage='You can view {siteName} in the desktop app or continue in your web browser.'\n                values={{\n                    siteName: this.props.enableCustomBrand ? '' : ' Mattermost',\n                }}\n            />\n        );\n        if (isMobile) {\n            viewApp = (\n                <FormattedMessage\n                    id='get_app.ifNothingPromptsMobile'\n                    defaultMessage='You can view {siteName} in the mobile app or continue in your web browser.'\n                    values={{\n                        siteName: this.props.enableCustomBrand ? '' : ' Mattermost',\n                    }}\n                />\n            );\n        }\n\n        return (\n            <div className='get-app__launching'>\n                <FormattedMessage\n                    id='get_app.launching'\n                    tagName='h1'\n                    defaultMessage='Where would you like to view this?'\n                />\n                <div className='get-app__alternative'>\n                    {viewApp}\n                </div>\n            </div>\n        );\n    }\n\n    renderDialogBody = () => {\n        if (this.state.redirectPage) {\n            return (\n                <div className='get-app__dialog-body'>\n                    {this.renderDialogHeader()}\n                    {this.renderDownloadLinkSection()}\n                </div>\n            );\n        }\n\n        return (\n            <div className='get-app__dialog-body'>\n                {this.renderDialogHeader()}\n                <div className='get-app__buttons'>\n                    <div className='get-app__status'>\n                        {this.renderGoNativeAppMessage()}\n                    </div>\n                    <div className='get-app__status'>\n                        <a\n                            href={this.state.location}\n                            onMouseDown={() => {\n                                this.setPreference(LandingPreferenceTypes.BROWSER, true);\n                            }}\n                            onClick={() => {\n                                this.setPreference(LandingPreferenceTypes.BROWSER, true);\n                                this.setState({navigating: true});\n                            }}\n                            className='btn btn-default btn-lg get-app__continue'\n                        >\n                            <FormattedMessage\n                                id='get_app.continueToBrowser'\n                                defaultMessage='View in Browser'\n                            />\n                        </a>\n                    </div>\n                </div>\n                <div className='get-app__preference'>\n                    <button\n                        className={`get-app__checkbox ${this.state.rememberChecked ? 'checked' : ''}`}\n                        onClick={this.handleChecked}\n                    >\n                        {this.renderCheckboxIcon()}\n                    </button>\n                    <FormattedMessage\n                        id='get_app.rememberMyPreference'\n                        defaultMessage='Remember my preference'\n                    />\n                </div>\n                {this.renderDownloadLinkSection()}\n            </div>\n        );\n    }\n\n    renderHeader = () => {\n        let header = (\n            <div className='get-app__header'>\n                <img\n                    src={MattermostLogoSvg}\n                    className='get-app__logo'\n                />\n            </div>\n        );\n        if (this.props.enableCustomBrand && this.props.brandImageUrl) {\n            let customLogo;\n            if (this.props.brandImageUrl && !this.state.brandImageError) {\n                customLogo = (\n                    <img\n                        src={this.props.brandImageUrl}\n                        onError={this.handleBrandImageError}\n                        className='get-app__custom-logo'\n                    />\n                );\n            }\n\n            header = (\n                <div className='get-app__header'>\n                    {customLogo}\n                    <div className='get-app__custom-site-name'>\n                        <span>{this.props.siteName}</span>\n                    </div>\n                </div>\n            );\n        }\n\n        return header;\n    }\n\n    render() {\n        const isMobile = UserAgent.isMobile();\n\n        if (this.checkLandingPreferenceBrowser()) {\n            this.openInBrowser();\n            return null;\n        }\n\n        return (\n            <div className='get-app'>\n                {this.renderHeader()}\n                <div className='get-app__dialog'>\n                    <div\n                        className={`get-app__graphic ${isMobile ? 'mobile' : ''}`}\n                    >\n                        {this.renderGraphic()}\n                    </div>\n                    {this.renderDialogBody()}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {Client4} from 'mattermost-redux/client';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getTheme} from 'mattermost-redux/selectors/entities/preferences';\n\nimport {GlobalState} from 'types/store';\n\nimport LinkingLandingPage from './linking_landing_page';\n\nfunction mapStateToProps(state: GlobalState) {\n    const config = getConfig(state);\n\n    return {\n        desktopAppLink: config.AppDownloadLink,\n        iosAppLink: config.IosAppDownloadLink,\n        androidAppLink: config.AndroidAppDownloadLink,\n        defaultTheme: getTheme(state),\n        siteUrl: config.SiteURL,\n        siteName: config.SiteName,\n        brandImageUrl: Client4.getBrandImageUrl('0'),\n        enableCustomBrand: config.EnableCustomBrand === 'true',\n    };\n}\n\nexport default connect(mapStateToProps)(LinkingLandingPage);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nexport default class CheckboxCheckedIcon extends React.PureComponent {\n    render() {\n        return (\n            <svg\n                width='18px'\n                height='18px'\n                viewBox='0 0 18 18'\n            >\n                <g\n                    id='Developer-Export'\n                    stroke='none'\n                    strokeWidth='1'\n                    fillRule='evenodd'\n                >\n                    <g\n                        transform='translate(-285.000000, -933.000000)'\n                        id='All-Team-Members'\n                    >\n                        <g transform='translate(245.000000, 698.000000)'>\n                            <g\n                                id='Channel-Administrators'\n                                transform='translate(0.000000, 106.000000)'\n                            >\n                                <g\n                                    id='data-table/column-1'\n                                    transform='translate(11.000000, 86.000000)'\n                                >\n                                    <g\n                                        id='row-checkbox---Public-Channels'\n                                        transform='translate(12.000000, 35.000000)'\n                                    >\n                                        <g\n                                            id='Stacked-Group'\n                                            transform='translate(0.000000, 5.000000)'\n                                        >\n                                            <g id='data-table/1st/row-checkbox-label-base'>\n                                                <g\n                                                    id='check-on-copy-11'\n                                                    transform='translate(14.000000, 0.000000)'\n                                                >\n                                                    <path\n                                                        d='M19,3 L5,3 C3.9,3 3,3.9 3,5 L3,19 C3,20.1 3.9,21 5,21 L19,21 C20.1,21 21,20.1 21,19 L21,5 C21,3.9 20.1,3 19,3 L19,3 Z M10,17 L5,12.1923077 L6.4,10.8461538 L10,14.3076923 L17.6,7 L19,8.34615385 L10,17 L10,17 Z'\n                                                        id='checkbox---checked'\n                                                    />\n                                                </g>\n                                            </g>\n                                        </g>\n                                    </g>\n                                </g>\n                            </g>\n                        </g>\n                    </g>\n                </g>\n            </svg>\n        );\n    }\n}\n"],"names":["React","PureComponent","FormattedMessage","desktopImg","mobileImg","MattermostLogoSvg","FormattedMarkdownMessage","CheckboxCheckedIcon","BrowserStore","LandingPreferenceTypes","Utils","UserAgent","LinkingLandingPage","constructor","props","state","navigating","rememberChecked","clearLandingPreference","siteUrl","landingPreference","getLandingPreference","BROWSER","MATTERMOSTAPP","setState","pref","clearIfNotChecked","setLandingPreferenceToMattermostApp","setLandingPreferenceToBrowser","setPreference","redirectPage","window","location","href","nativeLocation","isMobile","isAndroidWeb","timeout","setTimeout","replace","getDownloadLink","addEventListener","clearTimeout","renderSystemDialogMessage","isIosWeb","iosAppLink","androidAppLink","desktopAppLink","brandImageError","downloadLink","link","renderDownloadLinkText","openingLink","enableCustomBrand","appName","siteName","viewApp","renderDialogHeader","renderDownloadLinkSection","renderGoNativeAppMessage","handleChecked","renderCheckboxIcon","header","brandImageUrl","customLogo","handleBrandImageError","hasSeenLandingPage","setLandingPageSeen","componentDidMount","applyTheme","defaultTheme","checkLandingPreferenceApp","openMattermostApp","clearLandingPreferenceIfNotChecked","componentWillUnmount","removeEventListener","render","checkLandingPreferenceBrowser","openInBrowser","renderHeader","renderGraphic","renderDialogBody","connect","Client4","getConfig","getTheme","mapStateToProps","config","AppDownloadLink","IosAppDownloadLink","AndroidAppDownloadLink","SiteURL","SiteName","getBrandImageUrl","EnableCustomBrand"],"sourceRoot":""}