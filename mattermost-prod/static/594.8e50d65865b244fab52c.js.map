{"version":3,"file":"594.8e50d65865b244fab52c.js","mappings":"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","sources":["webpack://@mattermost/webapp/./components/common/back_button.tsx","webpack://@mattermost/webapp/./components/common/hocs/cloud/with_use_get_usage_deltas.tsx","webpack://@mattermost/webapp/./components/common/site_name_and_description.tsx","webpack://@mattermost/webapp/./components/create_team/components/display_name.tsx","webpack://@mattermost/webapp/./components/create_team/components/team_url/team_url.tsx","webpack://@mattermost/webapp/./components/create_team/components/team_url/index.ts","webpack://@mattermost/webapp/./components/create_team/create_team.tsx","webpack://@mattermost/webapp/./components/create_team/index.js","webpack://@mattermost/webapp/./images/logo.png"],"sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n\n    /**\n     * URL to return to\n     */\n    url: string;\n\n    className?: string;\n\n    /**\n     * onClick handler when user clicks back button\n     */\n    onClick?: React.EventHandler<React.MouseEvent>;\n}\n\nconst BackButton = ({url, className, onClick}: Props): JSX.Element => {\n    const {formatMessage} = useIntl();\n\n    return (\n        <div\n            id='back_button'\n            className={classNames('signup-header', className)}\n        >\n            <Link\n                onClick={onClick}\n                to={url}\n            >\n                <span\n                    id='back_button_icon'\n                    className='fa fa-1x fa-angle-left'\n                    title={formatMessage({id: 'generic_icons.back', defaultMessage: 'Back Icon'})}\n                />\n                <FormattedMessage\n                    id='web.header.back'\n                    defaultMessage='Back'\n                />\n            </Link>\n        </div>\n    );\n};\nBackButton.defaultProps = {\n    url: '/',\n};\n\nexport default BackButton;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {ComponentType} from 'react';\n\nimport useGetUsageDeltas from 'components/common/hooks/useGetUsageDeltas';\n\nfunction withUseGetUsageDelta<T>(WrappedComponent: ComponentType<T>) {\n    return (props: T) => {\n        const usageDeltas = useGetUsageDeltas();\n\n        return (\n            <WrappedComponent\n                usageDeltas={usageDeltas}\n                {...props}\n            />\n        );\n    };\n}\n\nexport default withUseGetUsageDelta;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\ntype Props = {\n    customDescriptionText?: string;\n    siteName: string;\n}\n\nexport default class SiteNameAndDescription extends React.PureComponent<Props> {\n    public static defaultProps: Partial<Props> = {\n        siteName: 'Mattermost',\n    }\n\n    public render(): JSX.Element {\n        const {\n            customDescriptionText,\n            siteName,\n        } = this.props;\n        let description = null;\n        if (customDescriptionText) {\n            description = customDescriptionText;\n        } else {\n            description = (\n                <FormattedMessage\n                    id='web.root.signup_info'\n                    defaultMessage='All team communication in one place, searchable and accessible anywhere'\n                />\n            );\n        }\n\n        return (\n            <React.Fragment>\n                <h1 id='site_name'>{siteName}</h1>\n                <h3\n                    id='site_description'\n                    className='color--light'\n                >\n                    {description}\n                </h3>\n            </React.Fragment>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n/* eslint-disable react/no-string-refs */\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Team} from '@mattermost/types/teams';\n\nimport {trackEvent} from 'actions/telemetry_actions.jsx';\nimport Constants from 'utils/constants';\nimport {cleanUpUrlable} from 'utils/url';\nimport logoImage from 'images/logo.png';\nimport NextIcon from 'components/widgets/icons/fa_next_icon';\n\ntype CreateTeamState = {\n    team?: Partial<Team>;\n    wizard: string;\n};\n\ntype Props = {\n\n    /*\n     * Object containing team's display_name and name\n     */\n    state: CreateTeamState;\n\n    /*\n     * Function that updates parent component with state props\n     */\n    updateParent: (state: CreateTeamState) => void;\n}\n\ntype State = {\n    teamDisplayName: string;\n    nameError?: React.ReactNode;\n}\n\nexport default class TeamSignupDisplayNamePage extends React.PureComponent<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            teamDisplayName: this.props.state.team?.display_name || '', // eslint-disable-line camelcase\n        };\n    }\n\n    componentDidMount(): void {\n        trackEvent('signup', 'signup_team_01_name');\n    }\n\n    submitNext = (e: React.MouseEvent): void => {\n        e.preventDefault();\n        trackEvent('display_name', 'click_next');\n        const displayName = this.state.teamDisplayName.trim();\n        if (!displayName) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.display_name.required'\n                    defaultMessage='This field is required'\n                />),\n            });\n            return;\n        } else if (displayName.length < Constants.MIN_TEAMNAME_LENGTH || displayName.length > Constants.MAX_TEAMNAME_LENGTH) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.display_name.charLength'\n                    defaultMessage='Name must be {min} or more characters up to a maximum of {max}. You can add a longer team description later.'\n                    values={{\n                        min: Constants.MIN_TEAMNAME_LENGTH,\n                        max: Constants.MAX_TEAMNAME_LENGTH,\n                    }}\n                />),\n            });\n            return;\n        }\n\n        const newState = this.props.state;\n        newState.wizard = 'team_url';\n        newState.team!.display_name = displayName;\n        newState.team!.name = cleanUpUrlable(displayName);\n        this.props.updateParent(newState);\n    }\n\n    handleFocus = (e: React.FocusEvent<HTMLInputElement>): void => {\n        e.preventDefault();\n        e.currentTarget.select();\n    }\n\n    handleDisplayNameChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        this.setState({teamDisplayName: e.target.value});\n    }\n\n    render(): React.ReactNode {\n        let nameError = null;\n        let nameDivClass = 'form-group';\n        if (this.state.nameError) {\n            nameError = <label className='control-label'>{this.state.nameError}</label>;\n            nameDivClass += ' has-error';\n        }\n\n        return (\n            <div>\n                <form>\n                    <img\n                        alt={'signup logo'}\n                        className='signup-team-logo'\n                        src={logoImage}\n                    />\n                    <h5>\n                        <FormattedMessage\n                            id='create_team.display_name.teamName'\n                            tagName='strong'\n                            defaultMessage='Team Name'\n                        />\n                    </h5>\n                    <div className={nameDivClass}>\n                        <div className='row'>\n                            <div className='col-sm-9'>\n                                <input\n                                    id='teamNameInput'\n                                    type='text'\n                                    className='form-control'\n                                    placeholder=''\n                                    maxLength={128}\n                                    value={this.state.teamDisplayName}\n                                    autoFocus={true}\n                                    onFocus={this.handleFocus}\n                                    onChange={this.handleDisplayNameChange}\n                                    spellCheck='false'\n                                />\n                            </div>\n                        </div>\n                        {nameError}\n                    </div>\n                    <div>\n                        <FormattedMessage\n                            id='create_team.display_name.nameHelp'\n                            defaultMessage='Name your team in any language. Your team name shows in menus and headings.'\n                        />\n                    </div>\n                    <button\n                        id='teamNameNextButton'\n                        type='submit'\n                        className='btn btn-primary mt-8'\n                        onClick={this.submitNext}\n                    >\n                        <FormattedMessage\n                            id='create_team.display_name.next'\n                            defaultMessage='Next'\n                        />\n                        <NextIcon/>\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n/* eslint-disable react/no-string-refs */\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n/* eslint-disable react/no-string-refs */\n\nimport React from 'react';\nimport {Button} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Team} from '@mattermost/types/teams';\nimport {Client4Error} from 'mattermost-redux/types/client4';\n\nimport {trackEvent} from 'actions/telemetry_actions.jsx';\n\nimport Constants from 'utils/constants';\nimport * as URL from 'utils/url';\nimport logoImage from 'images/logo.png';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport OverlayTrigger from 'components/overlay_trigger';\nimport Tooltip from 'components/tooltip';\n\ntype State = {\n    isLoading: boolean;\n    nameError: string | JSX.Element;\n    teamURL?: string;\n}\n\ntype Props = {\n\n    /*\n     * Object containing team's display_name and name\n     */\n    state: {team?: Partial<Team>; wizard: string};\n\n    /*\n     * Function that updates parent component with state props\n     */\n    updateParent: (state: Props['state']) => void;\n\n    /*\n     * Object with redux action creators\n     */\n    actions: {\n\n        /*\n         * Action creator to check if a team already exists\n         */\n        checkIfTeamExists: (teamName: string) => Promise<{exists: boolean}>;\n\n        /*\n     * Action creator to create a new team\n     */\n        createTeam: (team: Team) => Promise<{data: Team; error: Client4Error}>;\n    };\n    history: {\n        push(path: string): void;\n    };\n}\n\nexport default class TeamUrl extends React.PureComponent<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            nameError: '',\n            isLoading: false,\n            teamURL: props.state.team?.name,\n        };\n    }\n\n    public componentDidMount() {\n        trackEvent('signup', 'signup_team_02_url');\n    }\n\n    public submitBack = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n        e.preventDefault();\n        trackEvent('signup', 'click_back');\n        const newState = this.props.state;\n        newState.wizard = 'display_name';\n        this.props.updateParent(newState);\n    }\n\n    public submitNext = async (e: React.MouseEvent<Button, MouseEvent>) => {\n        e.preventDefault();\n        trackEvent('signup', 'click_finish');\n\n        const name = this.state.teamURL!.trim();\n        const cleanedName = URL.cleanUpUrlable(name);\n        const urlRegex = /^[a-z]+([a-z\\-0-9]+|(__)?)[a-z0-9]+$/g;\n        const {actions: {checkIfTeamExists, createTeam}} = this.props;\n\n        if (!name) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.required'\n                    defaultMessage='This field is required'\n                />),\n            });\n            return;\n        }\n\n        if (cleanedName.length < Constants.MIN_TEAMNAME_LENGTH || cleanedName.length > Constants.MAX_TEAMNAME_LENGTH) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.charLength'\n                    defaultMessage='Name must be {min} or more characters up to a maximum of {max}'\n                    values={{\n                        min: Constants.MIN_TEAMNAME_LENGTH,\n                        max: Constants.MAX_TEAMNAME_LENGTH,\n                    }}\n                />),\n            });\n            return;\n        }\n\n        if (cleanedName !== name || !urlRegex.test(name)) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.regex'\n                    defaultMessage=\"Use only lower case letters, numbers and dashes. Must start with a letter and can't end in a dash.\"\n                />),\n            });\n            return;\n        }\n\n        for (let index = 0; index < Constants.RESERVED_TEAM_NAMES.length; index++) {\n            if (cleanedName.indexOf(Constants.RESERVED_TEAM_NAMES[index]) === 0) {\n                this.setState({nameError: (\n                    <FormattedMarkdownMessage\n                        id='create_team.team_url.taken'\n                        defaultMessage='This URL [starts with a reserved word](!https://docs.mattermost.com/help/getting-started/creating-teams.html#team-url) or is unavailable. Please try another.'\n                    />),\n                });\n                return;\n            }\n        }\n\n        this.setState({isLoading: true});\n        const teamSignup = JSON.parse(JSON.stringify(this.props.state));\n        teamSignup.team.type = 'O';\n        teamSignup.team.name = name;\n\n        const checkIfTeamExistsData: { exists: boolean } = await checkIfTeamExists(name);\n        const exists = checkIfTeamExistsData.exists;\n\n        if (exists) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.unavailable'\n                    defaultMessage='This URL is taken or unavailable. Please try another.'\n                />),\n            });\n            this.setState({isLoading: false});\n            return;\n        }\n\n        const createTeamData: { data: Team; error: any } = await createTeam(teamSignup.team);\n        const data = createTeamData.data;\n        const error = createTeamData.error;\n\n        if (data) {\n            this.props.history.push('/' + data.name + '/channels/' + Constants.DEFAULT_CHANNEL);\n            trackEvent('signup', 'signup_team_03_complete');\n        } else if (error) {\n            this.setState({nameError: error.message});\n            this.setState({isLoading: false});\n        }\n    }\n\n    public handleFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n        e.preventDefault();\n        e.currentTarget.select();\n    }\n\n    public handleTeamURLInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({teamURL: e.target.value});\n    }\n\n    render() {\n        let nameError = null;\n        let nameDivClass = 'form-group';\n        if (this.state.nameError) {\n            nameError = <label className='control-label'>{this.state.nameError}</label>;\n            nameDivClass += ' has-error';\n        }\n\n        const title = `${URL.getSiteURL()}/`;\n        const urlTooltip = (\n            <Tooltip id='urlTooltip'>{title}</Tooltip>\n        );\n\n        let finishMessage = (\n            <FormattedMessage\n                id='create_team.team_url.finish'\n                defaultMessage='Finish'\n            />\n        );\n\n        if (this.state.isLoading) {\n            finishMessage = (\n                <FormattedMessage\n                    id='create_team.team_url.creatingTeam'\n                    defaultMessage='Creating team...'\n                />\n            );\n        }\n\n        return (\n            <div>\n                <form>\n                    <img\n                        alt={'signup team logo'}\n                        className='signup-team-logo'\n                        src={logoImage}\n                    />\n                    <h5>\n                        <FormattedMessage\n                            id='create_team.team_url.teamUrl'\n                            tagName='strong'\n                            defaultMessage='Team URL'\n                        />\n                    </h5>\n                    <div className={nameDivClass}>\n                        <div className='row'>\n                            <div className='col-sm-11'>\n                                <div className='input-group input-group--limit'>\n                                    <OverlayTrigger\n                                        delayShow={Constants.OVERLAY_TIME_DELAY}\n                                        placement='top'\n                                        overlay={urlTooltip}\n                                    >\n                                        <span className='input-group-addon'>\n                                            {title}\n                                        </span>\n                                    </OverlayTrigger>\n                                    <input\n                                        id='teamURLInput'\n                                        type='text'\n                                        className='form-control'\n                                        placeholder=''\n                                        maxLength={128}\n                                        value={this.state.teamURL}\n                                        autoFocus={true}\n                                        onFocus={this.handleFocus}\n                                        onChange={this.handleTeamURLInputChange}\n                                        spellCheck='false'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        {nameError}\n                    </div>\n                    <p>\n                        <FormattedMessage\n                            id='create_team.team_url.webAddress'\n                            defaultMessage='Choose the web address of your new team:'\n                        />\n                    </p>\n                    <ul className='color--light'>\n                        <li>\n                            <FormattedMessage\n                                id='create_team.team_url.hint1'\n                                defaultMessage='Short and memorable is best'\n                            />\n                        </li>\n                        <li>\n                            <FormattedMessage\n                                id='create_team.team_url.hint2'\n                                defaultMessage='Use lowercase letters, numbers and dashes'\n                            />\n                        </li>\n                        <li>\n                            <FormattedMessage\n                                id='create_team.team_url.hint3'\n                                defaultMessage=\"Must start with a letter and can't end in a dash\"\n                            />\n                        </li>\n                    </ul>\n                    <div className='mt-8'>\n                        <Button\n                            id='teamURLFinishButton'\n                            type='submit'\n                            bsStyle='primary'\n                            disabled={this.state.isLoading}\n                            onClick={(e: React.MouseEvent<Button, MouseEvent>) => this.submitNext(e)}\n                        >\n                            {finishMessage}\n                        </Button>\n                    </div>\n                    <div className='mt-8'>\n                        <a\n                            href='#'\n                            onClick={this.submitBack}\n                        >\n                            <FormattedMessage\n                                id='create_team.team_url.back'\n                                defaultMessage='Back to previous step'\n                            />\n                        </a>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n/* eslint-enable react/no-string-refs */\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {ActionCreatorsMapObject, bindActionCreators, Dispatch} from 'redux';\nimport {connect} from 'react-redux';\n\nimport {ActionFunc, GenericAction} from 'mattermost-redux/types/actions';\nimport {checkIfTeamExists, createTeam} from 'mattermost-redux/actions/teams';\n\nimport {Team} from '@mattermost/types/teams';\nimport {Client4Error} from 'mattermost-redux/types/client4';\n\nimport TeamUrl from './team_url';\n\ntype Actions = {\n    checkIfTeamExists: (teamName: string) => Promise<{exists: boolean}>;\n    createTeam: (team: Team) => Promise<{data: Team; error: Client4Error}>;\n};\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Actions>({\n            checkIfTeamExists,\n            createTeam,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(TeamUrl);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Route, Switch, Redirect, RouteComponentProps} from 'react-router-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Channel} from '@mattermost/types/channels';\nimport {CloudUsage} from '@mattermost/types/cloud';\nimport {Team} from '@mattermost/types/teams';\n\nimport AnnouncementBar from 'components/announcement_bar';\nimport BackButton from 'components/common/back_button';\nimport DisplayName from 'components/create_team/components/display_name';\nimport SiteNameAndDescription from 'components/common/site_name_and_description';\nimport TeamUrl from 'components/create_team/components/team_url';\n\ntype Props = {\n\n    /*\n   * Object containing information on the current team, used to define BackButton's url\n   */\n    currentTeam: Team;\n\n    /*\n   * Object containing information on the current selected channel, used to define BackButton's url\n   */\n    currentChannel: Channel;\n\n    /*\n    * String containing the custom branding's text\n    */\n    customDescriptionText: string;\n\n    /*\n   * String containing the custom branding's Site Name\n   */\n    siteName: string;\n\n    /*\n   * Object from react-router\n   */\n    match: {\n        url: string;\n    };\n\n    isCloud: boolean;\n    isFreeTrial: boolean;\n    usageDeltas: CloudUsage;\n};\n\ntype State = {\n    team?: Partial<Team>;\n    wizard: string;\n};\n\nexport default class CreateTeam extends React.PureComponent<Props & RouteComponentProps, State> {\n    public constructor(props: Props & RouteComponentProps) {\n        super(props);\n\n        this.state = {\n            team: {},\n            wizard: 'display_name',\n        };\n    }\n\n    public updateParent = (state: State) => {\n        this.setState(state);\n        this.props.history.push('/create_team/' + state.wizard);\n    };\n\n    render() {\n        const {\n            currentChannel,\n            currentTeam,\n            customDescriptionText,\n            match,\n            siteName,\n            isCloud,\n            isFreeTrial,\n            usageDeltas: {\n                teams: {\n                    active: usageDeltaTeams,\n                },\n            },\n        } = this.props;\n\n        const teamsLimitReached = usageDeltaTeams >= 0;\n        const createTeamRestricted = isCloud && !isFreeTrial && teamsLimitReached;\n\n        let url = '/select_team';\n        if (currentTeam) {\n            url = `/${currentTeam.name}`;\n            if (currentChannel) {\n                url += `/channels/${currentChannel.name}`;\n            }\n        }\n\n        return (\n            <div>\n                <AnnouncementBar/>\n                <BackButton url={url}/>\n                <div className='col-sm-12'>\n                    <div className='signup-team__container'>\n                        <SiteNameAndDescription\n                            customDescriptionText={customDescriptionText}\n                            siteName={siteName}\n                        />\n                        <div className='signup__content'>\n                            {createTeamRestricted ? (\n                                <>\n                                    <h5>\n                                        <FormattedMessage\n                                            id='create_team.createTeamRestricted.title'\n                                            tagName='strong'\n                                            defaultMessage='Professional feature'\n                                        />\n                                    </h5>\n                                    <div>\n                                        <FormattedMessage\n                                            id='create_team.createTeamRestricted.message'\n                                            defaultMessage='Your workspace plan has reached the limit on the number of teams. Create unlimited teams with a free 30-day trial. Contact your System Administrator.'\n                                        />\n                                    </div>\n                                </>\n                            ) : (\n                                <Switch>\n                                    <Route\n                                        path={`${this.props.match.url}/display_name`}\n                                        render={(props) => (\n                                            <DisplayName\n                                                state={this.state}\n                                                updateParent={this.updateParent}\n                                                {...props}\n                                            />\n                                        )}\n                                    />\n                                    <Route\n                                        path={`${this.props.match.url}/team_url`}\n                                        render={(props) => (\n                                            <TeamUrl\n                                                state={this.state}\n                                                updateParent={this.updateParent}\n                                                {...props}\n                                            />\n                                        )}\n                                    />\n                                    <Redirect to={`${match.url}/display_name`}/>\n                                </Switch>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\n\nimport {getConfig, getLicense} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentChannel} from 'mattermost-redux/selectors/entities/channels';\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\nimport {getCloudSubscription as selectCloudSubscription} from 'mattermost-redux/selectors/entities/cloud';\n\nimport withUseGetUsageDelta from 'components/common/hocs/cloud/with_use_get_usage_deltas';\nimport {isCloudLicense} from 'utils/license_utils';\n\nimport CreateTeam from './create_team';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const currentChannel = getCurrentChannel(state);\n    const currentTeam = getCurrentTeam(state);\n\n    const customDescriptionText = config.CustomDescriptionText;\n    const siteName = config.SiteName;\n\n    const subscription = selectCloudSubscription(state);\n    const license = getLicense(state);\n\n    const isCloud = isCloudLicense(license);\n    const isFreeTrial = subscription?.is_free_trial === 'true';\n\n    return {\n        currentChannel,\n        currentTeam,\n        customDescriptionText,\n        siteName,\n        isCloud,\n        isFreeTrial,\n    };\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    withUseGetUsageDelta,\n)(CreateTeam);\n","export default __webpack_public_path__ + \"files/ab8aa80cba445eb0fb75e6611c292567.png\";"],"names":["React","FormattedMessage","useIntl","Link","classNames","BackButton","url","className","onClick","formatMessage","id","defaultMessage","defaultProps","useGetUsageDeltas","withUseGetUsageDelta","WrappedComponent","props","usageDeltas","SiteNameAndDescription","PureComponent","render","customDescriptionText","siteName","description","trackEvent","Constants","cleanUpUrlable","logoImage","NextIcon","TeamSignupDisplayNamePage","constructor","e","preventDefault","displayName","state","teamDisplayName","trim","setState","nameError","length","MIN_TEAMNAME_LENGTH","MAX_TEAMNAME_LENGTH","min","max","newState","wizard","team","display_name","name","updateParent","currentTarget","select","target","value","componentDidMount","nameDivClass","handleFocus","handleDisplayNameChange","submitNext","Button","URL","FormattedMarkdownMessage","OverlayTrigger","Tooltip","TeamUrl","teamURL","cleanedName","urlRegex","actions","checkIfTeamExists","createTeam","test","index","RESERVED_TEAM_NAMES","indexOf","isLoading","teamSignup","JSON","parse","stringify","type","checkIfTeamExistsData","exists","createTeamData","data","error","history","push","DEFAULT_CHANNEL","message","title","getSiteURL","urlTooltip","finishMessage","OVERLAY_TIME_DELAY","handleTeamURLInputChange","submitBack","bindActionCreators","connect","mapDispatchToProps","dispatch","Route","Switch","Redirect","AnnouncementBar","DisplayName","CreateTeam","currentChannel","currentTeam","match","isCloud","isFreeTrial","teams","active","usageDeltaTeams","teamsLimitReached","createTeamRestricted","compose","getConfig","getLicense","getCurrentChannel","getCurrentTeam","getCloudSubscription","selectCloudSubscription","isCloudLicense","mapStateToProps","config","CustomDescriptionText","SiteName","subscription","license","is_free_trial"],"sourceRoot":""}