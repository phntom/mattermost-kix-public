{"version":3,"file":"665.3792a7ecfc77cffd89fc.js","mappings":"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","sources":["webpack://@mattermost/webapp/./actions/views/mfa.js","webpack://@mattermost/webapp/./components/common/back_button.tsx","webpack://@mattermost/webapp/./components/mfa/setup/setup.tsx","webpack://@mattermost/webapp/./components/mfa/setup/index.ts","webpack://@mattermost/webapp/./components/mfa/confirm.tsx","webpack://@mattermost/webapp/./components/mfa/mfa_controller/mfa_controller.tsx","webpack://@mattermost/webapp/./components/mfa/mfa_controller/index.ts","webpack://@mattermost/webapp/./components/widgets/icons/fa_logout_icon.tsx","webpack://@mattermost/webapp/./images/logo.png"],"sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport * as UserActions from 'mattermost-redux/actions/users';\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\n\nexport function activateMfa(code) {\n    return (dispatch, getState) => {\n        const currentUserId = getCurrentUserId(getState());\n\n        return dispatch(UserActions.updateUserMfa(currentUserId, true, code));\n    };\n}\n\nexport function deactivateMfa() {\n    return (dispatch, getState) => {\n        const currentUserId = getCurrentUserId(getState());\n\n        return dispatch(UserActions.updateUserMfa(currentUserId, false));\n    };\n}\n\nexport function generateMfaSecret() {\n    return (dispatch, getState) => {\n        const currentUserId = getCurrentUserId(getState());\n\n        return dispatch(UserActions.generateMfaSecret(currentUserId));\n    };\n}\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n\n    /**\n     * URL to return to\n     */\n    url: string;\n\n    className?: string;\n\n    /**\n     * onClick handler when user clicks back button\n     */\n    onClick?: React.EventHandler<React.MouseEvent>;\n}\n\nconst BackButton = ({url, className, onClick}: Props): JSX.Element => {\n    const {formatMessage} = useIntl();\n\n    return (\n        <div\n            id='back_button'\n            className={classNames('signup-header', className)}\n        >\n            <Link\n                onClick={onClick}\n                to={url}\n            >\n                <span\n                    id='back_button_icon'\n                    className='fa fa-1x fa-angle-left'\n                    title={formatMessage({id: 'generic_icons.back', defaultMessage: 'Back Icon'})}\n                />\n                <FormattedMessage\n                    id='web.header.back'\n                    defaultMessage='Back'\n                />\n            </Link>\n        </div>\n    );\n};\nBackButton.defaultProps = {\n    url: '/',\n};\n\nexport default BackButton;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {UserProfile} from '@mattermost/types/users';\n\nimport * as Utils from 'utils/utils';\nimport {t} from 'utils/i18n';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport LocalizedInput from 'components/localized_input/localized_input';\n\ntype MFAControllerState = {\n    enforceMultifactorAuthentication: boolean;\n};\n\ntype Props = {\n\n    /*\n     * Object containing enforceMultifactorAuthentication\n     */\n    state: MFAControllerState;\n\n    /*\n     * Function that updates parent component with state props\n     */\n    updateParent: (state: MFAControllerState) => void;\n\n    currentUser: UserProfile;\n    siteName?: string;\n    enforceMultifactorAuthentication: boolean;\n    actions: {\n        activateMfa: (code: string) => Promise<{\n            error?: {\n                server_error_id: string;\n                message: string;\n            };\n        }>;\n        generateMfaSecret: () => Promise<{\n            data: {\n                secret: string;\n                qr_code: string;\n            };\n            error?: {\n                message: string;\n            };\n        }>;\n    };\n    history: {\n        push(path: string): void;\n    };\n}\n\ntype State = {\n    secret: string;\n    qrCode: string;\n    error?: any | null;\n    serverError?: string;\n}\n\nexport default class Setup extends React.PureComponent<Props, State> {\n    private input: React.RefObject<HTMLInputElement>;\n\n    public constructor(props: Props) {\n        super(props);\n\n        this.state = {secret: '', qrCode: ''};\n\n        this.input = React.createRef();\n    }\n\n    public componentDidMount(): void {\n        const user = this.props.currentUser;\n        if (!user || user.mfa_active) {\n            this.props.history.push('/');\n            return;\n        }\n\n        this.props.actions.generateMfaSecret().then(({data, error}) => {\n            if (error) {\n                this.setState({\n                    serverError: error.message,\n                });\n                return;\n            }\n\n            this.setState({\n                secret: data.secret,\n                qrCode: data.qr_code,\n            });\n        });\n    }\n\n    submit = (e: React.FormEvent<HTMLFormElement>): void => {\n        e.preventDefault();\n        const code = this.input?.current?.value.replace(/\\s/g, '');\n        if (!code || code.length === 0) {\n            this.setState({error: Utils.localizeMessage('mfa.setup.codeError', 'Please enter the code from Google Authenticator.')});\n            return;\n        }\n\n        this.setState({error: null});\n\n        this.props.actions.activateMfa(code).then(({error}) => {\n            if (error) {\n                if (error.server_error_id === 'ent.mfa.activate.authenticate.app_error') {\n                    this.setState({\n                        error: Utils.localizeMessage('mfa.setup.badCode', 'Invalid code. If this issue persists, contact your System Administrator.'),\n                    });\n                } else {\n                    this.setState({\n                        error: error.message,\n                    });\n                }\n\n                return;\n            }\n\n            this.props.history.push('/mfa/confirm');\n        });\n    }\n\n    public render(): JSX.Element {\n        let formClass = 'form-group';\n        let errorContent;\n        if (this.state.error) {\n            errorContent = <div className='form-group has-error'><label className='control-label'>{this.state.error}</label></div>;\n            formClass += ' has-error';\n        }\n\n        let mfaRequired;\n        if (this.props.enforceMultifactorAuthentication) {\n            mfaRequired = (\n                <p>\n                    <FormattedMarkdownMessage\n                        id='mfa.setup.required'\n                        defaultMessage='**Multi-factor authentication is required on {siteName}.**'\n                        values={{\n                            siteName: this.props.siteName,\n                        }}\n                    />\n                </p>\n            );\n        }\n\n        return (\n            <div>\n                <form\n                    onSubmit={this.submit}\n                    className={formClass}\n                >\n                    {mfaRequired}\n                    <p>\n                        <FormattedMarkdownMessage\n                            id='mfa.setup.step1'\n                            defaultMessage=\"**Step 1: **On your phone, download Google Authenticator from [iTunes](!https://itunes.apple.com/us/app/google-authenticator/id388497605?mt=8') or [Google Play](!https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2&hl=en)\"\n                        />\n                    </p>\n                    <p>\n                        <FormattedMarkdownMessage\n                            id='mfa.setup.step2'\n                            defaultMessage='**Step 2: **Use Google Authenticator to scan this QR code, or manually type in the secret key'\n                        />\n                    </p>\n                    <div className='form-group'>\n                        <div className='col-sm-12'>\n                            <img\n                                alt={'qr code image'}\n                                style={style.qrCode}\n                                src={'data:image/png;base64,' + this.state.qrCode}\n                            />\n                        </div>\n                    </div>\n                    <br/>\n                    <div className='form-group'>\n                        <p className='col-sm-12'>\n                            <FormattedMessage\n                                id='mfa.setup.secret'\n                                defaultMessage='Secret: {secret}'\n                                values={{\n                                    secret: this.state.secret,\n                                }}\n                            />\n                        </p>\n                    </div>\n                    <p>\n                        <FormattedMarkdownMessage\n                            id='mfa.setup.step3'\n                            defaultMessage='**Step 3: **Enter the code generated by Google Authenticator'\n                        />\n                    </p>\n                    <p>\n                        <LocalizedInput\n                            ref={this.input}\n                            className='form-control'\n                            placeholder={{id: t('mfa.setup.code'), defaultMessage: 'MFA Code'}}\n                            autoFocus={true}\n                        />\n                    </p>\n                    {errorContent}\n                    <button\n                        type='submit'\n                        className='btn btn-primary'\n                    >\n                        <FormattedMessage\n                            id='mfa.setup.save'\n                            defaultMessage='Save'\n                        />\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst style = {\n    qrCode: {maxHeight: 170},\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch, ActionCreatorsMapObject} from 'redux';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\nimport {GlobalState} from '@mattermost/types/store';\nimport {GenericAction, ActionFunc} from 'mattermost-redux/types/actions';\n\nimport {activateMfa, generateMfaSecret} from 'actions/views/mfa';\n\nimport Setup from './setup';\n\nfunction mapStateToProps(state: GlobalState) {\n    const config = getConfig(state);\n\n    const siteName = config.SiteName;\n    const enforceMultifactorAuthentication = config.EnforceMultifactorAuthentication === 'true';\n\n    return {\n        currentUser: getCurrentUser(state),\n        siteName,\n        enforceMultifactorAuthentication,\n    };\n}\n\ntype Actions = {\n    activateMfa: (code: string) => Promise<{ error?: { server_error_id: string; message: string } }>;\n    generateMfaSecret: () => Promise<{data: { secret: string; qr_code: string }; error?: { message: string }}>;\n};\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Actions>({\n            activateMfa,\n            generateMfaSecret,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Setup);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport Constants from 'utils/constants';\nimport {isKeyPressed} from 'utils/utils';\n\nimport {redirectUserToDefaultTeam} from 'actions/global_actions';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nconst KeyCodes = Constants.KeyCodes;\n\ntype MFAControllerState = {\n    enforceMultifactorAuthentication: boolean;\n};\n\ntype Props = {\n\n    /*\n     * Object containing enforceMultifactorAuthentication\n     */\n    state: MFAControllerState;\n\n    /*\n     * Function that updates parent component with state props\n     */\n    updateParent: (state: MFAControllerState) => void;\n}\n\nexport default class Confirm extends React.PureComponent<Props> {\n    public componentDidMount(): void {\n        document.body.addEventListener('keydown', this.onKeyPress);\n    }\n\n    public componentWillUnmount(): void {\n        document.body.removeEventListener('keydown', this.onKeyPress);\n    }\n\n    submit = (e: KeyboardEvent | React.FormEvent<HTMLFormElement>): void => {\n        e.preventDefault();\n        redirectUserToDefaultTeam();\n    }\n\n    onKeyPress = (e: KeyboardEvent | React.FormEvent<HTMLFormElement>): void => {\n        if (isKeyPressed(e as KeyboardEvent, KeyCodes.ENTER)) {\n            this.submit(e);\n        }\n    }\n\n    public render(): JSX.Element {\n        return (\n            <div>\n                <form\n                    onSubmit={this.submit}\n                    onKeyPress={this.onKeyPress}\n                    className='form-group'\n                >\n                    <p>\n                        <FormattedMarkdownMessage\n                            id='mfa.confirm.complete'\n                            defaultMessage='**Set up complete!**'\n                        />\n                    </p>\n                    <p>\n                        <FormattedMessage\n                            id='mfa.confirm.secure'\n                            defaultMessage='Your account is now secure. Next time you sign in, you will be asked to enter a code from the Google Authenticator app on your phone.'\n                        />\n                    </p>\n                    <button\n                        type='submit'\n                        className='btn btn-primary'\n                    >\n                        <FormattedMessage\n                            id='mfa.confirm.okay'\n                            defaultMessage='Okay'\n                        />\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Route, Switch, RouteComponentProps} from 'react-router-dom';\n\nimport {emitUserLoggedOutEvent} from 'actions/global_actions';\nimport logoImage from 'images/logo.png';\nimport BackButton from 'components/common/back_button';\nimport LogoutIcon from 'components/widgets/icons/fa_logout_icon';\n\nimport Setup from '../setup';\nimport Confirm from '../confirm';\n\ntype Location = {\n    search: string;\n}\n\ntype Props = {\n    location: Location;\n    children?: React.ReactNode;\n    mfa: boolean;\n    enableMultifactorAuthentication: boolean;\n    enforceMultifactorAuthentication: boolean;\n\n    /*\n     * Object from react-router\n     */\n    match: {\n        url: string;\n    };\n}\n\ntype State = {\n    enforceMultifactorAuthentication: boolean;\n}\n\nexport default class MFAController extends React.PureComponent<Props & RouteComponentProps, State> {\n    public constructor(props: Props & RouteComponentProps) {\n        super(props);\n\n        this.state = {enforceMultifactorAuthentication: props.enableMultifactorAuthentication};\n    }\n\n    public componentDidMount(): void {\n        document.body.classList.add('sticky');\n        document.getElementById('root')!.classList.add('container-fluid');\n\n        if (!this.props.enableMultifactorAuthentication) {\n            this.props.history.push('/');\n        }\n    }\n\n    public componentWillUnmount(): void {\n        document.body.classList.remove('sticky');\n        document.getElementById('root')!.classList.remove('container-fluid');\n    }\n\n    public handleOnClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n        e.preventDefault();\n        emitUserLoggedOutEvent('/login');\n    }\n\n    public updateParent = (state: State): void => {\n        this.setState(state);\n    };\n\n    public render(): JSX.Element {\n        let backButton;\n        if (this.props.mfa && this.props.enforceMultifactorAuthentication) {\n            backButton = (\n                <div className='signup-header'>\n                    <button\n                        className='style--none color--link'\n                        onClick={this.handleOnClick}\n                    >\n                        <LogoutIcon/>\n                        <FormattedMessage\n                            id='web.header.logout'\n                            defaultMessage='Logout'\n                        />\n                    </button>\n                </div>\n            );\n        } else {\n            backButton = (<BackButton/>);\n        }\n\n        return (\n            <div className='inner-wrap'>\n                <div className='row content'>\n                    <div>\n                        {backButton}\n                        <div className='col-sm-12'>\n                            <div className='signup-team__container'>\n                                <h3>\n                                    <FormattedMessage\n                                        id='mfa.setupTitle'\n                                        defaultMessage='Multi-factor Authentication Setup'\n                                    />\n                                </h3>\n                                <img\n                                    alt={'signup team logo'}\n                                    className='signup-team-logo'\n                                    src={logoImage}\n                                />\n                                <div id='mfa'>\n                                    <Switch>\n                                        <Route\n                                            path={`${this.props.match.url}/setup`}\n                                            render={(props) => (\n                                                <Setup\n                                                    state={this.state}\n                                                    updateParent={this.updateParent}\n                                                    {...props}\n                                                />\n                                            )}\n                                        />\n                                        <Route\n                                            path={`${this.props.match.url}/confirm`}\n                                            render={(props) => (\n                                                <Confirm\n                                                    state={this.state}\n                                                    updateParent={this.updateParent}\n                                                    {...props}\n                                                />\n                                            )}\n                                        />\n                                    </Switch>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getConfig, getLicense} from 'mattermost-redux/selectors/entities/general';\n\nimport {GlobalState} from 'types/store';\n\nimport MFAController from './mfa_controller';\n\nfunction mapStateToProps(state: GlobalState) {\n    const license = getLicense(state);\n    const config = getConfig(state);\n\n    const mfa = license.MFA === 'true';\n    const enableMultifactorAuthentication = config.EnableMultifactorAuthentication === 'true';\n    const enforceMultifactorAuthentication = config.EnforceMultifactorAuthentication === 'true';\n\n    return {\n        mfa,\n        enableMultifactorAuthentication,\n        enforceMultifactorAuthentication,\n    };\n}\n\nexport default connect(mapStateToProps)(MFAController);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {useIntl} from 'react-intl';\n\nexport default function LogoutIcon() {\n    const {formatMessage} = useIntl();\n    return (\n        <i\n            className='fa fa-1x fa-angle-left'\n            title={formatMessage({id: 'generic_icons.logout', defaultMessage: 'Logout Icon'})}\n        />\n    );\n}\n","export default __webpack_public_path__ + \"files/ab8aa80cba445eb0fb75e6611c292567.png\";"],"names":["UserActions","getCurrentUserId","activateMfa","code","dispatch","getState","currentUserId","updateUserMfa","deactivateMfa","generateMfaSecret","React","FormattedMessage","useIntl","Link","classNames","BackButton","url","className","onClick","formatMessage","id","defaultMessage","defaultProps","Utils","t","FormattedMarkdownMessage","LocalizedInput","Setup","PureComponent","constructor","props","e","preventDefault","input","current","value","replace","length","setState","error","localizeMessage","actions","then","server_error_id","message","history","push","state","secret","qrCode","createRef","componentDidMount","user","currentUser","mfa_active","data","serverError","qr_code","render","formClass","errorContent","mfaRequired","enforceMultifactorAuthentication","siteName","submit","style","updateParent","maxHeight","connect","bindActionCreators","getConfig","getCurrentUser","mapStateToProps","config","SiteName","EnforceMultifactorAuthentication","mapDispatchToProps","Constants","isKeyPressed","redirectUserToDefaultTeam","KeyCodes","Confirm","ENTER","document","body","addEventListener","onKeyPress","componentWillUnmount","removeEventListener","Route","Switch","emitUserLoggedOutEvent","logoImage","LogoutIcon","MFAController","enableMultifactorAuthentication","classList","add","getElementById","remove","backButton","mfa","handleOnClick","match","location","search","children","getLicense","license","MFA","EnableMultifactorAuthentication"],"sourceRoot":""}