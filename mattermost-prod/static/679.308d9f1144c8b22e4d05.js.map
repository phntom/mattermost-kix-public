{"version":3,"file":"679.308d9f1144c8b22e4d05.js","mappings":"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","sources":["webpack://@mattermost/webapp/./components/common/back_button.tsx","webpack://@mattermost/webapp/./components/password_reset_send_link/password_reset_send_link.tsx","webpack://@mattermost/webapp/./components/password_reset_send_link/index.ts"],"sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n\n    /**\n     * URL to return to\n     */\n    url: string;\n\n    className?: string;\n\n    /**\n     * onClick handler when user clicks back button\n     */\n    onClick?: React.EventHandler<React.MouseEvent>;\n}\n\nconst BackButton = ({url, className, onClick}: Props): JSX.Element => {\n    const {formatMessage} = useIntl();\n\n    return (\n        <div\n            id='back_button'\n            className={classNames('signup-header', className)}\n        >\n            <Link\n                onClick={onClick}\n                to={url}\n            >\n                <span\n                    id='back_button_icon'\n                    className='fa fa-1x fa-angle-left'\n                    title={formatMessage({id: 'generic_icons.back', defaultMessage: 'Back Icon'})}\n                />\n                <FormattedMessage\n                    id='web.header.back'\n                    defaultMessage='Back'\n                />\n            </Link>\n        </div>\n    );\n};\nBackButton.defaultProps = {\n    url: '/',\n};\n\nexport default BackButton;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {ServerError} from '@mattermost/types/errors';\nimport {isEmail} from 'mattermost-redux/utils/helpers';\n\nimport BackButton from 'components/common/back_button';\nimport LocalizedInput from 'components/localized_input/localized_input';\n\nimport {t} from 'utils/i18n';\n\ninterface Props {\n    actions: {\n        sendPasswordResetEmail: (email: string) => Promise<{data: any; error: ServerError}>;\n    };\n}\n\ninterface State {\n    error: React.ReactNode;\n    updateText: React.ReactNode;\n}\n\nexport default class PasswordResetSendLink extends React.PureComponent<Props, State> {\n    state = {\n        error: null,\n        updateText: null,\n    };\n    resetForm = React.createRef<HTMLFormElement>();\n    emailInput = React.createRef<HTMLInputElement>();\n\n    handleSendLink = async (e: React.FormEvent) => {\n        e.preventDefault();\n\n        const email = this.emailInput.current!.value.trim().toLowerCase();\n        if (!email || !isEmail(email)) {\n            this.setState({\n                error: (\n                    <FormattedMessage\n                        id='password_send.error'\n                        defaultMessage='Please enter a valid email address.'\n                    />\n                ),\n            });\n            return;\n        }\n\n        // End of error checking clear error\n        this.setState({error: null});\n\n        const {data, error} = await this.props.actions.sendPasswordResetEmail(email);\n        if (data) {\n            this.setState({\n                error: null,\n                updateText: (\n                    <div\n                        id='passwordResetEmailSent'\n                        className='reset-form alert alert-success'\n                    >\n                        <FormattedMessage\n                            id='password_send.link'\n                            defaultMessage='If the account exists, a password reset email will be sent to:'\n                        />\n                        <div>\n                            <b>{email}</b>\n                        </div>\n                        <br/>\n                        <FormattedMessage\n                            id='password_send.checkInbox'\n                            defaultMessage='Please check your inbox.'\n                        />\n                    </div>\n                ),\n            });\n            if (this.resetForm.current) {\n                this.resetForm.current.hidden = true;\n            }\n        } else if (error) {\n            this.setState({\n                error: error.message,\n                updateText: null,\n            });\n        }\n    };\n\n    render() {\n        let error = null;\n        if (this.state.error) {\n            error = (\n                <div className='form-group has-error'>\n                    <label className='control-label'>{this.state.error}</label>\n                </div>\n            );\n        }\n\n        let formClass = 'form-group';\n        if (error) {\n            formClass += ' has-error';\n        }\n\n        return (\n            <div>\n                <BackButton/>\n                <div className='col-sm-12'>\n                    <div className='signup-team__container'>\n                        <FormattedMessage\n                            id='password_send.title'\n                            tagName='h1'\n                            defaultMessage='Password Reset'\n                        />\n                        {this.state.updateText}\n                        <form\n                            onSubmit={this.handleSendLink}\n                            ref={this.resetForm}\n                        >\n                            <p>\n                                <FormattedMessage\n                                    id='password_send.description'\n                                    defaultMessage='To reset your password, enter the email address you used to sign up'\n                                />\n                            </p>\n                            <div className={formClass}>\n                                <LocalizedInput\n                                    id='passwordResetEmailInput'\n                                    type='email'\n                                    className='form-control'\n                                    name='email'\n                                    placeholder={{\n                                        id: t('password_send.email'),\n                                        defaultMessage: 'Email',\n                                    }}\n                                    ref={this.emailInput}\n                                    spellCheck='false'\n                                    autoFocus={true}\n                                />\n                            </div>\n                            {error}\n                            <button\n                                id='passwordResetButton'\n                                type='submit'\n                                className='btn btn-primary'\n                            >\n                                <FormattedMessage\n                                    id='password_send.reset'\n                                    defaultMessage='Reset my password'\n                                />\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators, Dispatch, ActionCreatorsMapObject} from 'redux';\nimport {connect} from 'react-redux';\n\nimport {sendPasswordResetEmail} from 'mattermost-redux/actions/users';\nimport {GenericAction, ActionFunc} from 'mattermost-redux/types/actions';\nimport {ServerError} from '@mattermost/types/errors';\n\nimport PasswordResetSendLink from './password_reset_send_link';\n\ntype Actions = {\n    sendPasswordResetEmail: (emal: string) => Promise<{data: any; error: ServerError}>;\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<GenericAction>) => ({\n    actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Actions>({\n        sendPasswordResetEmail,\n    }, dispatch),\n});\n\nexport default connect(null, mapDispatchToProps)(PasswordResetSendLink);\n"],"names":["React","FormattedMessage","useIntl","Link","classNames","BackButton","url","className","onClick","formatMessage","id","defaultMessage","defaultProps","isEmail","LocalizedInput","t","PasswordResetSendLink","PureComponent","error","updateText","createRef","e","preventDefault","email","emailInput","current","value","trim","toLowerCase","setState","data","props","actions","sendPasswordResetEmail","resetForm","hidden","message","render","state","formClass","handleSendLink","bindActionCreators","connect","mapDispatchToProps","dispatch"],"sourceRoot":""}