{"version":3,"file":"716.823ddffb607d72bd53fe.js","mappings":"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","sources":["webpack://@mattermost/webapp/./components/file_info_preview/file_info_preview.tsx","webpack://@mattermost/webapp/./components/file_info_preview/index.ts","webpack://@mattermost/webapp/./components/audio_video_preview/audio_video_preview.tsx","webpack://@mattermost/webapp/./components/audio_video_preview/index.ts","webpack://@mattermost/webapp/./components/code_preview.jsx","webpack://@mattermost/webapp/./components/file_preview_modal/image_preview.jsx","webpack://@mattermost/webapp/./components/file_preview_modal/file_preview_modal_info/file_preview_modal_info.tsx","webpack://@mattermost/webapp/./components/file_preview_modal/types.ts","webpack://@mattermost/webapp/./components/file_preview_modal/file_preview_modal_main_actions/file_preview_modal_main_actions.tsx","webpack://@mattermost/webapp/./components/file_preview_modal/file_preview_modal_footer/file_preview_modal_footer.tsx","webpack://@mattermost/webapp/./components/file_preview_modal/file_preview_modal_main_nav/file_preview_modal_main_nav.tsx","webpack://@mattermost/webapp/./components/file_preview_modal/file_preview_modal_header/file_preview_modal_header.tsx","webpack://@mattermost/webapp/./components/file_preview_modal/popover_bar/popover_bar.tsx","webpack://@mattermost/webapp/./components/file_preview_modal/popover_bar/index.ts","webpack://@mattermost/webapp/./components/file_preview_modal/file_preview_modal.tsx"],"sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport * as Utils from 'utils/utils';\nimport {FileInfo} from '@mattermost/types/files';\n\ntype Props = {\n    fileInfo: FileInfo;\n    fileUrl: string;\n    canDownloadFiles: boolean;\n};\n\nexport default class FileInfoPreview extends React.PureComponent<Props> {\n    render() {\n        const fileInfo = this.props.fileInfo;\n        const fileUrl = this.props.fileUrl;\n\n        // non-image files include a section providing details about the file\n        const infoParts = [];\n\n        if (fileInfo.extension !== '') {\n            infoParts.push(Utils.localizeMessage('file_info_preview.type', 'File type ') + fileInfo.extension.toUpperCase());\n        }\n\n        if (fileInfo.size) {\n            infoParts.push(Utils.localizeMessage('file_info_preview.size', 'Size ') + Utils.fileSizeToString(fileInfo.size));\n        }\n\n        const infoString = infoParts.join(', ');\n\n        let preview = null;\n        if (this.props.canDownloadFiles) {\n            preview = (\n                <a\n                    className='file-details__preview'\n                    href={fileUrl}\n                    target='_blank'\n                    rel='noopener noreferrer'\n                >\n                    <span className='file-details__preview-helper'/>\n                    <img\n                        alt={'file preview'}\n                        src={Utils.getFileIconPath(fileInfo)}\n                    />\n                </a>\n            );\n        } else {\n            preview = (\n                <span className='file-details__preview'>\n                    <span className='file-details__preview-helper'/>\n                    <img\n                        alt={'file preview'}\n                        src={Utils.getFileIconPath(fileInfo)}\n                    />\n                </span>\n            );\n        }\n\n        return (\n            <div className='file-details__container'>\n                {preview}\n                <div className='file-details'>\n                    <div className='file-details__name'>{fileInfo.name}</div>\n                    <div className='file-details__info'>{infoString}</div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {GlobalState} from 'types/store';\n\nimport {canDownloadFiles} from 'utils/file_utils';\n\nimport FileInfoPreview from './file_info_preview';\n\nfunction mapStateToProps(state: GlobalState) {\n    const config = getConfig(state);\n\n    return {\n        canDownloadFiles: canDownloadFiles(config),\n    };\n}\n\nexport default connect(mapStateToProps)(FileInfoPreview);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {FileInfo} from '@mattermost/types/files';\n\nimport FileInfoPreview from 'components/file_info_preview';\n\nimport Constants from 'utils/constants';\n\ntype Props = {\n    fileInfo: FileInfo;\n    fileUrl: string;\n    isMobileView: boolean;\n}\n\ntype State = {\n    canPlay: boolean;\n}\n\nexport default class AudioVideoPreview extends React.PureComponent<Props, State> {\n    sourceRef = React.createRef<HTMLSourceElement>();\n    videoRef = React.createRef<HTMLVideoElement>();\n\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            canPlay: true,\n        };\n    }\n\n    componentDidMount() {\n        this.handleFileInfoChanged(this.props.fileInfo);\n\n        if (this.sourceRef.current) {\n            this.sourceRef.current.addEventListener('error', this.handleLoadError, {once: true});\n        }\n    }\n\n    componentDidUpdate(prevProps: Props) {\n        if (this.props.fileUrl !== prevProps.fileUrl) {\n            this.handleFileInfoChanged(this.props.fileInfo);\n        }\n\n        if (this.sourceRef.current) {\n            this.sourceRef.current.addEventListener('error', this.handleLoadError, {once: true});\n        }\n    }\n\n    handleFileInfoChanged = (fileInfo: FileInfo) => {\n        let video = this.videoRef.current;\n        if (!video) {\n            video = document.createElement('video');\n        }\n\n        const canPlayType = video.canPlayType(fileInfo.mime_type);\n\n        this.setState({\n            canPlay: canPlayType === 'probably' || canPlayType === 'maybe',\n        });\n    }\n\n    handleLoadError = () => {\n        this.setState({\n            canPlay: false,\n        });\n    }\n\n    stop = () => {\n        if (this.videoRef.current) {\n            const video = this.videoRef.current;\n            video.pause();\n            video.currentTime = 0;\n        }\n    }\n\n    render() {\n        if (!this.state.canPlay) {\n            return (\n                <FileInfoPreview\n                    fileInfo={this.props.fileInfo}\n                    fileUrl={this.props.fileUrl}\n                />\n            );\n        }\n\n        let width = Constants.WEB_VIDEO_WIDTH;\n        let height = Constants.WEB_VIDEO_HEIGHT;\n        if (this.props.isMobileView) {\n            width = Constants.MOBILE_VIDEO_WIDTH;\n            height = Constants.MOBILE_VIDEO_HEIGHT;\n        }\n\n        // add a key to the video to prevent React from using an old video source while a new one is loading\n        return (\n            <video\n                key={this.props.fileInfo.id}\n                ref={this.videoRef}\n                data-setup='{}'\n                controls={true}\n                width={width}\n                height={height}\n            >\n                <source\n                    ref={this.sourceRef}\n                    src={this.props.fileUrl}\n                />\n            </video>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getIsMobileView} from 'selectors/views/browser';\n\nimport {GlobalState} from 'types/store';\n\nimport AudioVideoPreview from './audio_video_preview';\n\nfunction mapStateToProps(state: GlobalState) {\n    return {\n        isMobileView: getIsMobileView(state),\n    };\n}\n\nexport default connect(mapStateToProps)(AudioVideoPreview);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Constants from 'utils/constants';\nimport * as SyntaxHighlighting from 'utils/syntax_highlighting';\n\nimport LoadingSpinner from 'components/widgets/loading/loading_spinner';\nimport FileInfoPreview from 'components/file_info_preview';\n\nexport default class CodePreview extends React.PureComponent {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            code: '',\n            lang: '',\n            loading: true,\n            success: true,\n        };\n    }\n\n    componentDidMount() {\n        this.getCode();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.fileUrl !== state.prevFileUrl) {\n            const usedLanguage = SyntaxHighlighting.getLanguageFromFileExtension(props.fileInfo.extension);\n\n            if (!usedLanguage || props.fileInfo.size > Constants.CODE_PREVIEW_MAX_FILE_SIZE) {\n                return {\n                    code: '',\n                    lang: '',\n                    loading: false,\n                    success: false,\n                    prevFileUrl: props.fileUrl,\n                };\n            }\n\n            return {\n                code: '',\n                lang: usedLanguage,\n                loading: true,\n                prevFileUrl: props.fileUrl,\n            };\n        }\n        return null;\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.fileUrl !== prevProps.fileUrl) {\n            this.getCode();\n        }\n    }\n\n    getCode = async () => {\n        if (!this.state.lang || this.props.fileInfo.size > Constants.CODE_PREVIEW_MAX_FILE_SIZE) {\n            return;\n        }\n        try {\n            const data = await fetch(this.props.fileUrl);\n            const text = await data.text();\n            this.handleReceivedCode(text);\n        } catch (e) {\n            this.handleReceivedError();\n        }\n    }\n\n    handleReceivedCode = (data) => {\n        let code = data;\n        if (data.nodeName === '#document') {\n            code = new XMLSerializer().serializeToString(data);\n        }\n        this.setState({\n            code,\n            loading: false,\n            success: true,\n        });\n    }\n\n    handleReceivedError = () => {\n        this.setState({loading: false, success: false});\n    }\n\n    static supports(fileInfo) {\n        return Boolean(SyntaxHighlighting.getLanguageFromFileExtension(fileInfo.extension));\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (\n                <div className='view-image__loading'>\n                    <LoadingSpinner/>\n                </div>\n            );\n        }\n\n        if (!this.state.success) {\n            return (\n                <FileInfoPreview\n                    fileInfo={this.props.fileInfo}\n                    fileUrl={this.props.fileUrl}\n                />\n            );\n        }\n\n        const language = SyntaxHighlighting.getLanguageName(this.state.lang);\n\n        const highlighted = SyntaxHighlighting.highlight(this.state.lang, this.state.code);\n\n        return (\n            <div className='post-code code-preview'>\n                <span className='post-code__language'>\n                    {`${this.props.fileInfo.name} - ${language}`}\n                </span>\n                <div className='hljs'>\n                    <div className='post-code__line-numbers'>\n                        {SyntaxHighlighting.renderLineNumbers(this.state.code)}\n                    </div>\n                    <code dangerouslySetInnerHTML={{__html: highlighted}}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nCodePreview.propTypes = {\n    fileInfo: PropTypes.object.isRequired,\n    fileUrl: PropTypes.string.isRequired,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {getFilePreviewUrl, getFileDownloadUrl} from 'mattermost-redux/utils/file_utils';\n\nimport './image_preview.scss';\n\nexport default function ImagePreview({fileInfo, canDownloadFiles}) {\n    const isExternalFile = !fileInfo.id;\n\n    let fileUrl;\n    let previewUrl;\n    if (isExternalFile) {\n        fileUrl = fileInfo.link;\n        previewUrl = fileInfo.link;\n    } else {\n        fileUrl = getFileDownloadUrl(fileInfo.id);\n        previewUrl = fileInfo.has_preview_image ? getFilePreviewUrl(fileInfo.id) : fileUrl;\n    }\n\n    if (!canDownloadFiles) {\n        return <img src={previewUrl}/>;\n    }\n\n    return (\n        <a\n            className='image_preview'\n            href='#'\n        >\n            <img\n                className='image_preview__image'\n                data-testid='imagePreview'\n                alt={'preview url image'}\n                src={previewUrl}\n            />\n        </a>\n    );\n}\n\nImagePreview.propTypes = {\n    fileInfo: PropTypes.object.isRequired,\n    canDownloadFiles: PropTypes.bool.isRequired,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {memo} from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {useSelector} from 'react-redux';\n\nimport {makeGetChannel} from 'mattermost-redux/selectors/entities/channels';\nimport {\n    getUser as selectUser,\n    makeGetDisplayName,\n} from 'mattermost-redux/selectors/entities/users';\nimport {Post} from '@mattermost/types/posts';\nimport {UserProfile} from '@mattermost/types/users';\n\nimport Avatar from 'components/widgets/users/avatar/avatar';\n\nimport {GlobalState} from 'types/store';\n\nimport {imageURLForUser} from 'utils/utils';\n\nimport './file_preview_modal_info.scss';\n\ninterface Props {\n    showFileName: boolean;\n    filename: string;\n    post?: Post;\n}\n\nconst displayNameGetter = makeGetDisplayName();\n\nconst FilePreviewModalInfo: React.FC<Props> = (props: Props) => {\n    const user = useSelector((state: GlobalState) => selectUser(state, props.post?.user_id ?? '')) as UserProfile | undefined;\n    const channel = useSelector((state: GlobalState) => {\n        const getChannel = makeGetChannel();\n        return getChannel(state, {id: props.post?.channel_id ?? ''});\n    });\n    const name = useSelector((state: GlobalState) => displayNameGetter(state, props.post?.user_id ?? '', true));\n\n    let info;\n    const channelName = channel ? (\n        <FormattedMessage\n            id='file_preview_modal_info.shared_in'\n            defaultMessage='Shared in ~{name}'\n            values={{\n                name: channel.display_name || channel.name,\n            }}\n        />\n    ) : null;\n    if (props.showFileName) {\n        info = (\n            <>\n                <h5 className='file-preview-modal__file-name'>{props.filename}\n                </h5>\n                <span className='file-preview-modal__file-details'>\n                    <span className='file-preview-modal__file-details-user-name'>{name}</span>\n                    <span className='file-preview-modal__channel'>{channelName}</span>\n                </span>\n            </>\n        );\n    } else {\n        info = (\n            <>\n                <h5 className='file-preview-modal__user-name'>{name}\n                </h5>\n                <span className='file-preview-modal__channel'>{channelName}\n                </span>\n            </>\n        );\n    }\n\n    return (\n        <div className='file-preview-modal__info'>\n            {\n                (props.post && Object.keys(props.post).length > 0) &&\n                <Avatar\n                    size='lg'\n                    url={imageURLForUser(props.post.user_id, user?.last_picture_update)}\n                    className='file-preview-modal__avatar'\n                />\n            }\n\n            <div className='file-preview-modal__info-details'>\n                {info}\n            </div>\n        </div>\n    );\n};\n\nexport default memo(FilePreviewModalInfo);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {FileInfo} from '@mattermost/types/files';\n\nexport type LinkInfo = {\n    has_preview_image: boolean;\n    link: string;\n    extension: string;\n    name: string;\n}\n\nexport function isFileInfo(info: FileInfo | LinkInfo): info is FileInfo {\n    return Boolean((info as FileInfo).id);\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {memo, useEffect, useState} from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport {getFilePublicLink} from 'mattermost-redux/actions/files';\nimport {getFilePublicLink as selectFilePublicLink} from 'mattermost-redux/selectors/entities/files';\nimport {FileInfo} from '@mattermost/types/files';\n\nimport OverlayTrigger from 'components/overlay_trigger';\nimport Tooltip from 'components/tooltip';\n\nimport {GlobalState} from 'types/store';\n\nimport Constants from 'utils/constants';\nimport {copyToClipboard} from 'utils/utils';\n\nimport {isFileInfo, LinkInfo} from '../types';\n\nimport './file_preview_modal_main_actions.scss';\n\ninterface DownloadLinkProps {\n    download?: string;\n}\n\ninterface Props {\n    usedInside?: 'Header' | 'Footer';\n    showOnlyClose?: boolean;\n    showClose?: boolean;\n    showPublicLink?: boolean;\n    filename: string;\n    fileURL: string;\n    fileInfo: FileInfo | LinkInfo;\n    enablePublicLink: boolean;\n    canDownloadFiles: boolean;\n    handleModalClose: () => void;\n}\n\nconst FilePreviewModalMainActions: React.FC<Props> = (props: Props) => {\n    const tooltipPlacement = props.usedInside === 'Header' ? 'bottom' : 'top';\n    const selectedFilePublicLink = useSelector((state: GlobalState) => selectFilePublicLink(state)?.link);\n    const dispatch = useDispatch();\n    const [publicLinkCopied, setPublicLinkCopied] = useState(false);\n\n    useEffect(() => {\n        if (isFileInfo(props.fileInfo) && props.enablePublicLink) {\n            dispatch(getFilePublicLink(props.fileInfo.id));\n        }\n    }, [props.fileInfo, props.enablePublicLink]);\n    const copyPublicLink = () => {\n        copyToClipboard(selectedFilePublicLink ?? '');\n        setPublicLinkCopied(true);\n    };\n\n    const closeButton = (\n        <OverlayTrigger\n            delayShow={Constants.OVERLAY_TIME_DELAY}\n            key='publicLink'\n            placement={tooltipPlacement}\n            overlay={\n                <Tooltip id='close-icon-tooltip'>\n                    <FormattedMessage\n                        id='full_screen_modal.close'\n                        defaultMessage='Close'\n                    />\n                </Tooltip>\n            }\n        >\n            <button\n                className='file-preview-modal-main-actions__action-item'\n                onClick={props.handleModalClose}\n            >\n                <i className='icon icon-close'/>\n            </button>\n        </OverlayTrigger>\n    );\n    let publicTooltipMessage = (\n        <FormattedMessage\n            id='view_image_popover.publicLink'\n            defaultMessage='Get a public link'\n        />\n    );\n    if (publicLinkCopied) {\n        publicTooltipMessage = (\n            <FormattedMessage\n                id='file_preview_modal_main_actions.public_link-copied'\n                defaultMessage='Public link copied'\n            />\n        );\n    }\n    const publicLink = (\n        <OverlayTrigger\n            delayShow={Constants.OVERLAY_TIME_DELAY}\n            key='filePreviewPublicLink'\n            placement={tooltipPlacement}\n            shouldUpdatePosition={true}\n            onExit={() => setPublicLinkCopied(false)}\n            overlay={\n                <Tooltip id='link-variant-icon-tooltip'>\n                    {publicTooltipMessage}\n                </Tooltip>\n            }\n        >\n            <a\n                href='#'\n                className='file-preview-modal-main-actions__action-item'\n                onClick={copyPublicLink}\n            >\n                <i className='icon icon-link-variant'/>\n            </a>\n        </OverlayTrigger>\n    );\n    const downloadLinkProps: DownloadLinkProps = {};\n    downloadLinkProps.download = props.filename;\n    const download = (\n        <OverlayTrigger\n            delayShow={Constants.OVERLAY_TIME_DELAY}\n            key='download'\n            placement={tooltipPlacement}\n            overlay={\n                <Tooltip id='download-icon-tooltip'>\n                    <FormattedMessage\n                        id='view_image_popover.download'\n                        defaultMessage='Download'\n                    />\n                </Tooltip>\n            }\n        >\n            <a\n                href={props.fileURL}\n                className='file-preview-modal-main-actions__action-item'\n                target='_blank'\n                rel='noopener noreferrer'\n                download={props.filename}\n            >\n                <i className='icon icon-download-outline'/>\n            </a>\n        </OverlayTrigger>\n    );\n    return (\n        <div className='file-preview-modal-main-actions__actions'>\n            {!props.showOnlyClose && props.enablePublicLink && props.showPublicLink && publicLink}\n            {!props.showOnlyClose && props.canDownloadFiles && download}\n            {props.showClose && closeButton}\n        </div>\n    );\n};\n\nFilePreviewModalMainActions.defaultProps = {\n    showOnlyClose: false,\n    usedInside: 'Header',\n    showClose: true,\n    showPublicLink: true,\n};\n\nexport default memo(FilePreviewModalMainActions);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {memo} from 'react';\n\nimport {FileInfo} from '@mattermost/types/files';\nimport {Post} from '@mattermost/types/posts';\n\nimport FilePreviewModalInfo from '../file_preview_modal_info/file_preview_modal_info';\nimport FilePreviewModalMainActions from '../file_preview_modal_main_actions/file_preview_modal_main_actions';\nimport {LinkInfo} from '../types';\n\nimport './file_preview_modal_footer.scss';\n\ninterface Props {\n    fileInfo: FileInfo | LinkInfo;\n    filename: string;\n    post?: Post;\n    fileURL: string;\n    showPublicLink?: boolean;\n    enablePublicLink: boolean;\n    canDownloadFiles: boolean;\n    isExternalFile: boolean;\n    handleModalClose: () => void;\n}\n\nconst FilePreviewModalFooter: React.FC<Props> = ({post, ...actionProps}: Props) => {\n    return (\n        <div className='file-preview-modal-footer'>\n            <FilePreviewModalInfo\n                showFileName={false}\n                post={post}\n                filename={actionProps.filename}\n            />\n            <FilePreviewModalMainActions\n                {...actionProps}\n                showClose={false}\n                usedInside='Footer'\n                showOnlyClose={false}\n            />\n        </div>\n    );\n};\nexport default memo(FilePreviewModalFooter);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {memo} from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport './file_preview_modal_main_nav.scss';\n\nimport OverlayTrigger from '../../overlay_trigger';\nimport Tooltip from '../../tooltip';\nimport Constants from '../../../utils/constants';\n\ninterface Props {\n    fileIndex: number;\n    totalFiles: number;\n    handlePrev: () => void;\n    handleNext: () => void;\n}\n\nconst FilePreviewModalMainNav: React.FC<Props> = (props: Props) => {\n    const leftArrow = (\n        <OverlayTrigger\n            delayShow={Constants.OVERLAY_TIME_DELAY}\n            key='previewArrowLeft'\n            placement='bottom'\n            overlay={\n                <Tooltip id='close-icon-tooltip'>\n                    <FormattedMessage\n                        id='generic.previous'\n                        defaultMessage='Close'\n                    />\n                </Tooltip>\n            }\n        >\n            <button\n                id='previewArrowLeft'\n                className='file_preview_modal_main_nav__prev'\n                onClick={props.handlePrev}\n            >\n                <i className='icon icon-chevron-left'/>\n            </button>\n        </OverlayTrigger>\n    );\n\n    const rightArrow = (\n        <OverlayTrigger\n            delayShow={Constants.OVERLAY_TIME_DELAY}\n            key='publicLink'\n            placement='bottom'\n            overlay={\n                <Tooltip id='close-icon-tooltip'>\n                    <FormattedMessage\n                        id='generic.next'\n                        defaultMessage='Next'\n                    />\n                </Tooltip>\n            }\n        >\n            <button\n                id='previewArrowRight'\n                className='file_preview_modal_main_nav__next'\n                onClick={props.handleNext}\n            >\n                <i className='icon icon-chevron-right'/>\n            </button>\n        </OverlayTrigger>\n    );\n    return (\n        <div className='file_preview_modal_main_nav'>\n            {leftArrow}\n            <span className='modal-bar-file-count'>\n                <FormattedMessage\n                    id='file_preview_modal_main_nav.file'\n                    defaultMessage='{count, number} of {total, number}'\n                    values={{\n                        count: (props.fileIndex + 1),\n                        total: props.totalFiles,\n                    }}\n                />\n            </span>\n            {rightArrow}\n        </div>\n    );\n};\n\nexport default memo(FilePreviewModalMainNav);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {memo} from 'react';\n\nimport {FileInfo} from '@mattermost/types/files';\n\nimport Post from 'components/post_view/post/post';\n\nimport FilePreviewModalInfo from '../file_preview_modal_info/file_preview_modal_info';\nimport FilePreviewModalMainNav from '../file_preview_modal_main_nav/file_preview_modal_main_nav';\nimport FilePreviewModalMainActions from '../file_preview_modal_main_actions/file_preview_modal_main_actions';\nimport {LinkInfo} from '../types';\n\nimport './file_preview_modal_header.scss';\n\ninterface Props {\n    isMobileView: boolean;\n    fileIndex: number;\n    fileInfo: FileInfo | LinkInfo;\n    totalFiles: number;\n    filename: string;\n    post: React.ComponentProps<typeof Post>;\n    fileURL: string;\n    showPublicLink?: boolean;\n    enablePublicLink: boolean;\n    canDownloadFiles: boolean;\n    isExternalFile: boolean;\n    handlePrev: () => void;\n    handleNext: () => void;\n    handleModalClose: () => void;\n}\n\nconst FilePreviewModalHeader: React.FC<Props> = ({post, totalFiles, fileIndex, ...actionProps}: Props) => {\n    let mainActions = (<div/>);\n    if (totalFiles > 1) {\n        mainActions = (\n            <FilePreviewModalMainNav\n                totalFiles={totalFiles}\n                fileIndex={fileIndex}\n                handlePrev={actionProps.handlePrev}\n                handleNext={actionProps.handleNext}\n            />\n        );\n    }\n    const actions = (\n        <FilePreviewModalMainActions\n            {...actionProps}\n            showOnlyClose={actionProps.isMobileView}\n            usedInside='Header'\n        />);\n    return (\n        <div className='file-preview-modal-header'>\n            {actionProps.isMobileView && actions}\n            {!actionProps.isMobileView &&\n            <FilePreviewModalInfo\n                showFileName={true}\n                post={post}\n                filename={actionProps.filename}\n            />\n            }\n            {mainActions}\n            {!actionProps.isMobileView && actions}\n        </div>\n    );\n};\n\nexport default memo(FilePreviewModalHeader);\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n/* eslint-disable react/no-string-refs */\n\nimport debounce from 'lodash/debounce';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport OverlayTrigger from 'components/overlay_trigger';\nimport Tooltip from 'components/tooltip';\nimport {Constants, ZoomSettings} from 'utils/constants';\n\nexport interface Props {\n    scale?: number;\n    showZoomControls?: boolean;\n    handleZoomIn?: () => void;\n    handleZoomOut?: () => void;\n    handleZoomReset?: () => void;\n}\n\nexport default class PopoverBar extends React.PureComponent<Props> {\n    render() {\n        const zoomControls: React.ReactNode[] = [];\n        let wrappedZoomControls: React.ReactNode = null;\n        if (this.props.showZoomControls) {\n            let zoomResetButton;\n            let zoomOutButton;\n            let zoomInButton;\n\n            if (this.props.scale && this.props.scale > ZoomSettings.MIN_SCALE) {\n                zoomOutButton = (\n                    <span className='modal-zoom-btn'>\n                        <a onClick={this.props.handleZoomOut && debounce(this.props.handleZoomOut, 300, {maxWait: 300})}>\n                            <i className='icon icon-minus'/>\n                        </a>\n                    </span>\n                );\n            } else {\n                zoomOutButton = (\n                    <span className='btn-inactive'>\n                        <i className='icon icon-minus'/>\n                    </span>\n                );\n            }\n            zoomControls.push(\n                <OverlayTrigger\n                    delayShow={Constants.OVERLAY_TIME_DELAY}\n                    key='zoomOut'\n                    placement='top'\n                    overlay={\n                        <Tooltip id='zoom-out-icon-tooltip'>\n                            <FormattedMessage\n                                id='view_image.zoom_out'\n                                defaultMessage='Zoom Out'\n                            />\n                        </Tooltip>\n                    }\n                >\n                    {zoomOutButton}\n                </OverlayTrigger>,\n            );\n\n            if (this.props.scale && this.props.scale > ZoomSettings.DEFAULT_SCALE) {\n                zoomResetButton = (\n                    <span className='modal-zoom-btn'>\n                        <a onClick={this.props.handleZoomReset}>\n                            <i className='icon icon-magnify-minus'/>\n                        </a>\n                    </span>\n                );\n            } else if (this.props.scale && this.props.scale < ZoomSettings.DEFAULT_SCALE) {\n                zoomResetButton = (\n                    <span className='modal-zoom-btn'>\n                        <a onClick={this.props.handleZoomReset}>\n                            <i className='icon icon-magnify-plus'/>\n                        </a>\n                    </span>\n                );\n            } else {\n                zoomResetButton = (\n                    <span className='btn-inactive'>\n                        <i className='icon icon-magnify-minus'/>\n                    </span>\n                );\n            }\n            zoomControls.push(\n                <OverlayTrigger\n                    delayShow={Constants.OVERLAY_TIME_DELAY}\n                    key='zoomReset'\n                    placement='top'\n                    overlay={\n                        <Tooltip id='zoom-reset-icon-tooltip'>\n                            <FormattedMessage\n                                id='view_image.zoom_reset'\n                                defaultMessage='Reset Zoom'\n                            />\n                        </Tooltip>\n                    }\n                >\n                    {zoomResetButton}\n                </OverlayTrigger>,\n            );\n\n            if (this.props.scale && this.props.scale < ZoomSettings.MAX_SCALE) {\n                zoomInButton = (\n                    <span className='modal-zoom-btn'>\n                        <a onClick={this.props.handleZoomIn && debounce(this.props.handleZoomIn, 300, {maxWait: 300})}>\n                            <i className='icon icon-plus'/>\n                        </a>\n                    </span>\n\n                );\n            } else {\n                zoomInButton = (\n                    <span className='btn-inactive'>\n                        <i className='icon icon-plus'/>\n                    </span>\n                );\n            }\n            zoomControls.push(\n                <OverlayTrigger\n                    delayShow={Constants.OVERLAY_TIME_DELAY}\n                    key='zoomIn'\n                    placement='top'\n                    overlay={\n                        <Tooltip id='zoom-in-icon-tooltip'>\n                            <FormattedMessage\n                                id='view_image.zoom_in'\n                                defaultMessage='Zoom In'\n                            />\n                        </Tooltip>\n                    }\n                >\n                    {zoomInButton}\n                </OverlayTrigger>,\n            );\n\n            wrappedZoomControls = (\n                <div className='modal-column'>\n                    {zoomControls}\n                </div>\n            );\n        }\n\n        return (\n            <div\n                data-testid='fileCountFooter'\n                ref='imageFooter'\n                className='modal-button-bar file-preview-modal__zoom-bar'\n            >\n                {wrappedZoomControls}\n            </div>\n        );\n    }\n}\n/* eslint-enable react/no-string-refs */\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PopoverBar from './popover_bar';\n\nexport default PopoverBar;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\n\nimport {FileInfo} from '@mattermost/types/files';\nimport {Post} from '@mattermost/types/posts';\n\nimport {getFileDownloadUrl, getFilePreviewUrl, getFileUrl} from 'mattermost-redux/utils/file_utils';\nimport LoadingImagePreview from 'components/loading_image_preview';\nimport Constants, {FileTypes, ZoomSettings} from 'utils/constants';\nimport * as Utils from 'utils/utils';\nimport AudioVideoPreview from 'components/audio_video_preview';\nimport CodePreview from 'components/code_preview';\nimport FileInfoPreview from 'components/file_info_preview';\n\nimport {FilePreviewComponent} from 'types/store/plugins';\n\nimport ImagePreview from './image_preview';\nimport './file_preview_modal.scss';\nimport FilePreviewModalFooter from './file_preview_modal_footer/file_preview_modal_footer';\nimport FilePreviewModalHeader from './file_preview_modal_header/file_preview_modal_header';\nimport PopoverBar from './popover_bar';\nimport {LinkInfo, isFileInfo} from './types';\n\nconst PDFPreview = React.lazy(() => import('components/pdf_preview'));\n\nconst KeyCodes = Constants.KeyCodes;\n\nexport type Props = {\n    canDownloadFiles: boolean;\n    enablePublicLink: boolean;\n\n    /**\n     * List of FileInfo to view\n     **/\n    fileInfos: Array<FileInfo | LinkInfo>;\n\n    isMobileView: boolean;\n    pluginFilePreviewComponents: FilePreviewComponent[];\n    onExited: () => void;\n\n    /**\n     * The id of the post the files are attached to\n     */\n    postId?: string;\n\n    /**\n     * The post the files are attached to\n     * Either postId or post can be passed to FilePreviewModal\n     */\n    post?: Post;\n\n    /**\n     * The index number of starting image\n     **/\n    startIndex: number;\n}\n\ntype State = {\n    show: boolean;\n    imageIndex: number;\n    imageHeight: number | string;\n    loaded: boolean[];\n    prevFileInfosCount: number;\n    progress: number[];\n    showCloseBtn: boolean;\n    showZoomControls: boolean;\n    scale: number[];\n}\n\nexport default class FilePreviewModal extends React.PureComponent<Props, State> {\n    static defaultProps = {\n        fileInfos: [],\n        startIndex: 0,\n        pluginFilePreviewComponents: [],\n    };\n\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            show: true,\n            imageIndex: this.props.startIndex,\n            imageHeight: '100%',\n            loaded: Utils.fillArray(false, this.props.fileInfos.length),\n            prevFileInfosCount: 0,\n            progress: Utils.fillArray(0, this.props.fileInfos.length),\n            showCloseBtn: false,\n            showZoomControls: false,\n            scale: Utils.fillArray(ZoomSettings.DEFAULT_SCALE, this.props.fileInfos.length),\n        };\n    }\n\n    handleNext = () => {\n        let id = this.state.imageIndex + 1;\n        if (id > this.props.fileInfos.length - 1) {\n            id = 0;\n        }\n        this.showImage(id);\n    }\n\n    handlePrev = () => {\n        let id = this.state.imageIndex - 1;\n        if (id < 0) {\n            id = this.props.fileInfos.length - 1;\n        }\n        this.showImage(id);\n    }\n\n    handleKeyPress = (e: KeyboardEvent) => {\n        if (Utils.isKeyPressed(e, KeyCodes.RIGHT)) {\n            this.handleNext();\n        } else if (Utils.isKeyPressed(e, KeyCodes.LEFT)) {\n            this.handlePrev();\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener('keyup', this.handleKeyPress);\n\n        this.showImage(this.props.startIndex);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keyup', this.handleKeyPress);\n    }\n\n    static getDerivedStateFromProps(props: Props, state: State) {\n        const updatedState: Partial<State> = {};\n        if (props.fileInfos[state.imageIndex] && props.fileInfos[state.imageIndex].extension === FileTypes.PDF) {\n            updatedState.showZoomControls = true;\n        } else {\n            updatedState.showZoomControls = false;\n        }\n        if (props.fileInfos.length !== state.prevFileInfosCount) {\n            updatedState.loaded = Utils.fillArray(false, props.fileInfos.length);\n            updatedState.progress = Utils.fillArray(0, props.fileInfos.length);\n            updatedState.prevFileInfosCount = props.fileInfos.length;\n        }\n        return Object.keys(updatedState).length ? updatedState : null;\n    }\n\n    showImage = (id: number) => {\n        this.setState({imageIndex: id});\n\n        const imageHeight = window.innerHeight - 100;\n        this.setState({imageHeight});\n\n        if (!this.state.loaded[id]) {\n            this.loadImage(id);\n        }\n    }\n\n    loadImage = (index: number) => {\n        const fileInfo = this.props.fileInfos[index];\n        const fileType = Utils.getFileType(fileInfo.extension);\n\n        if (fileType === FileTypes.IMAGE && isFileInfo(fileInfo)) {\n            let previewUrl;\n            if (fileInfo.has_preview_image) {\n                previewUrl = getFilePreviewUrl(fileInfo.id);\n            } else {\n                // some images (eg animated gifs) just show the file itself and not a preview\n                previewUrl = getFileUrl(fileInfo.id);\n            }\n\n            Utils.loadImage(\n                previewUrl,\n                () => this.handleImageLoaded(index),\n                (completedPercentage) => this.handleImageProgress(index, completedPercentage),\n            );\n        } else {\n            // there's nothing to load for non-image files\n            this.handleImageLoaded(index);\n        }\n    }\n\n    handleImageLoaded = (index: number) => {\n        this.setState((prevState) => {\n            return {\n                loaded: {\n                    ...prevState.loaded,\n                    [index]: true,\n                },\n            };\n        });\n    }\n\n    handleImageProgress = (index: number, completedPercentage: number) => {\n        this.setState((prevState) => {\n            return {\n                progress: {\n                    ...prevState.progress,\n                    [index]: completedPercentage,\n                },\n            };\n        });\n    }\n\n    onMouseEnterImage = () => {\n        this.setState({showCloseBtn: true});\n    }\n\n    onMouseLeaveImage = () => {\n        this.setState({showCloseBtn: false});\n    }\n\n    setScale = (index: number, scale: number) => {\n        this.setState((prevState) => {\n            return {\n                scale: {\n                    ...prevState.scale,\n                    [index]: scale,\n                },\n            };\n        });\n    }\n\n    handleZoomIn = () => {\n        let newScale = this.state.scale[this.state.imageIndex];\n        newScale = Math.min(newScale + ZoomSettings.SCALE_DELTA, ZoomSettings.MAX_SCALE);\n        this.setScale(this.state.imageIndex, newScale);\n    };\n\n    handleZoomOut = () => {\n        let newScale = this.state.scale[this.state.imageIndex];\n        newScale = Math.max(newScale - ZoomSettings.SCALE_DELTA, ZoomSettings.MIN_SCALE);\n        this.setScale(this.state.imageIndex, newScale);\n    };\n\n    handleZoomReset = () => {\n        this.setScale(this.state.imageIndex, ZoomSettings.DEFAULT_SCALE);\n    }\n\n    handleModalClose = () => {\n        this.setState({show: false});\n    }\n\n    handleBgClose = (e: React.MouseEvent) => {\n        if (e.currentTarget === e.target) {\n            this.handleModalClose();\n        }\n    }\n\n    render() {\n        if (this.props.fileInfos.length < 1 || this.props.fileInfos.length - 1 < this.state.imageIndex) {\n            return null;\n        }\n\n        const fileInfo = this.props.fileInfos[this.state.imageIndex];\n        const fileType = Utils.getFileType(fileInfo.extension);\n\n        let showPublicLink;\n        let fileName;\n        let fileUrl;\n        let fileDownloadUrl;\n        let isExternalFile;\n        if (isFileInfo(fileInfo)) {\n            showPublicLink = true;\n            fileName = fileInfo.name;\n            fileUrl = getFileUrl(fileInfo.id);\n            fileDownloadUrl = getFileDownloadUrl(fileInfo.id);\n            isExternalFile = false;\n        } else {\n            showPublicLink = false;\n            fileName = fileInfo.name || fileInfo.link;\n            fileUrl = fileInfo.link;\n            fileDownloadUrl = fileInfo.link;\n            isExternalFile = true;\n        }\n\n        let dialogClassName = 'a11y__modal modal-image file-preview-modal';\n\n        let content;\n        let modalImageClass = '';\n        let zoomBar;\n\n        if (this.state.loaded[this.state.imageIndex]) {\n            if (fileType === FileTypes.IMAGE || fileType === FileTypes.SVG) {\n                content = (\n                    <ImagePreview\n                        fileInfo={fileInfo}\n                        canDownloadFiles={this.props.canDownloadFiles}\n                    />\n                );\n            } else if (fileType === FileTypes.VIDEO || fileType === FileTypes.AUDIO) {\n                content = (\n                    <AudioVideoPreview\n                        fileInfo={fileInfo as FileInfo}\n                        fileUrl={fileUrl}\n                    />\n                );\n            } else if (fileType === FileTypes.PDF) {\n                modalImageClass = ' file-preview-modal__content-scrollable';\n                content = (\n                    <div\n                        className='file-preview-modal__scrollable'\n                        onClick={this.handleBgClose}\n                    >\n                        <React.Suspense fallback={null}>\n                            <PDFPreview\n                                fileInfo={fileInfo}\n                                fileUrl={fileUrl}\n                                scale={this.state.scale[this.state.imageIndex]}\n                                handleBgClose={this.handleBgClose}\n                            />\n                        </React.Suspense>\n                    </div>\n                );\n                zoomBar = (\n                    <PopoverBar\n                        scale={this.state.scale[this.state.imageIndex]}\n                        showZoomControls={this.state.showZoomControls}\n                        handleZoomIn={this.handleZoomIn}\n                        handleZoomOut={this.handleZoomOut}\n                        handleZoomReset={this.handleZoomReset}\n                    />\n                );\n            } else if (CodePreview.supports(fileInfo)) {\n                dialogClassName += ' modal-code';\n                content = (\n                    <CodePreview\n                        fileInfo={fileInfo}\n                        fileUrl={fileUrl}\n                        className='file-preview-modal__code-preview'\n                    />\n                );\n            } else {\n                content = (\n                    <FileInfoPreview\n                        fileInfo={fileInfo as FileInfo}\n                        fileUrl={fileUrl}\n                    />\n                );\n            }\n        } else {\n            // display a progress indicator when the preview for an image is still loading\n            const loading = Utils.localizeMessage('view_image.loading', 'Loading');\n            const progress = Math.floor(this.state.progress[this.state.imageIndex]);\n\n            content = (\n                <LoadingImagePreview\n                    loading={loading}\n                    progress={progress}\n                />\n            );\n        }\n\n        if (isFileInfo(fileInfo)) {\n            for (const preview of this.props.pluginFilePreviewComponents) {\n                if (preview.override(fileInfo, this.props.post)) {\n                    content = (\n                        <preview.component\n                            fileInfo={fileInfo}\n                            post={this.props.post}\n                        />\n                    );\n                    break;\n                }\n            }\n        }\n\n        return (\n            <Modal\n                show={this.state.show}\n                onHide={this.handleModalClose}\n                onExited={this.props.onExited}\n                className='modal-image file-preview-modal'\n                dialogClassName={dialogClassName}\n                animation={true}\n                backdrop={false}\n                role='dialog'\n                style={{paddingLeft: 0}}\n                aria-labelledby='viewImageModalLabel'\n            >\n                <Modal.Body className='file-preview-modal__body'>\n                    <div\n                        className={'modal-image__wrapper'}\n                        onClick={this.handleModalClose}\n                    >\n                        <div\n                            className='file-preview-modal__main-ctr'\n                            onMouseEnter={this.onMouseEnterImage}\n                            onMouseLeave={this.onMouseLeaveImage}\n                            onClick={(e) => e.stopPropagation()}\n                        >\n                            <Modal.Title\n                                componentClass='div'\n                                id='viewImageModalLabel'\n                                className='file-preview-modal__title'\n                            >\n                                <FilePreviewModalHeader\n                                    isMobileView={this.props.isMobileView}\n                                    post={this.props.post}\n                                    showPublicLink={showPublicLink}\n                                    fileIndex={this.state.imageIndex}\n                                    totalFiles={this.props.fileInfos?.length}\n                                    filename={fileName}\n                                    fileURL={fileDownloadUrl}\n                                    fileInfo={fileInfo}\n                                    enablePublicLink={this.props.enablePublicLink}\n                                    canDownloadFiles={this.props.canDownloadFiles}\n                                    isExternalFile={isExternalFile}\n                                    handlePrev={this.handlePrev}\n                                    handleNext={this.handleNext}\n                                    handleModalClose={this.handleModalClose}\n                                />\n                                {zoomBar}\n                            </Modal.Title>\n                            <div\n                                className={'file-preview-modal__content' + modalImageClass}\n                                onClick={this.handleBgClose}\n                            >\n                                {content}\n                            </div>\n                            { this.props.isMobileView &&\n                                <FilePreviewModalFooter\n                                    post={this.props.post}\n                                    showPublicLink={showPublicLink}\n                                    filename={fileName}\n                                    fileURL={fileDownloadUrl}\n                                    fileInfo={fileInfo}\n                                    enablePublicLink={this.props.enablePublicLink}\n                                    canDownloadFiles={this.props.canDownloadFiles}\n                                    isExternalFile={isExternalFile}\n                                    handleModalClose={this.handleModalClose}\n                                />\n                            }\n                        </div>\n                    </div>\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n"],"names":["React","Utils","FileInfoPreview","PureComponent","render","fileInfo","props","fileUrl","infoParts","extension","push","localizeMessage","toUpperCase","size","fileSizeToString","infoString","join","preview","canDownloadFiles","getFileIconPath","name","connect","getConfig","mapStateToProps","state","config","Constants","AudioVideoPreview","constructor","createRef","video","videoRef","current","document","createElement","canPlayType","mime_type","setState","canPlay","pause","currentTime","componentDidMount","handleFileInfoChanged","sourceRef","addEventListener","handleLoadError","once","componentDidUpdate","prevProps","width","WEB_VIDEO_WIDTH","height","WEB_VIDEO_HEIGHT","isMobileView","MOBILE_VIDEO_WIDTH","MOBILE_VIDEO_HEIGHT","id","getIsMobileView","PropTypes","SyntaxHighlighting","LoadingSpinner","CodePreview","lang","CODE_PREVIEW_MAX_FILE_SIZE","data","fetch","text","handleReceivedCode","e","handleReceivedError","code","nodeName","XMLSerializer","serializeToString","loading","success","getCode","getDerivedStateFromProps","prevFileUrl","usedLanguage","getLanguageFromFileExtension","supports","Boolean","language","getLanguageName","highlighted","highlight","renderLineNumbers","__html","propTypes","object","isRequired","string","getFilePreviewUrl","getFileDownloadUrl","ImagePreview","isExternalFile","previewUrl","link","has_preview_image","bool","memo","FormattedMessage","useSelector","makeGetChannel","getUser","selectUser","makeGetDisplayName","Avatar","imageURLForUser","displayNameGetter","FilePreviewModalInfo","user","post","user_id","channel","getChannel","channel_id","info","channelName","display_name","showFileName","filename","Object","keys","length","last_picture_update","isFileInfo","useEffect","useState","useDispatch","getFilePublicLink","selectFilePublicLink","OverlayTrigger","Tooltip","copyToClipboard","FilePreviewModalMainActions","tooltipPlacement","usedInside","selectedFilePublicLink","dispatch","publicLinkCopied","setPublicLinkCopied","enablePublicLink","copyPublicLink","closeButton","OVERLAY_TIME_DELAY","handleModalClose","publicTooltipMessage","publicLink","downloadLinkProps","download","fileURL","showOnlyClose","showPublicLink","showClose","defaultProps","FilePreviewModalFooter","actionProps","FilePreviewModalMainNav","leftArrow","handlePrev","rightArrow","handleNext","count","fileIndex","total","totalFiles","FilePreviewModalHeader","mainActions","actions","debounce","ZoomSettings","PopoverBar","zoomControls","wrappedZoomControls","showZoomControls","zoomResetButton","zoomOutButton","zoomInButton","scale","MIN_SCALE","handleZoomOut","maxWait","DEFAULT_SCALE","handleZoomReset","MAX_SCALE","handleZoomIn","Modal","getFileUrl","LoadingImagePreview","FileTypes","PDFPreview","lazy","KeyCodes","FilePreviewModal","imageIndex","fileInfos","showImage","isKeyPressed","RIGHT","LEFT","imageHeight","window","innerHeight","loaded","loadImage","index","fileType","getFileType","IMAGE","handleImageLoaded","completedPercentage","handleImageProgress","prevState","progress","showCloseBtn","newScale","Math","min","SCALE_DELTA","setScale","max","show","currentTarget","target","startIndex","fillArray","prevFileInfosCount","handleKeyPress","componentWillUnmount","removeEventListener","updatedState","PDF","fileName","fileDownloadUrl","dialogClassName","content","modalImageClass","zoomBar","SVG","VIDEO","AUDIO","handleBgClose","floor","pluginFilePreviewComponents","override","onExited","paddingLeft","onMouseEnterImage","onMouseLeaveImage","stopPropagation","postId"],"sourceRoot":""}